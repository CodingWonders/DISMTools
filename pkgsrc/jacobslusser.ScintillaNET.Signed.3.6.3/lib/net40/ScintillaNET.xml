<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ScintillaNET</name>
    </assembly>
    <members>
        <member name="T:ScintillaNET.Annotation">
            <summary>
            Visibility and location of annotations in a <see cref="T:ScintillaNET.Scintilla" /> control
            </summary>
        </member>
        <member name="F:ScintillaNET.Annotation.Hidden">
            <summary>
            Annotations are not displayed. This is the default.
            </summary>
        </member>
        <member name="F:ScintillaNET.Annotation.Standard">
            <summary>
            Annotations are drawn left justified with no adornment.
            </summary>
        </member>
        <member name="F:ScintillaNET.Annotation.Boxed">
            <summary>
            Annotations are indented to match the text and are surrounded by a box.
            </summary>
        </member>
        <member name="F:ScintillaNET.Annotation.Indented">
            <summary>
            Annotations are indented to match the text.
            </summary>
        </member>
        <member name="T:ScintillaNET.AutoCSelectionEventArgs">
            <summary>
            Provides data for the <see cref="E:ScintillaNET.Scintilla.AutoCSelection" /> event.
            </summary>
        </member>
        <member name="P:ScintillaNET.AutoCSelectionEventArgs.Char">
            <summary>
            Gets the fillup character that caused the completion.
            </summary>
            <returns>The fillup character used to cause the completion; otherwise, 0.</returns>
            <remarks>Only a <see cref="P:ScintillaNET.AutoCSelectionEventArgs.ListCompletionMethod" /> of <see cref="F:ScintillaNET.ListCompletionMethod.FillUp" /> will return a non-zero character.</remarks>
            <seealso cref="M:ScintillaNET.Scintilla.AutoCSetFillUps(System.String)" />
        </member>
        <member name="P:ScintillaNET.AutoCSelectionEventArgs.ListCompletionMethod">
            <summary>
            Gets a value indicating how the completion occurred.
            </summary>
            <returns>One of the <see cref="T:ScintillaNET.ListCompletionMethod" /> enumeration values.</returns>
        </member>
        <member name="P:ScintillaNET.AutoCSelectionEventArgs.Position">
            <summary>
            Gets the start position of the word being completed.
            </summary>
            <returns>The zero-based document position of the word being completed.</returns>
        </member>
        <member name="P:ScintillaNET.AutoCSelectionEventArgs.Text">
            <summary>
            Gets the text of the selected autocompletion item.
            </summary>
            <returns>The selected autocompletion item text.</returns>
        </member>
        <member name="M:ScintillaNET.AutoCSelectionEventArgs.#ctor(ScintillaNET.Scintilla,System.Int32,System.IntPtr,System.Int32,ScintillaNET.ListCompletionMethod)">
            <summary>
            Initializes a new instance of the <see cref="T:ScintillaNET.AutoCSelectionEventArgs" /> class.
            </summary>
            <param name="scintilla">The <see cref="T:ScintillaNET.Scintilla" /> control that generated this event.</param>
            <param name="bytePosition">The zero-based byte position within the document of the word being completed.</param>
            <param name="text">A pointer to the selected autocompletion text.</param>
            <param name="ch">The character that caused the completion.</param>
            <param name="listCompletionMethod">A value indicating the way in which the completion occurred.</param>
        </member>
        <member name="T:ScintillaNET.AutomaticFold">
            <summary>
            Configuration options for automatic code folding.
            </summary>
            <remarks>This enumeration has a FlagsAttribute attribute that allows a bitwise combination of its member values.</remarks>
        </member>
        <member name="F:ScintillaNET.AutomaticFold.None">
            <summary>
            Automatic folding is disabled. This is the default.
            </summary>
        </member>
        <member name="F:ScintillaNET.AutomaticFold.Show">
            <summary>
            Automatically show lines as needed. The <see cref="E:ScintillaNET.Scintilla.NeedShown" /> event is not raised when this value is used.
            </summary>
        </member>
        <member name="F:ScintillaNET.AutomaticFold.Click">
            <summary>
            Handle clicks in fold margin automatically. The <see cref="E:ScintillaNET.Scintilla.MarginClick" /> event is not raised for folding margins when this value is used.
            </summary>
        </member>
        <member name="F:ScintillaNET.AutomaticFold.Change">
            <summary>
            Show lines as needed when the fold structure is changed.
            </summary>
        </member>
        <member name="T:ScintillaNET.BeforeModificationEventArgs">
            <summary>
            Provides data for the <see cref="E:ScintillaNET.Scintilla.BeforeInsert" /> and <see cref="E:ScintillaNET.Scintilla.BeforeDelete" /> events.
            </summary>
        </member>
        <member name="P:ScintillaNET.BeforeModificationEventArgs.Position">
            <summary>
            Gets the zero-based document position where the modification will occur.
            </summary>
            <returns>The zero-based character position within the document where text will be inserted or deleted.</returns>
        </member>
        <member name="P:ScintillaNET.BeforeModificationEventArgs.Source">
            <summary>
            Gets the source of the modification.
            </summary>
            <returns>One of the <see cref="T:ScintillaNET.ModificationSource" /> enum values.</returns>
        </member>
        <member name="P:ScintillaNET.BeforeModificationEventArgs.Text">
            <summary>
            Gets the text being inserted or deleted.
            </summary>
            <returns>
            The text about to be inserted or deleted, or null when the the source of the modification is an undo/redo operation.
            </returns>
            <remarks>
            This property will return null when <see cref="P:ScintillaNET.BeforeModificationEventArgs.Source" /> is <see cref="F:ScintillaNET.ModificationSource.Undo" /> or <see cref="F:ScintillaNET.ModificationSource.Redo" />.
            </remarks>
        </member>
        <member name="M:ScintillaNET.BeforeModificationEventArgs.#ctor(ScintillaNET.Scintilla,ScintillaNET.ModificationSource,System.Int32,System.Int32,System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:ScintillaNET.BeforeModificationEventArgs" /> class.
            </summary>
            <param name="scintilla">The <see cref="T:ScintillaNET.Scintilla" /> control that generated this event.</param>
            <param name="source">The source of the modification.</param>
            <param name="bytePosition">The zero-based byte position within the document where text is being modified.</param>
            <param name="byteLength">The length in bytes of the text being modified.</param>
            <param name="text">A pointer to the text being inserted.</param>
        </member>
        <member name="T:ScintillaNET.CaretStyle">
            <summary>
            The caret visual style.
            </summary>
        </member>
        <member name="F:ScintillaNET.CaretStyle.Invisible">
            <summary>
            The caret is not displayed.
            </summary>
        </member>
        <member name="F:ScintillaNET.CaretStyle.Line">
            <summary>
            The caret is drawn as a vertical line.
            </summary>
        </member>
        <member name="F:ScintillaNET.CaretStyle.Block">
            <summary>
            The caret is drawn as a block.
            </summary>
        </member>
        <member name="T:ScintillaNET.ChangeAnnotationEventArgs">
            <summary>
            Provides data for the <see cref="E:ScintillaNET.Scintilla.ChangeAnnotation" /> event.
            </summary>
        </member>
        <member name="P:ScintillaNET.ChangeAnnotationEventArgs.Line">
            <summary>
            Gets the line index where the annotation changed.
            </summary>
            <returns>The zero-based line index where the annotation change occurred.</returns>
        </member>
        <member name="M:ScintillaNET.ChangeAnnotationEventArgs.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ScintillaNET.ChangeAnnotationEventArgs" /> class.
            </summary>
            <param name="line">The zero-based line index of the annotation that changed.</param>
        </member>
        <member name="T:ScintillaNET.CharAddedEventArgs">
            <summary>
            Provides data for the <see cref="E:ScintillaNET.Scintilla.CharAdded" /> event.
            </summary>
        </member>
        <member name="P:ScintillaNET.CharAddedEventArgs.Char">
            <summary>
            Gets the text character added to a <see cref="T:ScintillaNET.Scintilla" /> control.
            </summary>
            <returns>The character added.</returns>
        </member>
        <member name="M:ScintillaNET.CharAddedEventArgs.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ScintillaNET.CharAddedEventArgs" /> class.
            </summary>
            <param name="ch">The character added.</param>
        </member>
        <member name="T:ScintillaNET.Command">
            <summary>
            Actions which can be performed by the application or bound to keys in a <see cref="T:ScintillaNET.Scintilla" /> control.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.Default">
            <summary>
            When bound to keys performs the standard platform behavior.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.Null">
            <summary>
            Performs no action and when bound to keys prevents them from propagating to the parent window.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.LineDown">
            <summary>
            Moves the caret down one line.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.LineDownExtend">
            <summary>
            Extends the selection down one line.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.LineDownRectExtend">
            <summary>
            Extends the rectangular selection down one line.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.LineScrollDown">
            <summary>
            Scrolls down one line.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.LineUp">
            <summary>
            Moves the caret up one line.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.LineUpExtend">
            <summary>
            Extends the selection up one line.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.LineUpRectExtend">
            <summary>
            Extends the rectangular selection up one line.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.LineScrollUp">
            <summary>
            Scrolls up one line.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.ParaDown">
            <summary>
            Moves the caret down one paragraph.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.ParaDownExtend">
            <summary>
            Extends the selection down one paragraph.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.ParaUp">
            <summary>
            Moves the caret up one paragraph.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.ParaUpExtend">
            <summary>
            Extends the selection up one paragraph.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.CharLeft">
            <summary>
            Moves the caret left one character.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.CharLeftExtend">
            <summary>
            Extends the selection left one character.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.CharLeftRectExtend">
            <summary>
            Extends the rectangular selection left one character.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.CharRight">
            <summary>
            Moves the caret right one character.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.CharRightExtend">
            <summary>
            Extends the selection right one character.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.CharRightRectExtend">
            <summary>
            Extends the rectangular selection right one character.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.WordLeft">
            <summary>
            Moves the caret to the start of the previous word.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.WordLeftExtend">
            <summary>
            Extends the selection to the start of the previous word.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.WordRight">
            <summary>
            Moves the caret to the start of the next word.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.WordRightExtend">
            <summary>
            Extends the selection to the start of the next word.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.WordLeftEnd">
            <summary>
            Moves the caret to the end of the previous word.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.WordLeftEndExtend">
            <summary>
            Extends the selection to the end of the previous word.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.WordRightEnd">
            <summary>
            Moves the caret to the end of the next word.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.WordRightEndExtend">
            <summary>
            Extends the selection to the end of the next word.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.WordPartLeft">
            <summary>
            Moves the caret to the previous word segment (case change or underscore).
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.WordPartLeftExtend">
            <summary>
            Extends the selection to the previous word segment (case change or underscore).
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.WordPartRight">
            <summary>
            Moves the caret to the next word segment (case change or underscore).
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.WordPartRightExtend">
            <summary>
            Extends the selection to the next word segment (case change or underscore).
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.Home">
            <summary>
            Moves the caret to the start of the line.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.HomeExtend">
            <summary>
            Extends the selection to the start of the line.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.HomeRectExtend">
            <summary>
            Extends the rectangular selection to the start of the line.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.HomeDisplay">
            <summary>
            Moves the caret to the start of the display line.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.HomeDisplayExtend">
            <summary>
            Extends the selection to the start of the display line.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.HomeWrap">
            <summary>
            Moves the caret to the start of the display or document line.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.HomeWrapExtend">
            <summary>
            Extends the selection to the start of the display or document line.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.VcHome">
            <summary>
            Moves the caret to the first non-whitespace character of the line.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.VcHomeExtend">
            <summary>
            Extends the selection to the first non-whitespace character of the line.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.VcHomeRectExtend">
            <summary>
            Extends the rectangular selection to the first non-whitespace character of the line.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.VcHomeWrap">
            <summary>
            Moves the caret to the first non-whitespace character of the display or document line.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.VcHomeWrapExtend">
            <summary>
            Extends the selection to the first non-whitespace character of the display or document line.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.VcHomeDisplay">
            <summary>
            Moves the caret to the first non-whitespace character of the display line.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.VcHomeDisplayExtend">
            <summary>
            Extends the selection to the first non-whitespace character of the display line.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.LineEnd">
            <summary>
            Moves the caret to the end of the document line.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.LineEndExtend">
            <summary>
            Extends the selection to the end of the document line.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.LineEndRectExtend">
            <summary>
            Extends the rectangular selection to the end of the document line.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.LineEndDisplay">
            <summary>
            Moves the caret to the end of the display line.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.LineEndDisplayExtend">
            <summary>
            Extends the selection to the end of the display line.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.LineEndWrap">
            <summary>
            Moves the caret to the end of the display or document line.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.LineEndWrapExtend">
            <summary>
            Extends the selection to the end of the display or document line.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.DocumentStart">
            <summary>
            Moves the caret to the start of the document.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.DocumentStartExtend">
            <summary>
            Extends the selection to the start of the document.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.DocumentEnd">
            <summary>
            Moves the caret to the end of the document.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.DocumentEndExtend">
            <summary>
            Extends the selection to the end of the document.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.PageUp">
            <summary>
            Moves the caret up one page.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.PageUpExtend">
            <summary>
            Extends the selection up one page.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.PageUpRectExtend">
            <summary>
            Extends the rectangular selection up one page.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.PageDown">
            <summary>
            Moves the caret down one page.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.PageDownExtend">
            <summary>
            Extends the selection down one page.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.PageDownRectExtend">
            <summary>
            Extends the rectangular selection down one page.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.StutteredPageUp">
            <summary>
            Moves the caret up one window or page.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.StutteredPageUpExtend">
            <summary>
            Extends the selection up one window or page.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.StutteredPageDown">
            <summary>
            Moves the caret down one window or page.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.StutteredPageDownExtend">
            <summary>
            Extends the selection down one window or page.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.DeleteBack">
            <summary>
            Deletes the character left of the caret.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.DeleteBackNotLine">
            <summary>
            Deletes the character (excluding line breaks) left of the caret.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.DelWordLeft">
            <summary>
            Deletes from the caret to the start of the previous word.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.DelWordRight">
            <summary>
            Deletes from the caret to the start of the next word.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.DelWordRightEnd">
            <summary>
            Deletes from the caret to the end of the next word.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.DelLineLeft">
            <summary>
            Deletes the characters left of the caret to the start of the line.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.DelLineRight">
            <summary>
            Deletes the characters right of the caret to the start of the line.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.LineDelete">
            <summary>
            Deletes the current line.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.LineCut">
            <summary>
            Removes the current line and places it on the clipboard.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.LineCopy">
            <summary>
            Copies the current line and places it on the clipboard.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.LineTranspose">
            <summary>
            Transposes the current and previous lines.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.LineDuplicate">
            <summary>
            Duplicates the current line.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.Lowercase">
            <summary>
            Converts the selection to lowercase.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.Uppercase">
            <summary>
            Converts the selection to uppercase.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.Cancel">
            <summary>
            Cancels autocompletion, calltip display, and drops any additional selections.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.EditToggleOvertype">
            <summary>
            Toggles overtype. See <see cref="P:ScintillaNET.Scintilla.Overtype" />.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.NewLine">
            <summary>
            Inserts a newline character.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.FormFeed">
            <summary>
            Inserts a form feed character.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.Tab">
            <summary>
            Adds a tab (indent) character.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.BackTab">
            <summary>
            Removes a tab (indent) character from the start of a line.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.SelectionDuplicate">
            <summary>
            Duplicates the current selection.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.VerticalCenterCaret">
            <summary>
            Moves the caret vertically to the center of the screen.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.MoveSelectedLinesUp">
            <summary>
            Moves the selected lines up.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.MoveSelectedLinesDown">
            <summary>
            Moves the selected lines down.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.ScrollToStart">
            <summary>
            Scrolls to the start of the document without changing the selection.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.ScrollToEnd">
            <summary>
            Scrolls to the end of the document without changing the selection.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.ZoomIn">
            <summary>
            Command equivalent to <see cref="M:ScintillaNET.Scintilla.ZoomIn" />.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.ZoomOut">
            <summary>
            Command equivalent to <see cref="M:ScintillaNET.Scintilla.ZoomOut" />.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.Undo">
            <summary>
            Command equivalent to <see cref="M:ScintillaNET.Scintilla.Undo" />.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.Redo">
            <summary>
            Command equivalent to <see cref="M:ScintillaNET.Scintilla.Redo" />.
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.SwapMainAnchorCaret">
            <summary>
            Command equivalent to <see cref="M:ScintillaNET.Scintilla.SwapMainAnchorCaret" />
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.RotateSelection">
            <summary>
            Command equivalent to <see cref="M:ScintillaNET.Scintilla.RotateSelection" />
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.MultipleSelectAddNext">
            <summary>
            Command equivalent to <see cref="M:ScintillaNET.Scintilla.MultipleSelectAddNext" />
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.MultipleSelectAddEach">
            <summary>
            Command equivalent to <see cref="M:ScintillaNET.Scintilla.MultipleSelectAddEach" />
            </summary>
        </member>
        <member name="F:ScintillaNET.Command.SelectAll">
            <summary>
            Command equivalent to <see cref="M:ScintillaNET.Scintilla.SelectAll" />
            </summary>
        </member>
        <member name="T:ScintillaNET.CopyFormat">
            <summary>
            Specifies the clipboard formats to copy.
            </summary>
        </member>
        <member name="F:ScintillaNET.CopyFormat.Text">
            <summary>
            Copies text to the clipboard in Unicode format.
            </summary>
        </member>
        <member name="F:ScintillaNET.CopyFormat.Rtf">
            <summary>
            Copies text to the clipboard in Rich Text Format (RTF).
            </summary>
        </member>
        <member name="F:ScintillaNET.CopyFormat.Html">
            <summary>
            Copies text to the clipboard in HyperText Markup Language (HTML) format.
            </summary>
        </member>
        <member name="T:ScintillaNET.Document">
            <summary>
            A <see cref="T:ScintillaNET.Scintilla" /> document.
            </summary>
            <remarks>
            This is an opaque type, meaning it can be used by a <see cref="T:ScintillaNET.Scintilla" /> control but
            otherwise has no public members of its own.
            </remarks>
        </member>
        <member name="F:ScintillaNET.Document.Empty">
            <summary>
            A read-only field that represents an uninitialized document.
            </summary>
        </member>
        <member name="M:ScintillaNET.Document.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object.
            </summary>
            <param name="obj">An object to compare with this instance or null.</param>
            <returns>true if <paramref name="obj" /> is an instance of <see cref="T:ScintillaNET.Document" /> and equals the value of this instance; otherwise, false.</returns>
        </member>
        <member name="M:ScintillaNET.Document.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:ScintillaNET.Document.op_Equality(ScintillaNET.Document,ScintillaNET.Document)">
            <summary>
            Determines whether two specified instances of <see cref="T:ScintillaNET.Document" /> are equal.
            </summary>
            <param name="a">The first document to compare.</param>
            <param name="b">The second document to compare.</param>
            <returns>true if <paramref name="a" /> equals <paramref name="b" />; otherwise, false.</returns>
        </member>
        <member name="M:ScintillaNET.Document.op_Inequality(ScintillaNET.Document,ScintillaNET.Document)">
            <summary>
            Determines whether two specified instances of <see cref="T:ScintillaNET.Document" /> are not equal.
            </summary>
            <param name="a">The first document to compare.</param>
            <param name="b">The second document to compare.</param>
            <returns>true if <paramref name="a" /> does not equal <paramref name="b" />; otherwise, false.</returns>
        </member>
        <member name="T:ScintillaNET.DoubleClickEventArgs">
            <summary>
            Provides data for the <see cref="E:ScintillaNET.Scintilla.DoubleClick" /> event.
            </summary>
        </member>
        <member name="P:ScintillaNET.DoubleClickEventArgs.Line">
            <summary>
            Gets the line double clicked.
            </summary>
            <returns>The zero-based index of the double clicked line.</returns>
        </member>
        <member name="P:ScintillaNET.DoubleClickEventArgs.Modifiers">
            <summary>
            Gets the modifier keys (SHIFT, CTRL, ALT) held down when double clicked.
            </summary>
            <returns>A bitwise combination of the Keys enumeration indicating the modifier keys.</returns>
        </member>
        <member name="P:ScintillaNET.DoubleClickEventArgs.Position">
            <summary>
            Gets the zero-based document position of the text double clicked.
            </summary>
            <returns>
            The zero-based character position within the document of the double clicked text;
            otherwise, -1 if not a document position.
            </returns>
        </member>
        <member name="M:ScintillaNET.DoubleClickEventArgs.#ctor(ScintillaNET.Scintilla,System.Windows.Forms.Keys,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ScintillaNET.DoubleClickEventArgs" /> class.
            </summary>
            <param name="scintilla">The <see cref="T:ScintillaNET.Scintilla" /> control that generated this event.</param>
            <param name="modifiers">The modifier keys that where held down at the time of the double click.</param>
            <param name="bytePosition">The zero-based byte position of the double clicked text.</param>
            <param name="line">The zero-based line index of the double clicked text.</param>
        </member>
        <member name="T:ScintillaNET.DwellEventArgs">
            <summary>
            Provides data for the <see cref="E:ScintillaNET.Scintilla.DwellStart" /> and <see cref="E:ScintillaNET.Scintilla.DwellEnd" /> events.
            </summary>
        </member>
        <member name="P:ScintillaNET.DwellEventArgs.Position">
            <summary>
            Gets the zero-based document position where the mouse pointer was lingering.
            </summary>
            <returns>The nearest zero-based document position to where the mouse pointer was lingering.</returns>
        </member>
        <member name="P:ScintillaNET.DwellEventArgs.X">
            <summary>
            Gets the x-coordinate of the mouse pointer.
            </summary>
            <returns>The x-coordinate of the mouse pointer relative to the <see cref="T:ScintillaNET.Scintilla" /> control.</returns>
        </member>
        <member name="P:ScintillaNET.DwellEventArgs.Y">
            <summary>
            Gets the y-coordinate of the mouse pointer.
            </summary>
            <returns>The y-coordinate of the mouse pointer relative to the <see cref="T:ScintillaNET.Scintilla" /> control.</returns>
        </member>
        <member name="M:ScintillaNET.DwellEventArgs.#ctor(ScintillaNET.Scintilla,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ScintillaNET.DwellEventArgs" /> class.
            </summary>
            <param name="scintilla">The <see cref="T:ScintillaNET.Scintilla" /> control that generated this event.</param>
            <param name="bytePosition">The zero-based byte position within the document where the mouse pointer was lingering.</param>
            <param name="x">The x-coordinate of the mouse pointer relative to the <see cref="T:ScintillaNET.Scintilla" /> control.</param>
            <param name="y">The y-coordinate of the mouse pointer relative to the <see cref="T:ScintillaNET.Scintilla" /> control.</param>
        </member>
        <member name="T:ScintillaNET.EdgeMode">
            <summary>
            The long line edge display mode.
            </summary>
        </member>
        <member name="F:ScintillaNET.EdgeMode.None">
            <summary>
            Long lines are not indicated. This is the default.
            </summary>
        </member>
        <member name="F:ScintillaNET.EdgeMode.Line">
            <summary>
            Long lines are indicated with a vertical line.
            </summary>
        </member>
        <member name="F:ScintillaNET.EdgeMode.Background">
            <summary>
            Long lines are indicated with a background color.
            </summary>
        </member>
        <member name="F:ScintillaNET.EdgeMode.MultiLine">
            <summary>
            Similar to <see cref="F:ScintillaNET.EdgeMode.Line" /> except allows for multiple vertical lines to be visible using the <see cref="M:ScintillaNET.Scintilla.MultiEdgeAddLine(System.Int32,System.Drawing.Color)" /> method.
            </summary>
            <remarks><see cref="F:ScintillaNET.EdgeMode.Line" /> and <see cref="P:ScintillaNET.Scintilla.EdgeColumn" /> are completely independant of this mode.</remarks>
        </member>
        <member name="T:ScintillaNET.Eol">
            <summary>
            End-of-line format.
            </summary>
        </member>
        <member name="F:ScintillaNET.Eol.CrLf">
            <summary>
            Carriage Return, Line Feed pair "\r\n" (0x0D0A).
            </summary>
        </member>
        <member name="F:ScintillaNET.Eol.Cr">
            <summary>
            Carriage Return '\r' (0x0D).
            </summary>
        </member>
        <member name="F:ScintillaNET.Eol.Lf">
            <summary>
            Line Feed '\n' (0x0A).
            </summary>
        </member>
        <member name="T:ScintillaNET.FoldAction">
            <summary>
            Fold actions.
            </summary>
        </member>
        <member name="F:ScintillaNET.FoldAction.Contract">
            <summary>
            Contract the fold.
            </summary>
        </member>
        <member name="F:ScintillaNET.FoldAction.Expand">
            <summary>
            Expand the fold.
            </summary>
        </member>
        <member name="F:ScintillaNET.FoldAction.Toggle">
            <summary>
            Toggle between contracted and expanded.
            </summary>
        </member>
        <member name="T:ScintillaNET.FoldDisplayText">
            <summary>
            Display options for fold text tags.
            </summary>
        </member>
        <member name="F:ScintillaNET.FoldDisplayText.Hidden">
            <summary>
            Do not display the text tags. This is the default.
            </summary>
        </member>
        <member name="F:ScintillaNET.FoldDisplayText.Standard">
            <summary>
            Display the text tags.
            </summary>
        </member>
        <member name="F:ScintillaNET.FoldDisplayText.Boxed">
            <summary>
            Display the text tags with a box drawn around them.
            </summary>
        </member>
        <member name="T:ScintillaNET.FoldFlags">
            <summary>
            Additional display options for folds.
            </summary>
        </member>
        <member name="F:ScintillaNET.FoldFlags.LineBeforeExpanded">
            <summary>
            A line is drawn above if expanded.
            </summary>
        </member>
        <member name="F:ScintillaNET.FoldFlags.LineBeforeContracted">
            <summary>
            A line is drawn above if not expanded.
            </summary>
        </member>
        <member name="F:ScintillaNET.FoldFlags.LineAfterExpanded">
            <summary>
            A line is drawn below if expanded.
            </summary>
        </member>
        <member name="F:ScintillaNET.FoldFlags.LineAfterContracted">
            <summary>
            A line is drawn below if not expanded.
            </summary>
        </member>
        <member name="F:ScintillaNET.FoldFlags.LevelNumbers">
            <summary>
            Displays the hexadecimal fold levels in the margin to aid with debugging.
            This feature may change in the future.
            </summary>
        </member>
        <member name="F:ScintillaNET.FoldFlags.LineState">
            <summary>
            Displays the hexadecimal line state in the margin to aid with debugging. This flag
            cannot be used at the same time as the <see cref="F:ScintillaNET.FoldFlags.LevelNumbers" /> flag.
            </summary>
        </member>
        <member name="T:ScintillaNET.FoldLevelFlags">
            <summary>
            Flags for additional line fold level behavior.
            </summary>
        </member>
        <member name="F:ScintillaNET.FoldLevelFlags.White">
            <summary>
            Indicates that the line is blank and should be treated slightly different than its level may indicate;
            otherwise, blank lines should generally not be fold points.
            </summary>
        </member>
        <member name="F:ScintillaNET.FoldLevelFlags.Header">
            <summary>
            Indicates that the line is a header (fold point).
            </summary>
        </member>
        <member name="T:ScintillaNET.FontQuality">
            <summary>
            The font quality (antialiasing method) used to render text.
            </summary>
        </member>
        <member name="F:ScintillaNET.FontQuality.Default">
            <summary>
            Specifies that the character quality of the font does not matter; so the lowest quality can be used.
            This is the default.
            </summary>
        </member>
        <member name="F:ScintillaNET.FontQuality.NonAntiAliased">
            <summary>
            Specifies that anti-aliasing should not be used when rendering text.
            </summary>
        </member>
        <member name="F:ScintillaNET.FontQuality.AntiAliased">
            <summary>
            Specifies that anti-aliasing should be used when rendering text, if the font supports it.
            </summary>
        </member>
        <member name="F:ScintillaNET.FontQuality.LcdOptimized">
            <summary>
            Specifies that ClearType anti-aliasing should be used when rendering text, if the font supports it.
            </summary>
        </member>
        <member name="T:ScintillaNET.HotspotClickEventArgs">
            <summary>
            Provides data for the <see cref="E:ScintillaNET.Scintilla.HotspotClick" />, <see cref="E:ScintillaNET.Scintilla.HotspotDoubleClick" />,
            and <see cref="E:ScintillaNET.Scintilla.HotspotReleaseClick" /> events.
            </summary>
        </member>
        <member name="P:ScintillaNET.HotspotClickEventArgs.Modifiers">
            <summary>
            Gets the modifier keys (SHIFT, CTRL, ALT) held down when clicked.
            </summary>
            <returns>A bitwise combination of the Keys enumeration indicating the modifier keys.</returns>
            <remarks>Only the state of the CTRL key is reported in the <see cref="E:ScintillaNET.Scintilla.HotspotReleaseClick" /> event.</remarks>
        </member>
        <member name="P:ScintillaNET.HotspotClickEventArgs.Position">
            <summary>
            Gets the zero-based document position of the text clicked.
            </summary>
            <returns>The zero-based character position within the document of the clicked text.</returns>
        </member>
        <member name="M:ScintillaNET.HotspotClickEventArgs.#ctor(ScintillaNET.Scintilla,System.Windows.Forms.Keys,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ScintillaNET.HotspotClickEventArgs" /> class.
            </summary>
            <param name="scintilla">The <see cref="T:ScintillaNET.Scintilla" /> control that generated this event.</param>
            <param name="modifiers">The modifier keys that where held down at the time of the click.</param>
            <param name="bytePosition">The zero-based byte position of the clicked text.</param>
        </member>
        <member name="T:ScintillaNET.IdleStyling">
            <summary>
            Possible strategies for styling text using application idle time.
            </summary>
            <seealso cref="P:ScintillaNET.Scintilla.IdleStyling" />
        </member>
        <member name="F:ScintillaNET.IdleStyling.None">
            <summary>
            Syntax styling is performed for all the currently visible text before displaying it.
            This is the default.
            </summary>
        </member>
        <member name="F:ScintillaNET.IdleStyling.ToVisible">
            <summary>
            A small amount of styling is performed before display and then further styling is performed incrementally in the background as an idle-time task.
            This can improve initial display/scroll performance, but may result in the text initially appearing uncolored and then, some time later, it is colored.
            </summary>
        </member>
        <member name="F:ScintillaNET.IdleStyling.AfterVisible">
            <summary>
            Text after the currently visible portion may be styled as an idle-time task.
            This will not improve initial display/scroll performance, but may improve subsequent display/scroll performance.
            </summary>
        </member>
        <member name="F:ScintillaNET.IdleStyling.All">
            <summary>
            Text before and after the current visible text.
            This is a combination of <see cref="F:ScintillaNET.IdleStyling.ToVisible" /> and <see cref="F:ScintillaNET.IdleStyling.AfterVisible" />.
            </summary>
        </member>
        <member name="T:ScintillaNET.ILoader">
            <summary>
            Provides methods for loading and creating a <see cref="T:ScintillaNET.Document" /> on a background (non-UI) thread.
            </summary>
            <remarks>
            Internally an <see cref="T:ScintillaNET.ILoader" /> maintains a <see cref="T:ScintillaNET.Document" /> instance with a reference count of 1.
            You are responsible for ensuring the reference count eventually reaches 0 or memory leaks will occur.
            </remarks>
        </member>
        <member name="M:ScintillaNET.ILoader.AddData(System.Char[],System.Int32)">
            <summary>
            Adds the data specified to the internal document.
            </summary>
            <param name="data">The character buffer to copy to the new document.</param>
            <param name="length">The number of characters in <paramref name="data" /> to copy.</param>
            <returns>
            true if the data was added successfully; otherwise, false.
            A return value of false should be followed by a call to <see cref="M:ScintillaNET.ILoader.Release" />.
            </returns>
        </member>
        <member name="M:ScintillaNET.ILoader.ConvertToDocument">
            <summary>
            Returns the internal document.
            </summary>
            <returns>A <see cref="T:ScintillaNET.Document" /> containing the added text. The document has a reference count of 1.</returns>
        </member>
        <member name="M:ScintillaNET.ILoader.Release">
            <summary>
            Called to release the internal document when an error occurs using <see cref="M:ScintillaNET.ILoader.AddData(System.Char[],System.Int32)" /> or to abandon loading.
            </summary>
            <returns>
            The internal document reference count.
            A return value of 0 indicates that the document has been destroyed and all associated memory released.
            </returns>
        </member>
        <member name="T:ScintillaNET.IndentView">
            <summary>
            Options for displaying indentation guides in a <see cref="T:ScintillaNET.Scintilla" /> control.
            </summary>
            <remarks>Indentation guides can be styled using the <see cref="F:ScintillaNET.Style.IndentGuide" /> style.</remarks>
        </member>
        <member name="F:ScintillaNET.IndentView.None">
            <summary>
            No indentation guides are shown. This is the default.
            </summary>
        </member>
        <member name="F:ScintillaNET.IndentView.Real">
            <summary>
            Indentation guides are shown inside real indentation whitespace.
            </summary>
        </member>
        <member name="F:ScintillaNET.IndentView.LookForward">
            <summary>
            Indentation guides are shown beyond the actual indentation up to the level of the next non-empty line.
            If the previous non-empty line was a fold header then indentation guides are shown for one more level of indent than that line.
            This setting is good for Python.
            </summary>
        </member>
        <member name="F:ScintillaNET.IndentView.LookBoth">
            <summary>
            Indentation guides are shown beyond the actual indentation up to the level of the next non-empty line or previous non-empty line whichever is the greater.
            This setting is good for most languages.
            </summary>
        </member>
        <member name="T:ScintillaNET.Indicator">
            <summary>
            Represents an indicator in a <see cref="T:ScintillaNET.Scintilla" /> control.
            </summary>
        </member>
        <member name="F:ScintillaNET.Indicator.ValueBit">
            <summary>
            An OR mask to use with <see cref="P:ScintillaNET.Scintilla.IndicatorValue" /> and <see cref="F:ScintillaNET.IndicatorFlags.ValueFore" /> to indicate
            that the user-defined indicator value should be treated as a RGB color.
            </summary>
        </member>
        <member name="F:ScintillaNET.Indicator.ValueMask">
            <summary>
            An AND mask to use with <see cref="M:ScintillaNET.Indicator.ValueAt(System.Int32)" /> to retrieve the user-defined value as a RGB color when being treated as such.
            </summary>
        </member>
        <member name="M:ScintillaNET.Indicator.End(System.Int32)">
            <summary>
            Given a document position which is filled with this indicator, will return the document position
            where the use of this indicator ends.
            </summary>
            <param name="position">A zero-based document position using this indicator.</param>
            <returns>The zero-based document position where the use of this indicator ends.</returns>
            <remarks>
            Specifying a <paramref name="position" /> which is not filled with this indicator will cause this method
            to return the end position of the range where this indicator is not in use (the negative space). If this
            indicator is not in use anywhere within the document the return value will be 0.
            </remarks>
        </member>
        <member name="M:ScintillaNET.Indicator.Start(System.Int32)">
            <summary>
            Given a document position which is filled with this indicator, will return the document position
            where the use of this indicator starts.
            </summary>
            <param name="position">A zero-based document position using this indicator.</param>
            <returns>The zero-based document position where the use of this indicator starts.</returns>
            <remarks>
            Specifying a <paramref name="position" /> which is not filled with this indicator will cause this method
            to return the start position of the range where this indicator is not in use (the negative space). If this
            indicator is not in use anywhere within the document the return value will be 0.
            </remarks>
        </member>
        <member name="M:ScintillaNET.Indicator.ValueAt(System.Int32)">
            <summary>
            Returns the user-defined value for the indicator at the specified position.
            </summary>
            <param name="position">The zero-based document position to get the indicator value for.</param>
            <returns>The user-defined value at the specified <paramref name="position" />.</returns>
        </member>
        <member name="P:ScintillaNET.Indicator.Alpha">
            <summary>
            Gets or sets the alpha transparency of the indicator.
            </summary>
            <returns>
            The alpha transparency ranging from 0 (completely transparent)
            to 255 (no transparency). The default is 30.
            </returns>
        </member>
        <member name="P:ScintillaNET.Indicator.Flags">
            <summary>
            Gets or sets the indicator flags.
            </summary>
            <returns>
            A bitwise combination of the <see cref="T:ScintillaNET.IndicatorFlags" /> enumeration.
            The default is <see cref="F:ScintillaNET.IndicatorFlags.None" />.
            </returns>
        </member>
        <member name="P:ScintillaNET.Indicator.ForeColor">
            <summary>
            Gets or sets the color used to draw an indicator.
            </summary>
            <returns>The Color used to draw an indicator. The default varies.</returns>
            <remarks>Changing the <see cref="P:ScintillaNET.Indicator.ForeColor" /> property will reset the <see cref="P:ScintillaNET.Indicator.HoverForeColor" />.</remarks>
            <seealso cref="P:ScintillaNET.Indicator.HoverForeColor" />
        </member>
        <member name="P:ScintillaNET.Indicator.HoverForeColor">
            <summary>
            Gets or sets the color used to draw an indicator when the mouse or caret is over an indicator.
            </summary>
            <returns>
            The Color used to draw an indicator.
            By default, the hover style is equal to the regular <see cref="P:ScintillaNET.Indicator.ForeColor" />.
            </returns>
            <remarks>Changing the <see cref="P:ScintillaNET.Indicator.ForeColor" /> property will reset the <see cref="P:ScintillaNET.Indicator.HoverForeColor" />.</remarks>
            <seealso cref="P:ScintillaNET.Indicator.ForeColor" />
        </member>
        <member name="P:ScintillaNET.Indicator.HoverStyle">
            <summary>
            Gets or sets the indicator style used when the mouse or caret is over an indicator.
            </summary>
            <returns>
            One of the <see cref="T:ScintillaNET.IndicatorStyle" /> enumeration values.
            By default, the hover style is equal to the regular <see cref="P:ScintillaNET.Indicator.Style" />.
            </returns>
            <remarks>Changing the <see cref="P:ScintillaNET.Indicator.Style" /> property will reset the <see cref="P:ScintillaNET.Indicator.HoverStyle" />.</remarks>
            <seealso cref="P:ScintillaNET.Indicator.Style" />
        </member>
        <member name="P:ScintillaNET.Indicator.Index">
            <summary>
            Gets the zero-based indicator index this object represents.
            </summary>
            <returns>The indicator definition index within the <see cref="T:ScintillaNET.IndicatorCollection" />.</returns>
        </member>
        <member name="P:ScintillaNET.Indicator.OutlineAlpha">
            <summary>
            Gets or sets the alpha transparency of the indicator outline.
            </summary>
            <returns>
            The alpha transparency ranging from 0 (completely transparent)
            to 255 (no transparency). The default is 50.
            </returns>
        </member>
        <member name="P:ScintillaNET.Indicator.Style">
            <summary>
            Gets or sets the indicator style.
            </summary>
            <returns>One of the <see cref="T:ScintillaNET.IndicatorStyle" /> enumeration values. The default varies.</returns>
            <remarks>Changing the <see cref="P:ScintillaNET.Indicator.Style" /> property will reset the <see cref="P:ScintillaNET.Indicator.HoverStyle" />.</remarks>
            <seealso cref="P:ScintillaNET.Indicator.HoverStyle" />
        </member>
        <member name="P:ScintillaNET.Indicator.Under">
            <summary>
            Gets or sets whether indicators are drawn under or over text.
            </summary>
            <returns>true to draw the indicator under text; otherwise, false. The default is false.</returns>
            <remarks>Drawing indicators under text requires <see cref="F:ScintillaNET.Phases.One" /> or <see cref="F:ScintillaNET.Phases.Multiple" /> drawing.</remarks>
        </member>
        <member name="M:ScintillaNET.Indicator.#ctor(ScintillaNET.Scintilla,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ScintillaNET.Indicator" /> class.
            </summary>
            <param name="scintilla">The <see cref="T:ScintillaNET.Scintilla" /> control that created this indicator.</param>
            <param name="index">The index of this style within the <see cref="T:ScintillaNET.IndicatorCollection" /> that created it.</param>
        </member>
        <member name="T:ScintillaNET.IndicatorReleaseEventArgs">
            <summary>
            Provides data for the <see cref="E:ScintillaNET.Scintilla.IndicatorRelease" /> event.
            </summary>
        </member>
        <member name="P:ScintillaNET.IndicatorReleaseEventArgs.Position">
            <summary>
            Gets the zero-based document position of the text clicked.
            </summary>
            <returns>The zero-based character position within the document of the clicked text.</returns>
        </member>
        <member name="M:ScintillaNET.IndicatorReleaseEventArgs.#ctor(ScintillaNET.Scintilla,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ScintillaNET.IndicatorReleaseEventArgs" /> class.
            </summary>
            <param name="scintilla">The <see cref="T:ScintillaNET.Scintilla" /> control that generated this event.</param>
            <param name="bytePosition">The zero-based byte position of the clicked text.</param>
        </member>
        <member name="T:ScintillaNET.IndicatorClickEventArgs">
            <summary>
            Provides data for the <see cref="E:ScintillaNET.Scintilla.IndicatorClick" /> event.
            </summary>
        </member>
        <member name="P:ScintillaNET.IndicatorClickEventArgs.Modifiers">
            <summary>
            Gets the modifier keys (SHIFT, CTRL, ALT) held down when clicked.
            </summary>
            <returns>A bitwise combination of the Keys enumeration indicating the modifier keys.</returns>
        </member>
        <member name="M:ScintillaNET.IndicatorClickEventArgs.#ctor(ScintillaNET.Scintilla,System.Windows.Forms.Keys,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ScintillaNET.IndicatorClickEventArgs" /> class.
            </summary>
            <param name="scintilla">The <see cref="T:ScintillaNET.Scintilla" /> control that generated this event.</param>
            <param name="modifiers">The modifier keys that where held down at the time of the click.</param>
            <param name="bytePosition">The zero-based byte position of the clicked text.</param>
        </member>
        <member name="T:ScintillaNET.IndicatorCollection">
            <summary>
            An immutable collection of indicators in a <see cref="T:ScintillaNET.Scintilla" /> control.
            </summary>
        </member>
        <member name="M:ScintillaNET.IndicatorCollection.GetEnumerator">
            <summary>
            Provides an enumerator that iterates through the collection.
            </summary>
            <returns>An object that contains all <see cref="T:ScintillaNET.Indicator" /> objects within the <see cref="T:ScintillaNET.IndicatorCollection" />.</returns>
        </member>
        <member name="P:ScintillaNET.IndicatorCollection.Count">
            <summary>
            Gets the number of indicators.
            </summary>
            <returns>The number of indicators in the <see cref="T:ScintillaNET.IndicatorCollection" />.</returns>
        </member>
        <member name="P:ScintillaNET.IndicatorCollection.Item(System.Int32)">
            <summary>
            Gets an <see cref="T:ScintillaNET.Indicator" /> object at the specified index.
            </summary>
            <param name="index">The indicator index.</param>
            <returns>An object representing the indicator at the specified <paramref name="index" />.</returns>
            <remarks>
            Indicators 0 through 7 are used by lexers.
            Indicators 32 through 35 are used for IME.
            </remarks>
        </member>
        <member name="M:ScintillaNET.IndicatorCollection.#ctor(ScintillaNET.Scintilla)">
            <summary>
            Initializes a new instance of the <see cref="T:ScintillaNET.IndicatorCollection" /> class.
            </summary>
            <param name="scintilla">The <see cref="T:ScintillaNET.Scintilla" /> control that created this collection.</param>
        </member>
        <member name="T:ScintillaNET.IndicatorFlags">
            <summary>
            Flags associated with a <see cref="T:ScintillaNET.Indicator" />.
            </summary>
            <remarks>This enumeration has a FlagsAttribute attribute that allows a bitwise combination of its member values.</remarks>
        </member>
        <member name="F:ScintillaNET.IndicatorFlags.None">
            <summary>
            No flags. This is the default.
            </summary>
        </member>
        <member name="F:ScintillaNET.IndicatorFlags.ValueFore">
            <summary>
            When set, will treat an indicator value as a RGB color that has been OR'd with <see cref="F:ScintillaNET.Indicator.ValueBit" />
            and will use that instead of the value specified in the <see cref="P:ScintillaNET.Indicator.ForeColor" /> property. This allows
            an indicator to display more than one color.
            </summary>
        </member>
        <member name="T:ScintillaNET.IndicatorStyle">
            <summary>
            The visual appearance of an indicator.
            </summary>
        </member>
        <member name="F:ScintillaNET.IndicatorStyle.Plain">
            <summary>
            Underlined with a single, straight line.
            </summary>
        </member>
        <member name="F:ScintillaNET.IndicatorStyle.Squiggle">
            <summary>
            A squiggly underline. Requires 3 pixels of descender space.
            </summary>
        </member>
        <member name="F:ScintillaNET.IndicatorStyle.TT">
            <summary>
            A line of small T shapes.
            </summary>
        </member>
        <member name="F:ScintillaNET.IndicatorStyle.Diagonal">
            <summary>
            Diagonal hatching.
            </summary>
        </member>
        <member name="F:ScintillaNET.IndicatorStyle.Strike">
            <summary>
            Strike out.
            </summary>
        </member>
        <member name="F:ScintillaNET.IndicatorStyle.Hidden">
            <summary>
            An indicator with no visual effect.
            </summary>
        </member>
        <member name="F:ScintillaNET.IndicatorStyle.Box">
            <summary>
            A rectangle around the text.
            </summary>
        </member>
        <member name="F:ScintillaNET.IndicatorStyle.RoundBox">
            <summary>
            A rectangle around the text with rounded corners. The rectangle outline and fill transparencies can be adjusted using
            <see cref="P:ScintillaNET.Indicator.Alpha" /> and <see cref="P:ScintillaNET.Indicator.OutlineAlpha" />.
            </summary>
        </member>
        <member name="F:ScintillaNET.IndicatorStyle.StraightBox">
            <summary>
            A rectangle around the text. The rectangle outline and fill transparencies can be adjusted using
            <see cref="P:ScintillaNET.Indicator.Alpha" /> and <see cref="P:ScintillaNET.Indicator.OutlineAlpha"/>.
            </summary>
        </member>
        <member name="F:ScintillaNET.IndicatorStyle.Dash">
            <summary>
            A dashed underline.
            </summary>
        </member>
        <member name="F:ScintillaNET.IndicatorStyle.Dots">
            <summary>
            A dotted underline.
            </summary>
        </member>
        <member name="F:ScintillaNET.IndicatorStyle.SquiggleLow">
            <summary>
            Similar to <see cref="F:ScintillaNET.IndicatorStyle.Squiggle" /> but only using 2 vertical pixels so will fit under small fonts.
            </summary>
        </member>
        <member name="F:ScintillaNET.IndicatorStyle.DotBox">
            <summary>
            A dotted rectangle around the text. The dots transparencies can be adjusted using
            <see cref="P:ScintillaNET.Indicator.Alpha" /> and <see cref="P:ScintillaNET.Indicator.OutlineAlpha" />.
            </summary>
        </member>
        <member name="F:ScintillaNET.IndicatorStyle.CompositionThick">
            <summary>
            A 2-pixel thick underline with 1 pixel insets on either side.
            </summary>
        </member>
        <member name="F:ScintillaNET.IndicatorStyle.CompositionThin">
            <summary>
            A 1-pixel thick underline with 1 pixel insets on either side.
            </summary>
        </member>
        <member name="F:ScintillaNET.IndicatorStyle.FullBox">
            <summary>
            A rectangle around the entire character area. The rectangle outline and fill transparencies can be adjusted using
            <see cref="P:ScintillaNET.Indicator.Alpha" /> and <see cref="P:ScintillaNET.Indicator.OutlineAlpha"/>.
            </summary>
        </member>
        <member name="F:ScintillaNET.IndicatorStyle.TextFore">
            <summary>
            An indicator that will change the foreground color of text to the foreground color of the indicator.
            </summary>
        </member>
        <member name="F:ScintillaNET.IndicatorStyle.Point">
            <summary>
            A triangle below the start of the indicator range.
            </summary>
        </member>
        <member name="F:ScintillaNET.IndicatorStyle.PointCharacter">
            <summary>
            A triangle below the center of the first character of the indicator range.
            </summary>
        </member>
        <member name="T:ScintillaNET.InsertCheckEventArgs">
            <summary>
            Provides data for the <see cref="E:ScintillaNET.Scintilla.InsertCheck" /> event.
            </summary>
        </member>
        <member name="P:ScintillaNET.InsertCheckEventArgs.Position">
            <summary>
            Gets the zero-based document position where text will be inserted.
            </summary>
            <returns>The zero-based character position within the document where text will be inserted.</returns>
        </member>
        <member name="P:ScintillaNET.InsertCheckEventArgs.Text">
            <summary>
            Gets or sets the text being inserted.
            </summary>
            <returns>The text being inserted into the document.</returns>
        </member>
        <member name="M:ScintillaNET.InsertCheckEventArgs.#ctor(ScintillaNET.Scintilla,System.Int32,System.Int32,System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:ScintillaNET.InsertCheckEventArgs" /> class.
            </summary>
            <param name="scintilla">The <see cref="T:ScintillaNET.Scintilla" /> control that generated this event.</param>
            <param name="bytePosition">The zero-based byte position within the document where text is being inserted.</param>
            <param name="byteLength">The length in bytes of the inserted text.</param>
            <param name="text">A pointer to the text being inserted.</param>
        </member>
        <member name="T:ScintillaNET.Lexer">
            <summary>
            Specifies the lexer to use for syntax highlighting in a <see cref="T:ScintillaNET.Scintilla" /> control.
            </summary>
        </member>
        <member name="F:ScintillaNET.Lexer.Container">
            <summary>
            Lexing is performed by the <see cref="T:ScintillaNET.Scintilla" /> control container (host) using
            the <see cref="E:ScintillaNET.Scintilla.StyleNeeded" /> event.
            </summary>
        </member>
        <member name="F:ScintillaNET.Lexer.Null">
            <summary>
            No lexing should be performed.
            </summary>
        </member>
        <member name="F:ScintillaNET.Lexer.Ada">
            <summary>
            The Ada (95) language lexer.
            </summary>
        </member>
        <member name="F:ScintillaNET.Lexer.Asm">
            <summary>
            The assembly language lexer.
            </summary>
        </member>
        <member name="F:ScintillaNET.Lexer.Batch">
            <summary>
            The batch file lexer.
            </summary>
        </member>
        <member name="F:ScintillaNET.Lexer.Cpp">
            <summary>
            The C language family (C++, C, C#, Java, JavaScript, etc...) lexer.
            </summary>
        </member>
        <member name="F:ScintillaNET.Lexer.Css">
            <summary>
            The Cascading Style Sheets (CSS, SCSS) lexer.
            </summary>
        </member>
        <member name="F:ScintillaNET.Lexer.Fortran">
            <summary>
            The Fortran language lexer.
            </summary>
        </member>
        <member name="F:ScintillaNET.Lexer.FreeBasic">
            <summary>
            The FreeBASIC language lexer.
            </summary>
        </member>
        <member name="F:ScintillaNET.Lexer.Html">
            <summary>
            The HyperText Markup Language (HTML) lexer.
            </summary>
        </member>
        <member name="F:ScintillaNET.Lexer.Json">
            <summary>
            JavaScript Object Notation (JSON) lexer.
            </summary>
        </member>
        <member name="F:ScintillaNET.Lexer.Lisp">
            <summary>
            The Lisp language lexer.
            </summary>
        </member>
        <member name="F:ScintillaNET.Lexer.Lua">
            <summary>
            The Lua scripting language lexer.
            </summary>
        </member>
        <member name="F:ScintillaNET.Lexer.Pascal">
            <summary>
            The Pascal language lexer.
            </summary>
        </member>
        <member name="F:ScintillaNET.Lexer.Perl">
            <summary>
            The Perl language lexer.
            </summary>
        </member>
        <member name="F:ScintillaNET.Lexer.PhpScript">
            <summary>
            The PHP: Hypertext Preprocessor (PHP) script lexer.
            </summary>
        </member>
        <member name="F:ScintillaNET.Lexer.PowerShell">
            <summary>
            PowerShell script lexer.
            </summary>
        </member>
        <member name="F:ScintillaNET.Lexer.Properties">
            <summary>
            Properties file (INI) lexer.
            </summary>
        </member>
        <member name="F:ScintillaNET.Lexer.PureBasic">
            <summary>
            The PureBasic language lexer.
            </summary>
        </member>
        <member name="F:ScintillaNET.Lexer.Python">
            <summary>
            The Python language lexer.
            </summary>
        </member>
        <member name="F:ScintillaNET.Lexer.Ruby">
            <summary>
            The Ruby language lexer.
            </summary>
        </member>
        <member name="F:ScintillaNET.Lexer.Smalltalk">
            <summary>
            The SmallTalk language lexer.
            </summary>
        </member>
        <member name="F:ScintillaNET.Lexer.Sql">
            <summary>
            The Structured Query Language (SQL) lexer.
            </summary>
        </member>
        <member name="F:ScintillaNET.Lexer.Vb">
            <summary>
            The Visual Basic (VB) lexer.
            </summary>
        </member>
        <member name="F:ScintillaNET.Lexer.VbScript">
            <summary>
            The Visual Basic Script (VBScript) lexer.
            </summary>
        </member>
        <member name="F:ScintillaNET.Lexer.Verilog">
            <summary>
            The Verilog hardware description language lexer.
            </summary>
        </member>
        <member name="F:ScintillaNET.Lexer.Xml">
            <summary>
            The Extensible Markup Language (XML) lexer.
            </summary>
        </member>
        <member name="F:ScintillaNET.Lexer.BlitzBasic">
            <summary>
            The Blitz (Blitz3D, BlitzMax, etc...) variant of Basic lexer.
            </summary>
        </member>
        <member name="F:ScintillaNET.Lexer.Markdown">
            <summary>
            The Markdown syntax lexer.
            </summary>
        </member>
        <member name="F:ScintillaNET.Lexer.R">
            <summary>
            The R programming language lexer.
            </summary>
        </member>
        <member name="T:ScintillaNET.Line">
            <summary>
            Represents a line of text in a <see cref="T:ScintillaNET.Scintilla" /> control.
            </summary>
        </member>
        <member name="M:ScintillaNET.Line.EnsureVisible">
            <summary>
            Expands any parent folds to ensure the line is visible.
            </summary>
        </member>
        <member name="M:ScintillaNET.Line.FoldChildren(ScintillaNET.FoldAction)">
            <summary>
            Performs the specified fold action on the current line and all child lines.
            </summary>
            <param name="action">One of the <see cref="T:ScintillaNET.FoldAction" /> enumeration values.</param>
        </member>
        <member name="M:ScintillaNET.Line.FoldLine(ScintillaNET.FoldAction)">
            <summary>
            Performs the specified fold action on the current line.
            </summary>
            <param name="action">One of the <see cref="T:ScintillaNET.FoldAction" /> enumeration values.</param>
        </member>
        <member name="M:ScintillaNET.Line.GetLastChild(System.Int32)">
            <summary>
            Searches for the next line that has a folding level that is less than or equal to <paramref name="level" />
            and returns the previous line index.
            </summary>
            <param name="level">The level of the line to search for. A value of -1 will use the current line <see cref="P:ScintillaNET.Line.FoldLevel" />.</param>
            <returns>
            The zero-based index of the next line that has a <see cref="P:ScintillaNET.Line.FoldLevel" /> less than or equal
            to <paramref name="level" />. If the current line is a fold point and <paramref name="level"/> is -1 the
            index returned is the last line that would be made visible or hidden by toggling the fold state.
            </returns>
        </member>
        <member name="M:ScintillaNET.Line.Goto">
            <summary>
            Navigates the caret to the start of the line.
            </summary>
            <remarks>Any selection is discarded.</remarks>
        </member>
        <member name="M:ScintillaNET.Line.MarkerAdd(System.Int32)">
            <summary>
            Adds the specified <see cref="T:ScintillaNET.Marker" /> to the line.
            </summary>
            <param name="marker">The zero-based index of the marker to add to the line.</param>
            <returns>A <see cref="T:ScintillaNET.MarkerHandle" /> which can be used to track the line.</returns>
            <remarks>This method does not check if the line already contains the <paramref name="marker" />.</remarks>
        </member>
        <member name="M:ScintillaNET.Line.MarkerAddSet(System.UInt32)">
            <summary>
            Adds one or more markers to the line in a single call using a bit mask.
            </summary>
            <param name="markerMask">An unsigned 32-bit value with each bit cooresponding to one of the 32 zero-based <see cref="T:ScintillaNET.Margin" /> indexes to add.</param>
        </member>
        <member name="M:ScintillaNET.Line.MarkerDelete(System.Int32)">
            <summary>
            Removes the specified <see cref="T:ScintillaNET.Marker" /> from the line.
            </summary>
            <param name="marker">The zero-based index of the marker to remove from the line or -1 to delete all markers from the line.</param>
            <remarks>If the same marker has been added to the line more than once, this will delete one copy each time it is used.</remarks>
        </member>
        <member name="M:ScintillaNET.Line.MarkerGet">
            <summary>
            Returns a bit mask indicating which markers are present on the line.
            </summary>
            <returns>An unsigned 32-bit value with each bit cooresponding to one of the 32 zero-based <see cref="T:ScintillaNET.Marker" /> indexes.</returns>
        </member>
        <member name="M:ScintillaNET.Line.MarkerNext(System.UInt32)">
            <summary>
            Efficiently searches from the current line forward to the end of the document for the specified markers.
            </summary>
            <param name="markerMask">An unsigned 32-bit value with each bit cooresponding to one of the 32 zero-based <see cref="T:ScintillaNET.Margin" /> indexes.</param>
            <returns>If found, the zero-based line index containing one of the markers in <paramref name="markerMask" />; otherwise, -1.</returns>
            <remarks>For example, the mask for marker index 10 is 1 shifted left 10 times (1 &lt;&lt; 10).</remarks>
        </member>
        <member name="M:ScintillaNET.Line.MarkerPrevious(System.UInt32)">
            <summary>
            Efficiently searches from the current line backward to the start of the document for the specified markers.
            </summary>
            <param name="markerMask">An unsigned 32-bit value with each bit cooresponding to one of the 32 zero-based <see cref="T:ScintillaNET.Margin" /> indexes.</param>
            <returns>If found, the zero-based line index containing one of the markers in <paramref name="markerMask" />; otherwise, -1.</returns>
            <remarks>For example, the mask for marker index 10 is 1 shifted left 10 times (1 &lt;&lt; 10).</remarks>
        </member>
        <member name="M:ScintillaNET.Line.ToggleFold">
            <summary>
            Toggles the folding state of the line; expanding or contracting all child lines.
            </summary>
            <remarks>The line must be set as a <see cref="F:ScintillaNET.FoldLevelFlags.Header" />.</remarks>
            <seealso cref="M:ScintillaNET.Line.ToggleFoldShowText(System.String)"/>
        </member>
        <member name="M:ScintillaNET.Line.ToggleFoldShowText(System.String)">
            <summary>
            Toggles the folding state of the line; expanding or contracting all child lines, and specifies the text tag to display to the right of the fold.
            </summary>
            <param name="text">The text tag to show to the right of the folded text.</param>
            <remarks>The display of fold text tags are determined by the <see cref="M:ScintillaNET.Scintilla.FoldDisplayTextSetStyle(ScintillaNET.FoldDisplayText)" /> method.</remarks>
            <seealso cref="M:ScintillaNET.Scintilla.FoldDisplayTextSetStyle(ScintillaNET.FoldDisplayText)" />
        </member>
        <member name="P:ScintillaNET.Line.AnnotationLines">
            <summary>
            Gets the number of annotation lines of text.
            </summary>
            <returns>The number of annotation lines.</returns>
        </member>
        <member name="P:ScintillaNET.Line.AnnotationStyle">
            <summary>
            Gets or sets the style of the annotation text.
            </summary>
            <returns>
            The zero-based index of the annotation text <see cref="T:ScintillaNET.Style" /> or 256 when <see cref="P:ScintillaNET.Line.AnnotationStyles" />
            has been used to set individual character styles.
            </returns>
            <seealso cref="P:ScintillaNET.Line.AnnotationStyles" />
        </member>
        <member name="P:ScintillaNET.Line.AnnotationStyles">
            <summary>
            Gets or sets an array of style indexes corresponding to each charcter in the <see cref="P:ScintillaNET.Line.AnnotationText" />
            so that each character may be individually styled.
            </summary>
            <returns>
            An array of <see cref="T:ScintillaNET.Style" /> indexes corresponding with each annotation text character or an uninitialized
            array when <see cref="P:ScintillaNET.Line.AnnotationStyle" /> has been used to set a single style for all characters.
            </returns>
            <remarks>
            <see cref="P:ScintillaNET.Line.AnnotationText" /> must be set prior to setting this property.
            The <paramref name="value" /> specified should have a length equal to the <see cref="P:ScintillaNET.Line.AnnotationText" /> length to properly style all characters.
            </remarks>
            <seealso cref="P:ScintillaNET.Line.AnnotationStyle" />
        </member>
        <member name="P:ScintillaNET.Line.AnnotationText">
            <summary>
            Gets or sets the line annotation text.
            </summary>
            <returns>A String representing the line annotation text.</returns>
        </member>
        <member name="P:ScintillaNET.Line.ContractedFoldNext">
            <summary>
            Searches from the current line to find the index of the next contracted fold header.
            </summary>
            <returns>The zero-based line index of the next contracted folder header.</returns>
            <remarks>If the current line is contracted the current line index is returned.</remarks>
        </member>
        <member name="P:ScintillaNET.Line.DisplayIndex">
            <summary>
            Gets the zero-based index of the line as displayed in a <see cref="T:ScintillaNET.Scintilla" /> control
            taking into consideration folded (hidden) lines.
            </summary>
            <returns>The zero-based display line index.</returns>
            <seealso cref="M:ScintillaNET.Scintilla.DocLineFromVisible(System.Int32)" />
        </member>
        <member name="P:ScintillaNET.Line.EndPosition">
            <summary>
            Gets the zero-based character position in the document where the line ends (exclusive).
            </summary>
            <returns>The equivalent of <see cref="P:ScintillaNET.Line.Position" /> + <see cref="P:ScintillaNET.Line.Length" />.</returns>
        </member>
        <member name="P:ScintillaNET.Line.Expanded">
            <summary>
            Gets or sets the expanded state (not the visible state) of the line.
            </summary>
            <remarks>
            For toggling the fold state of a single line the <see cref="M:ScintillaNET.Line.ToggleFold" /> method should be used.
            This property is useful for toggling the state of many folds without updating the display until finished.
            </remarks>
            <seealso cref="M:ScintillaNET.Line.ToggleFold" />
        </member>
        <member name="P:ScintillaNET.Line.FoldLevel">
            <summary>
            Gets or sets the fold level of the line.
            </summary>
            <returns>The fold level ranging from 0 to 4095. The default is 1024.</returns>
        </member>
        <member name="P:ScintillaNET.Line.FoldLevelFlags">
            <summary>
            Gets or sets the fold level flags.
            </summary>
            <returns>A bitwise combination of the <see cref="P:ScintillaNET.Line.FoldLevelFlags" /> enumeration.</returns>
        </member>
        <member name="P:ScintillaNET.Line.FoldParent">
            <summary>
            Gets the zero-based line index of the first line before the current line that is marked as
            <see cref="F:ScintillaNET.FoldLevelFlags.Header" /> and has a <see cref="P:ScintillaNET.Line.FoldLevel" /> less than the current line.
            </summary>
            <returns>The zero-based line index of the fold parent if present; otherwise, -1.</returns>
        </member>
        <member name="P:ScintillaNET.Line.Height">
            <summary>
            Gets the height of the line in pixels.
            </summary>
            <returns>The height in pixels of the line.</returns>
            <remarks>Currently all lines are the same height.</remarks>
        </member>
        <member name="P:ScintillaNET.Line.Index">
            <summary>
            Gets the line index.
            </summary>
            <returns>The zero-based line index within the <see cref="T:ScintillaNET.LineCollection" /> that created it.</returns>
        </member>
        <member name="P:ScintillaNET.Line.Length">
            <summary>
            Gets the length of the line.
            </summary>
            <returns>The number of characters in the line including any end of line characters.</returns>
        </member>
        <member name="P:ScintillaNET.Line.MarginStyle">
            <summary>
            Gets or sets the style of the margin text in a <see cref="F:ScintillaNET.MarginType.Text" /> or <see cref="F:ScintillaNET.MarginType.RightText" /> margin.
            </summary>
            <returns>
            The zero-based index of the margin text <see cref="T:ScintillaNET.Style" /> or 256 when <see cref="P:ScintillaNET.Line.MarginStyles" />
            has been used to set individual character styles.
            </returns>
            <seealso cref="P:ScintillaNET.Line.MarginStyles" />
        </member>
        <member name="P:ScintillaNET.Line.MarginStyles">
            <summary>
            Gets or sets an array of style indexes corresponding to each charcter in the <see cref="P:ScintillaNET.Line.MarginText" />
            so that each character may be individually styled.
            </summary>
            <returns>
            An array of <see cref="T:ScintillaNET.Style" /> indexes corresponding with each margin text character or an uninitialized
            array when <see cref="P:ScintillaNET.Line.MarginStyle" /> has been used to set a single style for all characters.
            </returns>
            <remarks>
            <see cref="P:ScintillaNET.Line.MarginText" /> must be set prior to setting this property.
            The <paramref name="value" /> specified should have a length equal to the <see cref="P:ScintillaNET.Line.MarginText" /> length to properly style all characters.
            </remarks>
            <seealso cref="P:ScintillaNET.Line.MarginStyle" />
        </member>
        <member name="P:ScintillaNET.Line.MarginText">
            <summary>
            Gets or sets the text displayed in the line margin when the margin type is
            <see cref="F:ScintillaNET.MarginType.Text" /> or <see cref="F:ScintillaNET.MarginType.RightText" />.
            </summary>
            <returns>The text displayed in the line margin.</returns>
        </member>
        <member name="P:ScintillaNET.Line.Position">
            <summary>
            Gets the zero-based character position in the document where the line begins.
            </summary>
            <returns>The document position of the first character in the line.</returns>
        </member>
        <member name="P:ScintillaNET.Line.Text">
            <summary>
            Gets the line text.
            </summary>
            <returns>A string representing the document line.</returns>
            <remarks>The returned text includes any end of line characters.</remarks>
        </member>
        <member name="P:ScintillaNET.Line.Indentation">
            <summary>
            Sets or gets the line indentation.
            </summary>
            <returns>The indentation measured in character columns, which corresponds to the width of space characters.</returns>
        </member>
        <member name="P:ScintillaNET.Line.Visible">
            <summary>
            Gets a value indicating whether the line is visible.
            </summary>
            <returns>true if the line is visible; otherwise, false.</returns>
            <seealso cref="M:ScintillaNET.Scintilla.ShowLines(System.Int32,System.Int32)" />
            <seealso cref="M:ScintillaNET.Scintilla.HideLines(System.Int32,System.Int32)" />
        </member>
        <member name="P:ScintillaNET.Line.WrapCount">
            <summary>
            Gets the number of display lines this line would occupy when wrapping is enabled.
            </summary>
            <returns>The number of display lines needed to wrap the current document line.</returns>
        </member>
        <member name="M:ScintillaNET.Line.#ctor(ScintillaNET.Scintilla,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ScintillaNET.Line" /> class.
            </summary>
            <param name="scintilla">The <see cref="T:ScintillaNET.Scintilla" /> control that created this line.</param>
            <param name="index">The index of this line within the <see cref="T:ScintillaNET.LineCollection" /> that created it.</param>
        </member>
        <member name="T:ScintillaNET.LineCollection">
            <summary>
            An immutable collection of lines of text in a <see cref="T:ScintillaNET.Scintilla" /> control.
            </summary>
        </member>
        <member name="M:ScintillaNET.LineCollection.AdjustLineLength(System.Int32,System.Int32)">
            <summary>
            Adjust the number of CHARACTERS in a line.
            </summary>
        </member>
        <member name="M:ScintillaNET.LineCollection.ByteToCharPosition(System.Int32)">
            <summary>
            Converts a BYTE offset to a CHARACTER offset.
            </summary>
        </member>
        <member name="M:ScintillaNET.LineCollection.CharLineLength(System.Int32)">
            <summary>
            Returns the number of CHARACTERS in a line.
            </summary>
        </member>
        <member name="M:ScintillaNET.LineCollection.CharPositionFromLine(System.Int32)">
            <summary>
            Returns the CHARACTER offset where the line begins.
            </summary>
        </member>
        <member name="M:ScintillaNET.LineCollection.GetCharCount(System.Int32,System.Int32)">
            <summary>
            Gets the number of CHARACTERS int a BYTE range.
            </summary>
        </member>
        <member name="M:ScintillaNET.LineCollection.GetCharCount(System.IntPtr,System.Int32,System.Text.Encoding)">
            <summary>
            Gets the number of CHARACTERS in a BYTE range.
            </summary>
        </member>
        <member name="M:ScintillaNET.LineCollection.GetEnumerator">
            <summary>
            Provides an enumerator that iterates through the collection.
            </summary>
            <returns>An object that contains all <see cref="T:ScintillaNET.Line" /> objects within the <see cref="T:ScintillaNET.LineCollection" />.</returns>
        </member>
        <member name="M:ScintillaNET.LineCollection.LineFromCharPosition(System.Int32)">
            <summary>
            Returns the line index containing the CHARACTER position.
            </summary>
        </member>
        <member name="M:ScintillaNET.LineCollection.InsertPerLine(System.Int32,System.Int32)">
            <summary>
            Tracks a new line with the given CHARACTER length.
            </summary>
        </member>
        <member name="P:ScintillaNET.LineCollection.AllLinesVisible">
            <summary>
            Gets a value indicating whether all the document lines are visible (not hidden).
            </summary>
            <returns>true if all the lines are visible; otherwise, false.</returns>
        </member>
        <member name="P:ScintillaNET.LineCollection.Count">
            <summary>
            Gets the number of lines.
            </summary>
            <returns>The number of lines in the <see cref="T:ScintillaNET.LineCollection" />.</returns>
        </member>
        <member name="P:ScintillaNET.LineCollection.TextLength">
            <summary>
            Gets the number of CHARACTERS in the document.
            </summary>
        </member>
        <member name="P:ScintillaNET.LineCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ScintillaNET.Line" /> at the specified zero-based index.
            </summary>
            <param name="index">The zero-based index of the <see cref="T:ScintillaNET.Line" /> to get.</param>
            <returns>The <see cref="T:ScintillaNET.Line" /> at the specified index.</returns>
        </member>
        <member name="M:ScintillaNET.LineCollection.#ctor(ScintillaNET.Scintilla)">
            <summary>
            Initializes a new instance of the <see cref="T:ScintillaNET.LineCollection" /> class.
            </summary>
            <param name="scintilla">The <see cref="T:ScintillaNET.Scintilla" /> control that created this collection.</param>
        </member>
        <member name="T:ScintillaNET.LineCollection.PerLine">
            <summary>
            Stuff we track for each line.
            </summary>
        </member>
        <member name="F:ScintillaNET.LineCollection.PerLine.Start">
            <summary>
            The CHARACTER position where the line begins.
            </summary>
        </member>
        <member name="F:ScintillaNET.LineCollection.PerLine.ContainsMultibyte">
            <summary>
            1 if the line contains multibyte (Unicode) characters; -1 if not; 0 if undetermined.
            </summary>
            <remarks>Using an enum instead of Nullable because it uses less memory per line...</remarks>
        </member>
        <member name="T:ScintillaNET.LineEndType">
            <summary>
            Line endings types supported by lexers and allowed by a <see cref="T:ScintillaNET.Scintilla" /> control.
            </summary>
            <seealso cref="P:ScintillaNET.Scintilla.LineEndTypesSupported" />
            <seealso cref="P:ScintillaNET.Scintilla.LineEndTypesAllowed" />
            <seealso cref="P:ScintillaNET.Scintilla.LineEndTypesActive" />
        </member>
        <member name="F:ScintillaNET.LineEndType.Default">
            <summary>
            ASCII line endings. Carriage Return, Line Feed pair "\r\n" (0x0D0A); Carriage Return '\r' (0x0D); Line Feed '\n' (0x0A).
            </summary>
        </member>
        <member name="F:ScintillaNET.LineEndType.Unicode">
            <summary>
            Unicode line endings. Next Line (0x0085); Line Separator (0x2028); Paragraph Separator (0x2029).
            </summary>
        </member>
        <member name="T:ScintillaNET.ListCompletionMethod">
            <summary>
            Indicates how an autocompletion occurred.
            </summary>
        </member>
        <member name="F:ScintillaNET.ListCompletionMethod.FillUp">
            <summary>
            A fillup character (see <see cref="M:ScintillaNET.Scintilla.AutoCSetFillUps(System.String)" />) triggered the completion.
            The character used is indicated by the <see cref="P:ScintillaNET.AutoCSelectionEventArgs.Char" /> property.
            </summary>
        </member>
        <member name="F:ScintillaNET.ListCompletionMethod.DoubleClick">
            <summary>
            A double-click triggered the completion.
            </summary>
        </member>
        <member name="F:ScintillaNET.ListCompletionMethod.Tab">
            <summary>
            A tab key or the <see cref="F:ScintillaNET.Command.Tab" /> command triggered the completion.
            </summary>
        </member>
        <member name="F:ScintillaNET.ListCompletionMethod.NewLine">
            <summary>
            A new line or <see cref="F:ScintillaNET.Command.NewLine" /> command triggered the completion.
            </summary>
        </member>
        <member name="F:ScintillaNET.ListCompletionMethod.Command">
            <summary>
            The <see cref="M:ScintillaNET.Scintilla.AutoCSelect(System.String)" /> method triggered the completion.
            </summary>
        </member>
        <member name="T:ScintillaNET.Margin">
            <summary>
            Represents a margin displayed on the left edge of a <see cref="T:ScintillaNET.Scintilla" /> control.
            </summary>
        </member>
        <member name="P:ScintillaNET.Margin.BackColor">
            <summary>
            Gets or sets the background color of the margin when the <see cref="P:ScintillaNET.Margin.Type" /> property is set to <see cref="F:ScintillaNET.MarginType.Color" />.
            </summary>
            <returns>A Color object representing the margin background color. The default is Black.</returns>
            <remarks>Alpha color values are ignored.</remarks>
        </member>
        <member name="P:ScintillaNET.Margin.Cursor">
            <summary>
            Gets or sets the mouse cursor style when over the margin.
            </summary>
            <returns>One of the <see cref="T:ScintillaNET.MarginCursor" /> enumeration values. The default is <see cref="F:ScintillaNET.MarginCursor.Arrow" />.</returns>
        </member>
        <member name="P:ScintillaNET.Margin.Index">
            <summary>
            Gets the zero-based margin index this object represents.
            </summary>
            <returns>The margin index within the <see cref="T:ScintillaNET.MarginCollection" />.</returns>
        </member>
        <member name="P:ScintillaNET.Margin.Sensitive">
            <summary>
            Gets or sets whether the margin is sensitive to mouse clicks.
            </summary>
            <returns>true if the margin is sensitive to mouse clicks; otherwise, false. The default is false.</returns>
            <seealso cref="E:ScintillaNET.Scintilla.MarginClick" />
        </member>
        <member name="P:ScintillaNET.Margin.Type">
            <summary>
            Gets or sets the margin type.
            </summary>
            <returns>One of the <see cref="T:ScintillaNET.MarginType" /> enumeration values. The default is <see cref="F:ScintillaNET.MarginType.Symbol" />.</returns>
        </member>
        <member name="P:ScintillaNET.Margin.Width">
            <summary>
            Gets or sets the width in pixels of the margin.
            </summary>
            <returns>The width of the margin measured in pixels.</returns>
            <remarks>Scintilla assigns various default widths.</remarks>
        </member>
        <member name="P:ScintillaNET.Margin.Mask">
            <summary>
            Gets or sets a mask indicating which markers this margin can display.
            </summary>
            <returns>
            An unsigned 32-bit value with each bit cooresponding to one of the 32 zero-based <see cref="T:ScintillaNET.Margin" /> indexes.
            The default is 0x1FFFFFF, which is every marker except folder markers (i.e. 0 through 24).
            </returns>
            <remarks>
            For example, the mask for marker index 10 is 1 shifted left 10 times (1 &lt;&lt; 10).
            <see cref="F:ScintillaNET.Marker.MaskFolders" /> is a useful constant for working with just folder margin indexes.
            </remarks>
        </member>
        <member name="M:ScintillaNET.Margin.#ctor(ScintillaNET.Scintilla,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ScintillaNET.Margin" /> class.
            </summary>
            <param name="scintilla">The <see cref="T:ScintillaNET.Scintilla" /> control that created this margin.</param>
            <param name="index">The index of this margin within the <see cref="T:ScintillaNET.MarginCollection" /> that created it.</param>
        </member>
        <member name="T:ScintillaNET.MarginClickEventArgs">
            <summary>
            Provides data for the <see cref="E:ScintillaNET.Scintilla.MarginClick" /> event.
            </summary>
        </member>
        <member name="P:ScintillaNET.MarginClickEventArgs.Margin">
            <summary>
            Gets the margin clicked.
            </summary>
            <returns>The zero-based index of the clicked margin.</returns>
        </member>
        <member name="P:ScintillaNET.MarginClickEventArgs.Modifiers">
            <summary>
            Gets the modifier keys (SHIFT, CTRL, ALT) held down when the margin was clicked.
            </summary>
            <returns>A bitwise combination of the Keys enumeration indicating the modifier keys.</returns>
        </member>
        <member name="P:ScintillaNET.MarginClickEventArgs.Position">
            <summary>
            Gets the zero-based document position where the line ajacent to the clicked margin starts.
            </summary>
            <returns>The zero-based character position within the document of the start of the line adjacent to the margin clicked.</returns>
        </member>
        <member name="M:ScintillaNET.MarginClickEventArgs.#ctor(ScintillaNET.Scintilla,System.Windows.Forms.Keys,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ScintillaNET.MarginClickEventArgs" /> class.
            </summary>
            <param name="scintilla">The <see cref="T:ScintillaNET.Scintilla" /> control that generated this event.</param>
            <param name="modifiers">The modifier keys that where held down at the time of the margin click.</param>
            <param name="bytePosition">The zero-based byte position within the document where the line adjacent to the clicked margin starts.</param>
            <param name="margin">The zero-based index of the clicked margin.</param>
        </member>
        <member name="T:ScintillaNET.MarginCollection">
            <summary>
            An immutable collection of margins in a <see cref="T:ScintillaNET.Scintilla" /> control.
            </summary>
        </member>
        <member name="M:ScintillaNET.MarginCollection.ClearAllText">
            <summary>
            Removes all text displayed in every <see cref="F:ScintillaNET.MarginType.Text" /> and <see cref="F:ScintillaNET.MarginType.RightText" /> margins.
            </summary>
        </member>
        <member name="M:ScintillaNET.MarginCollection.GetEnumerator">
            <summary>
            Provides an enumerator that iterates through the collection.
            </summary>
            <returns>An object that contains all <see cref="T:ScintillaNET.Margin" /> objects within the <see cref="T:ScintillaNET.MarginCollection" />.</returns>
        </member>
        <member name="P:ScintillaNET.MarginCollection.Capacity">
            <summary>
            Gets or sets the number of margins in the <see cref="T:ScintillaNET.MarginCollection" />.
            </summary>
            <returns>The number of margins in the collection. The default is 5.</returns>
        </member>
        <member name="P:ScintillaNET.MarginCollection.Count">
            <summary>
            Gets the number of margins in the <see cref="T:ScintillaNET.MarginCollection" />.
            </summary>
            <returns>The number of margins in the collection.</returns>
            <remarks>This property is kept for convenience. The return value will always be equal to <see cref="P:ScintillaNET.MarginCollection.Capacity" />.</remarks>
            <seealso cref="P:ScintillaNET.MarginCollection.Capacity" />
        </member>
        <member name="P:ScintillaNET.MarginCollection.Left">
            <summary>
            Gets or sets the width in pixels of the left margin padding.
            </summary>
            <returns>The left margin padding measured in pixels. The default is 1.</returns>
        </member>
        <member name="P:ScintillaNET.MarginCollection.Right">
            <summary>
            Gets or sets the width in pixels of the right margin padding.
            </summary>
            <returns>The right margin padding measured in pixels. The default is 1.</returns>
        </member>
        <member name="P:ScintillaNET.MarginCollection.Item(System.Int32)">
            <summary>
            Gets a <see cref="T:ScintillaNET.Margin" /> object at the specified index.
            </summary>
            <param name="index">The margin index.</param>
            <returns>An object representing the margin at the specified <paramref name="index" />.</returns>
            <remarks>By convention margin 0 is used for line numbers and the two following for symbols.</remarks>
        </member>
        <member name="M:ScintillaNET.MarginCollection.#ctor(ScintillaNET.Scintilla)">
            <summary>
            Initializes a new instance of the <see cref="T:ScintillaNET.MarginCollection" /> class.
            </summary>
            <param name="scintilla">The <see cref="T:ScintillaNET.Scintilla" /> control that created this collection.</param>
        </member>
        <member name="T:ScintillaNET.MarginCursor">
            <summary>
            The display of a cursor when over a margin.
            </summary>
        </member>
        <member name="F:ScintillaNET.MarginCursor.Arrow">
            <summary>
            A normal arrow.
            </summary>
        </member>
        <member name="F:ScintillaNET.MarginCursor.ReverseArrow">
            <summary>
            A reversed arrow.
            </summary>
        </member>
        <member name="T:ScintillaNET.MarginOptions">
            <summary>
            Flags used to define margin options.
            </summary>
            <remarks>This enumeration has a FlagsAttribute attribute that allows a bitwise combination of its member values.</remarks>
        </member>
        <member name="F:ScintillaNET.MarginOptions.None">
            <summary>
            No options. This is the default.
            </summary>
        </member>
        <member name="F:ScintillaNET.MarginOptions.SublineSelect">
            <summary>
            Lines selected by clicking on the margin will select only the subline of wrapped text.
            </summary>
        </member>
        <member name="T:ScintillaNET.MarginType">
            <summary>
            The behavior and appearance of a margin.
            </summary>
        </member>
        <member name="F:ScintillaNET.MarginType.Symbol">
            <summary>
            Margin can display symbols.
            </summary>
        </member>
        <member name="F:ScintillaNET.MarginType.Number">
            <summary>
            Margin displays line numbers.
            </summary>
        </member>
        <member name="F:ScintillaNET.MarginType.BackColor">
            <summary>
            Margin can display symbols and has a background color equivalent to <see cref="F:ScintillaNET.Style.Default" /> background color.
            </summary>
        </member>
        <member name="F:ScintillaNET.MarginType.ForeColor">
            <summary>
            Margin can display symbols and has a background color equivalent to <see cref="F:ScintillaNET.Style.Default"/> foreground color.
            </summary>
        </member>
        <member name="F:ScintillaNET.MarginType.Text">
            <summary>
            Margin can display application defined text.
            </summary>
        </member>
        <member name="F:ScintillaNET.MarginType.RightText">
            <summary>
            Margin can display application defined text right-justified.
            </summary>
        </member>
        <member name="F:ScintillaNET.MarginType.Color">
            <summary>
            Margin can display symbols and has a background color specified using the <see cref="P:ScintillaNET.Margin.BackColor" /> property.
            </summary>
        </member>
        <member name="T:ScintillaNET.Marker">
            <summary>
            Represents a margin marker in a <see cref="T:ScintillaNET.Scintilla" /> control.
            </summary>
        </member>
        <member name="F:ScintillaNET.Marker.MaskAll">
            <summary>
            An unsigned 32-bit mask of all <see cref="T:ScintillaNET.Margin" /> indexes where each bit cooresponds to a margin index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Marker.MaskFolders">
            <summary>
            An unsigned 32-bit mask of folder <see cref="T:ScintillaNET.Margin" /> indexes (25 through 31) where each bit cooresponds to a margin index.
            </summary>
            <seealso cref="P:ScintillaNET.Margin.Mask" />
        </member>
        <member name="F:ScintillaNET.Marker.FolderEnd">
            <summary>
            Folder end marker index. This marker is typically configured to display the <see cref="F:ScintillaNET.MarkerSymbol.BoxPlusConnected" /> symbol.
            </summary>
        </member>
        <member name="F:ScintillaNET.Marker.FolderOpenMid">
            <summary>
            Folder open marker index. This marker is typically configured to display the <see cref="F:ScintillaNET.MarkerSymbol.BoxMinusConnected" /> symbol.
            </summary>
        </member>
        <member name="F:ScintillaNET.Marker.FolderMidTail">
            <summary>
            Folder mid tail marker index. This marker is typically configured to display the <see cref="F:ScintillaNET.MarkerSymbol.TCorner" /> symbol.
            </summary>
        </member>
        <member name="F:ScintillaNET.Marker.FolderTail">
            <summary>
            Folder tail marker index. This marker is typically configured to display the <see cref="F:ScintillaNET.MarkerSymbol.LCorner" /> symbol.
            </summary>
        </member>
        <member name="F:ScintillaNET.Marker.FolderSub">
            <summary>
            Folder sub marker index. This marker is typically configured to display the <see cref="F:ScintillaNET.MarkerSymbol.VLine" /> symbol.
            </summary>
        </member>
        <member name="F:ScintillaNET.Marker.Folder">
            <summary>
            Folder marker index. This marker is typically configured to display the <see cref="F:ScintillaNET.MarkerSymbol.BoxPlus" /> symbol.
            </summary>
        </member>
        <member name="F:ScintillaNET.Marker.FolderOpen">
            <summary>
            Folder open marker index. This marker is typically configured to display the <see cref="F:ScintillaNET.MarkerSymbol.BoxMinus" /> symbol.
            </summary>
        </member>
        <member name="M:ScintillaNET.Marker.DefineRgbaImage(System.Drawing.Bitmap)">
            <summary>
            Sets the marker symbol to a custom image.
            </summary>
            <param name="image">The Bitmap to use as a marker symbol.</param>
            <remarks>Calling this method will also update the <see cref="P:ScintillaNET.Marker.Symbol" /> property to <see cref="F:ScintillaNET.MarkerSymbol.RgbaImage" />.</remarks>
        </member>
        <member name="M:ScintillaNET.Marker.DeleteAll">
            <summary>
            Removes this marker from all lines.
            </summary>
        </member>
        <member name="M:ScintillaNET.Marker.SetAlpha(System.Int32)">
            <summary>
            Sets the foreground alpha transparency for markers that are drawn in the content area.
            </summary>
            <param name="alpha">The alpha transparency ranging from 0 (completely transparent) to 255 (no transparency).</param>
            <remarks>See the remarks on the <see cref="M:ScintillaNET.Marker.SetBackColor(System.Drawing.Color)" /> method for a full explanation of when a marker can be drawn in the content area.</remarks>
            <seealso cref="M:ScintillaNET.Marker.SetBackColor(System.Drawing.Color)" />
        </member>
        <member name="M:ScintillaNET.Marker.SetBackColor(System.Drawing.Color)">
            <summary>
            Sets the background color of the marker.
            </summary>
            <param name="color">The <see cref="T:ScintillaNET.Marker" /> background Color. The default is White.</param>
            <remarks>
            The background color of the whole line will be drawn in the <paramref name="color" /> specified when the marker is not visible
            because it is hidden by a <see cref="P:ScintillaNET.Margin.Mask" /> or the <see cref="P:ScintillaNET.Margin.Width" /> is zero.
            </remarks>
            <seealso cref="M:ScintillaNET.Marker.SetAlpha(System.Int32)" />
        </member>
        <member name="M:ScintillaNET.Marker.SetForeColor(System.Drawing.Color)">
            <summary>
            Sets the foreground color of the marker.
            </summary>
            <param name="color">The <see cref="T:ScintillaNET.Marker" /> foreground Color. The default is Black.</param>
        </member>
        <member name="P:ScintillaNET.Marker.Index">
            <summary>
            Gets the zero-based marker index this object represents.
            </summary>
            <returns>The marker index within the <see cref="T:ScintillaNET.MarkerCollection" />.</returns>
        </member>
        <member name="P:ScintillaNET.Marker.Symbol">
            <summary>
            Gets or sets the marker symbol.
            </summary>
            <returns>
            One of the <see cref="T:ScintillaNET.MarkerSymbol" /> enumeration values.
            The default is <see cref="F:ScintillaNET.MarkerSymbol.Circle" />.
            </returns>
        </member>
        <member name="M:ScintillaNET.Marker.#ctor(ScintillaNET.Scintilla,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ScintillaNET.Marker" /> class.
            </summary>
            <param name="scintilla">The <see cref="T:ScintillaNET.Scintilla" /> control that created this marker.</param>
            <param name="index">The index of this style within the <see cref="T:ScintillaNET.MarkerCollection" /> that created it.</param>
        </member>
        <member name="T:ScintillaNET.MarkerCollection">
            <summary>
            An immutable collection of markers in a <see cref="T:ScintillaNET.Scintilla" /> control.
            </summary>
        </member>
        <member name="M:ScintillaNET.MarkerCollection.GetEnumerator">
            <summary>
            Provides an enumerator that iterates through the collection.
            </summary>
            <returns>An object for enumerating all <see cref="T:ScintillaNET.Marker" /> objects within the <see cref="T:ScintillaNET.MarkerCollection" />.</returns>
        </member>
        <member name="P:ScintillaNET.MarkerCollection.Count">
            <summary>
            Gets the number of markers in the <see cref="T:ScintillaNET.MarkerCollection" />.
            </summary>
            <returns>This property always returns 32.</returns>
        </member>
        <member name="P:ScintillaNET.MarkerCollection.Item(System.Int32)">
            <summary>
            Gets a <see cref="T:ScintillaNET.Marker" /> object at the specified index.
            </summary>
            <param name="index">The marker index.</param>
            <returns>An object representing the marker at the specified <paramref name="index" />.</returns>
            <remarks>Markers 25 through 31 are used by Scintilla for folding.</remarks>
        </member>
        <member name="M:ScintillaNET.MarkerCollection.#ctor(ScintillaNET.Scintilla)">
            <summary>
            Initializes a new instance of the <see cref="T:ScintillaNET.MarkerCollection" /> class.
            </summary>
            <param name="scintilla">The <see cref="T:ScintillaNET.Scintilla" /> control that created this collection.</param>
        </member>
        <member name="T:ScintillaNET.MarkerHandle">
            <summary>
            A <see cref="T:ScintillaNET.Marker" /> handle.
            </summary>
            <remarks>
            This is an opaque type, meaning it can be used by a <see cref="T:ScintillaNET.Scintilla" /> control but
            otherwise has no public members of its own.
            </remarks>
        </member>
        <member name="F:ScintillaNET.MarkerHandle.Zero">
            <summary>
            A read-only field that represents an uninitialized handle.
            </summary>
        </member>
        <member name="M:ScintillaNET.MarkerHandle.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object.
            </summary>
            <param name="obj">An object to compare with this instance or null.</param>
            <returns>true if <paramref name="obj" /> is an instance of <see cref="T:ScintillaNET.MarkerHandle" /> and equals the value of this instance; otherwise, false.</returns>
        </member>
        <member name="M:ScintillaNET.MarkerHandle.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:ScintillaNET.MarkerHandle.op_Equality(ScintillaNET.MarkerHandle,ScintillaNET.MarkerHandle)">
            <summary>
            Determines whether two specified instances of <see cref="T:ScintillaNET.MarkerHandle" /> are equal.
            </summary>
            <param name="a">The first handle to compare.</param>
            <param name="b">The second handle to compare.</param>
            <returns>true if <paramref name="a" /> equals <paramref name="b" />; otherwise, false.</returns>
        </member>
        <member name="M:ScintillaNET.MarkerHandle.op_Inequality(ScintillaNET.MarkerHandle,ScintillaNET.MarkerHandle)">
            <summary>
            Determines whether two specified instances of <see cref="T:ScintillaNET.MarkerHandle" /> are not equal.
            </summary>
            <param name="a">The first handle to compare.</param>
            <param name="b">The second handle to compare.</param>
            <returns>true if <paramref name="a" /> does not equal <paramref name="b" />; otherwise, false.</returns>
        </member>
        <member name="T:ScintillaNET.MarkerSymbol">
            <summary>
            The symbol displayed by a <see cref="T:ScintillaNET.Marker" />
            </summary>
        </member>
        <member name="F:ScintillaNET.MarkerSymbol.Circle">
            <summary>
            A circle. This symbol is typically used to indicate a breakpoint.
            </summary>
        </member>
        <member name="F:ScintillaNET.MarkerSymbol.RoundRect">
            <summary>
            A rectangel with rounded edges.
            </summary>
        </member>
        <member name="F:ScintillaNET.MarkerSymbol.Arrow">
            <summary>
            An arrow (triangle) pointing right.
            </summary>
        </member>
        <member name="F:ScintillaNET.MarkerSymbol.SmallRect">
            <summary>
            A rectangle that is wider than it is tall.
            </summary>
        </member>
        <member name="F:ScintillaNET.MarkerSymbol.ShortArrow">
            <summary>
            An arrow and tail pointing right. This symbol is typically used to indicate the current line of execution.
            </summary>
        </member>
        <member name="F:ScintillaNET.MarkerSymbol.Empty">
            <summary>
            An invisible symbol useful for tracking the movement of lines.
            </summary>
        </member>
        <member name="F:ScintillaNET.MarkerSymbol.ArrowDown">
            <summary>
            An arrow (triangle) pointing down.
            </summary>
        </member>
        <member name="F:ScintillaNET.MarkerSymbol.Minus">
            <summary>
            A minus (-) symbol.
            </summary>
        </member>
        <member name="F:ScintillaNET.MarkerSymbol.Plus">
            <summary>
            A plus (+) symbol.
            </summary>
        </member>
        <member name="F:ScintillaNET.MarkerSymbol.VLine">
            <summary>
            A thin vertical line. This symbol is typically used on the middle line of an expanded fold block.
            </summary>
        </member>
        <member name="F:ScintillaNET.MarkerSymbol.LCorner">
            <summary>
            A thin 'L' shaped line. This symbol is typically used on the last line of an expanded fold block.
            </summary>
        </member>
        <member name="F:ScintillaNET.MarkerSymbol.TCorner">
            <summary>
            A thin 't' shaped line. This symbol is typically used on the last line of an expanded nested fold block.
            </summary>
        </member>
        <member name="F:ScintillaNET.MarkerSymbol.BoxPlus">
            <summary>
            A plus (+) symbol with surrounding box. This symbol is typically used on the first line of a collapsed fold block.
            </summary>
        </member>
        <member name="F:ScintillaNET.MarkerSymbol.BoxPlusConnected">
            <summary>
            A plus (+) symbol with surrounding box and thin vertical line. This symbol is typically used on the first line of a collapsed nested fold block.
            </summary>
        </member>
        <member name="F:ScintillaNET.MarkerSymbol.BoxMinus">
            <summary>
            A minus (-) symbol with surrounding box. This symbol is typically used on the first line of an expanded fold block.
            </summary>
        </member>
        <member name="F:ScintillaNET.MarkerSymbol.BoxMinusConnected">
            <summary>
            A minus (-) symbol with surrounding box and thin vertical line. This symbol is typically used on the first line of an expanded nested fold block.
            </summary>
        </member>
        <member name="F:ScintillaNET.MarkerSymbol.LCornerCurve">
            <summary>
            Similar to a <see cref="F:ScintillaNET.MarkerSymbol.LCorner" />, but curved.
            </summary>
        </member>
        <member name="F:ScintillaNET.MarkerSymbol.TCornerCurve">
            <summary>
            Similar to a <see cref="F:ScintillaNET.MarkerSymbol.TCorner" />, but curved.
            </summary>
        </member>
        <member name="F:ScintillaNET.MarkerSymbol.CirclePlus">
            <summary>
            Similar to a <see cref="F:ScintillaNET.MarkerSymbol.BoxPlus" /> but surrounded by a circle.
            </summary>
        </member>
        <member name="F:ScintillaNET.MarkerSymbol.CirclePlusConnected">
            <summary>
            Similar to a <see cref="F:ScintillaNET.MarkerSymbol.BoxPlusConnected" />, but surrounded by a circle.
            </summary>
        </member>
        <member name="F:ScintillaNET.MarkerSymbol.CircleMinus">
            <summary>
            Similar to a <see cref="F:ScintillaNET.MarkerSymbol.BoxMinus" />, but surrounded by a circle.
            </summary>
        </member>
        <member name="F:ScintillaNET.MarkerSymbol.CircleMinusConnected">
            <summary>
            Similar to a <see cref="F:ScintillaNET.MarkerSymbol.BoxMinusConnected" />, but surrounded by a circle.
            </summary>
        </member>
        <member name="F:ScintillaNET.MarkerSymbol.Background">
            <summary>
            A special marker that displays no symbol but will affect the background color of the line.
            </summary>
        </member>
        <member name="F:ScintillaNET.MarkerSymbol.DotDotDot">
            <summary>
            Three dots (ellipsis).
            </summary>
        </member>
        <member name="F:ScintillaNET.MarkerSymbol.Arrows">
            <summary>
            Three bracket style arrows.
            </summary>
        </member>
        <member name="F:ScintillaNET.MarkerSymbol.FullRect">
            <summary>
            A rectangle occupying the entire marker space.
            </summary>
        </member>
        <member name="F:ScintillaNET.MarkerSymbol.LeftRect">
            <summary>
            A rectangle occupying only the left edge of the marker space.
            </summary>
        </member>
        <member name="F:ScintillaNET.MarkerSymbol.Available">
            <summary>
            A special marker left available to plugins.
            </summary>
        </member>
        <member name="F:ScintillaNET.MarkerSymbol.Underline">
            <summary>
            A special marker that displays no symbol but will underline the current line text.
            </summary>
        </member>
        <member name="F:ScintillaNET.MarkerSymbol.RgbaImage">
            <summary>
            A user-defined image. Images can be set using the <see cref="M:ScintillaNET.Marker.DefineRgbaImage(System.Drawing.Bitmap)" /> method.
            </summary>
        </member>
        <member name="F:ScintillaNET.MarkerSymbol.Bookmark">
            <summary>
            A left-rotated bookmark.
            </summary>
        </member>
        <member name="T:ScintillaNET.ModificationEventArgs">
            <summary>
            Provides data for the <see cref="E:ScintillaNET.Scintilla.Insert" /> and <see cref="E:ScintillaNET.Scintilla.Delete" /> events.
            </summary>
        </member>
        <member name="P:ScintillaNET.ModificationEventArgs.LinesAdded">
            <summary>
            Gets the number of lines added or removed.
            </summary>
            <returns>The number of lines added to the document when text is inserted, or the number of lines removed from the document when text is deleted.</returns>
            <remarks>When lines are deleted the return value will be negative.</remarks>
        </member>
        <member name="P:ScintillaNET.ModificationEventArgs.Text">
            <summary>
            Gets the text that was inserted or deleted.
            </summary>
            <returns>The text inserted or deleted from the document.</returns>
        </member>
        <member name="M:ScintillaNET.ModificationEventArgs.#ctor(ScintillaNET.Scintilla,ScintillaNET.ModificationSource,System.Int32,System.Int32,System.IntPtr,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ScintillaNET.ModificationEventArgs" /> class.
            </summary>
            <param name="scintilla">The <see cref="T:ScintillaNET.Scintilla" /> control that generated this event.</param>
            <param name="source">The source of the modification.</param>
            <param name="bytePosition">The zero-based byte position within the document where text was modified.</param>
            <param name="byteLength">The length in bytes of the inserted or deleted text.</param>
            <param name="text">>A pointer to the text inserted or deleted.</param>
            <param name="linesAdded">The number of lines added or removed (delta).</param>
        </member>
        <member name="T:ScintillaNET.ModificationSource">
            <summary>
            The source of a modification
            </summary>
        </member>
        <member name="F:ScintillaNET.ModificationSource.User">
            <summary>
            Modification is the result of a user operation.
            </summary>
        </member>
        <member name="F:ScintillaNET.ModificationSource.Undo">
            <summary>
            Modification is the result of an undo operation.
            </summary>
        </member>
        <member name="F:ScintillaNET.ModificationSource.Redo">
            <summary>
            Modification is the result of a redo operation.
            </summary>
        </member>
        <member name="T:ScintillaNET.MultiPaste">
            <summary>
            Specifies the behavior of pasting into multiple selections.
            </summary>
        </member>
        <member name="F:ScintillaNET.MultiPaste.Once">
            <summary>
            Pasting into multiple selections only pastes to the main selection. This is the default.
            </summary>
        </member>
        <member name="F:ScintillaNET.MultiPaste.Each">
            <summary>
            Pasting into multiple selections pastes into each selection.
            </summary>
        </member>
        <member name="T:ScintillaNET.NativeMemoryStream">
            <summary>
            Like an UnmanagedMemoryStream execpt it can grow.
            </summary>
        </member>
        <member name="T:ScintillaNET.NeedShownEventArgs">
            <summary>
            Provides data for the <see cref="E:ScintillaNET.Scintilla.NeedShown" /> event.
            </summary>
        </member>
        <member name="P:ScintillaNET.NeedShownEventArgs.Length">
            <summary>
            Gets the length of the text that needs to be shown.
            </summary>
            <returns>The length of text starting at <see cref="P:ScintillaNET.NeedShownEventArgs.Position" /> that needs to be shown.</returns>
        </member>
        <member name="P:ScintillaNET.NeedShownEventArgs.Position">
            <summary>
            Gets the zero-based document position where text needs to be shown.
            </summary>
            <returns>The zero-based document position where the range of text to be shown starts.</returns>
        </member>
        <member name="M:ScintillaNET.NeedShownEventArgs.#ctor(ScintillaNET.Scintilla,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ScintillaNET.NeedShownEventArgs" /> class.
            </summary>
            <param name="scintilla">The <see cref="T:ScintillaNET.Scintilla" /> control that generated this event.</param>
            <param name="bytePosition">The zero-based byte position within the document where text needs to be shown.</param>
            <param name="byteLength">The length in bytes of the text that needs to be shown.</param>
        </member>
        <member name="T:ScintillaNET.Order">
            <summary>
            The sorting order for autocompletion lists.
            </summary>
        </member>
        <member name="F:ScintillaNET.Order.Presorted">
            <summary>
            Requires that an autocompletion lists be sorted in alphabetical order. This is the default.
            </summary>
        </member>
        <member name="F:ScintillaNET.Order.PerformSort">
            <summary>
            Instructs a <see cref="T:ScintillaNET.Scintilla" /> control to perform an alphabetical sort of autocompletion lists.
            </summary>
        </member>
        <member name="F:ScintillaNET.Order.Custom">
            <summary>
            User-defined order.
            </summary>
        </member>
        <member name="T:ScintillaNET.Phases">
            <summary>
            The number of phases used when drawing.
            </summary>
        </member>
        <member name="F:ScintillaNET.Phases.One">
            <summary>
            Drawing is done in a single phase. This is the fastest but provides no support for kerning.
            </summary>
        </member>
        <member name="F:ScintillaNET.Phases.Two">
            <summary>
            Drawing is done in two phases; the background first and then the text. This is the default.
            </summary>
        </member>
        <member name="F:ScintillaNET.Phases.Multiple">
            <summary>
            Drawing is done in multiple phases; once for each feature. This is the slowest but allows
            extreme ascenders and descenders to overflow into adjacent lines.
            </summary>
        </member>
        <member name="T:ScintillaNET.PopupMode">
            <summary>
            Behavior of the standard edit control context menu.
            </summary>
            <seealso cref="M:ScintillaNET.Scintilla.UsePopup(ScintillaNET.PopupMode)" />
        </member>
        <member name="F:ScintillaNET.PopupMode.Never">
            <summary>
            Never show the default editing menu.
            </summary>
        </member>
        <member name="F:ScintillaNET.PopupMode.All">
            <summary>
            Show default editing menu if clicking on the control.
            </summary>
        </member>
        <member name="F:ScintillaNET.PopupMode.Text">
            <summary>
            Show default editing menu only if clicking on text area.
            </summary>
            <remarks>To receive the <see cref="E:ScintillaNET.Scintilla.MarginRightClick" /> event, this value must be used.</remarks>
            <seealso cref="E:ScintillaNET.Scintilla.MarginRightClick" />
        </member>
        <member name="T:ScintillaNET.ProjectionEqualityComparer">
            <summary>
            Non-generic class to produce instances of the generic class,
            optionally using type inference.
            </summary>
        </member>
        <member name="M:ScintillaNET.ProjectionEqualityComparer.Create``2(System.Func{``0,``1})">
            <summary>
            Creates an instance of ProjectionEqualityComparer using the specified projection.
            </summary>
            <typeparam name="TSource">Type parameter for the elements to be compared</typeparam>
            <typeparam name="TKey">Type parameter for the keys to be compared,
            after being projected from the elements</typeparam>
            <param name="projection">Projection to use when determining the key of an element</param>
            <returns>A comparer which will compare elements by projecting 
            each element to its key, and comparing keys</returns>
        </member>
        <member name="M:ScintillaNET.ProjectionEqualityComparer.Create``2(``0,System.Func{``0,``1})">
            <summary>
            Creates an instance of ProjectionEqualityComparer using the specified projection.
            The ignored parameter is solely present to aid type inference.
            </summary>
            <typeparam name="TSource">Type parameter for the elements to be compared</typeparam>
            <typeparam name="TKey">Type parameter for the keys to be compared,
            after being projected from the elements</typeparam>
            <param name="ignored">Value is ignored - type may be used by type inference</param>
            <param name="projection">Projection to use when determining the key of an element</param>
            <returns>A comparer which will compare elements by projecting
            each element to its key, and comparing keys</returns>
        </member>
        <member name="T:ScintillaNET.ProjectionEqualityComparer`1">
            <summary>
            Class generic in the source only to produce instances of the 
            doubly generic class, optionally using type inference.
            </summary>
        </member>
        <member name="M:ScintillaNET.ProjectionEqualityComparer`1.Create``1(System.Func{`0,``0})">
            <summary>
            Creates an instance of ProjectionEqualityComparer using the specified projection.
            </summary>
            <typeparam name="TKey">Type parameter for the keys to be compared,
            after being projected from the elements</typeparam>
            <param name="projection">Projection to use when determining the key of an element</param>
            <returns>A comparer which will compare elements by projecting each element to its key,
            and comparing keys</returns>        
        </member>
        <member name="T:ScintillaNET.ProjectionEqualityComparer`2">
            <summary>
            Comparer which projects each element of the comparison to a key, and then compares
            those keys using the specified (or default) comparer for the key type.
            </summary>
            <typeparam name="TSource">Type of elements which this comparer 
            will be asked to compare</typeparam>
            <typeparam name="TKey">Type of the key projected
            from the element</typeparam>
        </member>
        <member name="M:ScintillaNET.ProjectionEqualityComparer`2.#ctor(System.Func{`0,`1})">
            <summary>
            Creates a new instance using the specified projection, which must not be null.
            The default comparer for the projected type is used.
            </summary>
            <param name="projection">Projection to use during comparisons</param>
        </member>
        <member name="M:ScintillaNET.ProjectionEqualityComparer`2.#ctor(System.Func{`0,`1},System.Collections.Generic.IEqualityComparer{`1})">
            <summary>
            Creates a new instance using the specified projection, which must not be null.
            </summary>
            <param name="projection">Projection to use during comparisons</param>
            <param name="comparer">The comparer to use on the keys. May be null, in
            which case the default comparer will be used.</param>
        </member>
        <member name="M:ScintillaNET.ProjectionEqualityComparer`2.Equals(`0,`0)">
            <summary>
            Compares the two specified values for equality by applying the projection
            to each value and then using the equality comparer on the resulting keys. Null
            references are never passed to the projection.
            </summary>
        </member>
        <member name="M:ScintillaNET.ProjectionEqualityComparer`2.GetHashCode(`0)">
            <summary>
            Produces a hash code for the given value by projecting it and
            then asking the equality comparer to find the hash code of
            the resulting key.
            </summary>
        </member>
        <member name="T:ScintillaNET.PropertyType">
            <summary>
            Lexer property types.
            </summary>
        </member>
        <member name="F:ScintillaNET.PropertyType.Boolean">
            <summary>
            A Boolean property. This is the default.
            </summary>
        </member>
        <member name="F:ScintillaNET.PropertyType.Integer">
            <summary>
            An integer property.
            </summary>
        </member>
        <member name="F:ScintillaNET.PropertyType.String">
            <summary>
            A string property.
            </summary>
        </member>
        <member name="T:ScintillaNET.ScintillaReader">
            <summary>
            Implements a TextReader that reads from a Scintilla control.
            </summary>
        </member>
        <member name="F:ScintillaNET.ScintillaReader.DefaultBufferSize">
            <summary>
            Arbitrarily chosen default buffer size
            </summary>
        </member>
        <member name="P:ScintillaNET.ScintillaReader.BufferRemaining">
            <summary>
            Returns the number of buffered characters left to be read.
            </summary>
        </member>
        <member name="P:ScintillaNET.ScintillaReader.UnbufferedRemaining">
            <summary>
            Returns the number of unbuffered characters left to be read.
            </summary>
        </member>
        <member name="P:ScintillaNET.ScintillaReader.TotalRemaining">
            <summary>
            Returns the total number of characters left to be read.
            </summary>
        </member>
        <member name="M:ScintillaNET.ScintillaReader.#ctor(ScintillaNET.Scintilla)">
            <summary>
            Initializes a new instance of the ScintillaReader class that reads all text from the specified Scintilla control.
            </summary>
            <param name="scintilla">The Scintilla control from which to read.</param>
        </member>
        <member name="M:ScintillaNET.ScintillaReader.#ctor(ScintillaNET.Scintilla,System.Int32)">
            <summary>
            Initializes a new instance of the ScintillaReader class that reads all text from the specified Scintilla control.
            </summary>
            <param name="scintilla">The Scintilla control from which to read.</param>
            <param name="bufferSize">The number of characters to buffer at a time.</param>
        </member>
        <member name="M:ScintillaNET.ScintillaReader.#ctor(ScintillaNET.Scintilla,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the ScintillaReader class that reads a subsection from the specified Scintilla control.
            </summary>
            <param name="scintilla">The Scintilla control from which to read.</param>
            <param name="start">The index of the first character to read.</param>
            <param name="end">The index just past the last character to read.</param>
        </member>
        <member name="M:ScintillaNET.ScintillaReader.#ctor(ScintillaNET.Scintilla,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the ScintillaReader class that reads a subsection from the specified Scintilla control.
            </summary>
            <param name="scintilla">The Scintilla control from which to read.</param>
            <param name="start">The index of the first character to read.</param>
            <param name="end">The index just past the last character to read.</param>
            <param name="bufferSize">The number of characters to buffer at a time.</param>
        </member>
        <member name="M:ScintillaNET.ScintillaReader.Peek">
            <summary>
            Returns the next character to be read from the reader without actually removing it from the stream. Returns -1 if no characters are available.
            </summary>
            <returns>The next character from the input stream, or -1 if no more characters are available.</returns>
        </member>
        <member name="M:ScintillaNET.ScintillaReader.Read">
            <summary>
            Removes a character from the stream and returns it. Returns -1 if no characters are available.
            </summary>
            <returns>The next character from the input stream, or -1 if no more characters are available.</returns>
        </member>
        <member name="M:ScintillaNET.ScintillaReader.Read(System.Char[],System.Int32,System.Int32)">
            <summary>
             Reads a maximum of count characters from the current stream and writes the data to buffer, beginning at index.
            </summary>
            <param name="buffer">The buffer to receive the characters.</param>
            <param name="index">The position in buffer at which to begin writing.</param>
            <param name="count">The maximum number of characters to read.</param>
            <returns>The actual number of characters that have been read. The number will be less than or equal to count.</returns>
            <exception cref="T:System.ArgumentNullException">buffer is null.</exception>
            <exception cref="T:System.ArgumentException">The buffer length minus index is less than count.</exception>
            <exception cref="T:System.ArgumentException">index or count is negative.</exception>
        </member>
        <member name="M:ScintillaNET.ScintillaReader.ReadBlock(System.Char[],System.Int32,System.Int32)">
            <summary>
             Reads a maximum of count characters from the current stream and writes the data to buffer, beginning at index.
            </summary>
            <param name="buffer">The buffer to receive the characters.</param>
            <param name="index">The position in buffer at which to begin writing.</param>
            <param name="count">The maximum number of characters to read.</param>
            <returns>The actual number of characters that have been read. The number will be less than or equal to count.</returns>
            <exception cref="T:System.ArgumentNullException">buffer is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The buffer length minus index is less than count.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">index or count is negative.</exception>
        </member>
        <member name="M:ScintillaNET.ScintillaReader.BufferNextRegion">
            <summary>
            Fills the buffer with the next section of text.
            </summary>
        </member>
        <member name="T:ScintillaNET.Scintilla">
            <summary>
            Represents a Scintilla editor control.
            </summary>
        </member>
        <member name="F:ScintillaNET.Scintilla.TimeForever">
            <summary>
            A constant used to specify an infinite mouse dwell wait time.
            </summary>
        </member>
        <member name="F:ScintillaNET.Scintilla.InvalidPosition">
            <summary>
            A constant used to specify an invalid document position.
            </summary>
        </member>
        <member name="M:ScintillaNET.Scintilla.AddRefDocument(ScintillaNET.Document)">
            <summary>
            Increases the reference count of the specified document by 1.
            </summary>
            <param name="document">The document reference count to increase.</param>
        </member>
        <member name="M:ScintillaNET.Scintilla.AddSelection(System.Int32,System.Int32)">
            <summary>
            Adds an additional selection range to the existing main selection.
            </summary>
            <param name="caret">The zero-based document position to end the selection.</param>
            <param name="anchor">The zero-based document position to start the selection.</param>
            <remarks>A main selection must first have been set by a call to <see cref="M:ScintillaNET.Scintilla.SetSelection(System.Int32,System.Int32)" />.</remarks>
        </member>
        <member name="M:ScintillaNET.Scintilla.AddText(System.String)">
            <summary>
            Inserts the specified text at the current caret position.
            </summary>
            <param name="text">The text to insert at the current caret position.</param>
            <remarks>The caret position is set to the end of the inserted text, but it is not scrolled into view.</remarks>
        </member>
        <member name="M:ScintillaNET.Scintilla.AnnotationClearAll">
            <summary>
            Removes the annotation text for every <see cref="T:ScintillaNET.Line" /> in the document.
            </summary>
        </member>
        <member name="M:ScintillaNET.Scintilla.AppendText(System.String)">
            <summary>
            Adds the specified text to the end of the document.
            </summary>
            <param name="text">The text to add to the document.</param>
            <remarks>The current selection is not changed and the new text is not scrolled into view.</remarks>
        </member>
        <member name="M:ScintillaNET.Scintilla.AssignCmdKey(System.Windows.Forms.Keys,ScintillaNET.Command)">
            <summary>
            Assigns the specified key definition to a <see cref="T:ScintillaNET.Scintilla" /> command.
            </summary>
            <param name="keyDefinition">The key combination to bind.</param>
            <param name="sciCommand">The command to assign.</param>
        </member>
        <member name="M:ScintillaNET.Scintilla.AutoCCancel">
            <summary>
            Cancels any displayed autocompletion list.
            </summary>
            <seealso cref="M:ScintillaNET.Scintilla.AutoCStops(System.String)" />
        </member>
        <member name="M:ScintillaNET.Scintilla.AutoCComplete">
            <summary>
            Triggers completion of the current autocompletion word.
            </summary>
        </member>
        <member name="M:ScintillaNET.Scintilla.AutoCSelect(System.String)">
            <summary>
            Selects an item in the autocompletion list.
            </summary>
            <param name="select">
            The autocompletion word to select.
            If found, the word in the autocompletion list is selected and the index can be obtained by calling <see cref="P:ScintillaNET.Scintilla.AutoCCurrent" />.
            If not found, the behavior is determined by <see cref="P:ScintillaNET.Scintilla.AutoCAutoHide" />.
            </param>
            <remarks>
            Comparisons are performed according to the <see cref="P:ScintillaNET.Scintilla.AutoCIgnoreCase" /> property
            and will match the first word starting with <paramref name="select" />.
            </remarks>
            <seealso cref="P:ScintillaNET.Scintilla.AutoCCurrent" />
            <seealso cref="P:ScintillaNET.Scintilla.AutoCAutoHide" />
            <seealso cref="P:ScintillaNET.Scintilla.AutoCIgnoreCase" />
        </member>
        <member name="M:ScintillaNET.Scintilla.AutoCSetFillUps(System.String)">
            <summary>
            Sets the characters that, when typed, cause the autocompletion item to be added to the document.
            </summary>
            <param name="chars">A string of characters that trigger autocompletion. The default is null.</param>
            <remarks>Common fillup characters are '(', '[', and '.' depending on the language.</remarks>
        </member>
        <member name="M:ScintillaNET.Scintilla.AutoCShow(System.Int32,System.String)">
            <summary>
            Displays an auto completion list.
            </summary>
            <param name="lenEntered">The number of characters already entered to match on.</param>
            <param name="list">A list of autocompletion words separated by the <see cref="P:ScintillaNET.Scintilla.AutoCSeparator" /> character.</param>
        </member>
        <member name="M:ScintillaNET.Scintilla.AutoCStops(System.String)">
            <summary>
            Specifies the characters that will automatically cancel autocompletion without the need to call <see cref="M:ScintillaNET.Scintilla.AutoCCancel" />.
            </summary>
            <param name="chars">A String of the characters that will cancel autocompletion. The default is empty.</param>
            <remarks>Characters specified should be limited to printable ASCII characters.</remarks>
        </member>
        <member name="M:ScintillaNET.Scintilla.BeginUndoAction">
            <summary>
            Marks the beginning of a set of actions that should be treated as a single undo action.
            </summary>
            <remarks>A call to <see cref="M:ScintillaNET.Scintilla.BeginUndoAction" /> should be followed by a call to <see cref="M:ScintillaNET.Scintilla.EndUndoAction" />.</remarks>
            <seealso cref="M:ScintillaNET.Scintilla.EndUndoAction" />
        </member>
        <member name="M:ScintillaNET.Scintilla.BraceBadLight(System.Int32)">
            <summary>
            Styles the specified character position with the <see cref="F:ScintillaNET.Style.BraceBad" /> style when there is an unmatched brace.
            </summary>
            <param name="position">The zero-based document position of the unmatched brace character or <seealso cref="F:ScintillaNET.Scintilla.InvalidPosition"/> to remove the highlight.</param>
        </member>
        <member name="M:ScintillaNET.Scintilla.BraceHighlight(System.Int32,System.Int32)">
            <summary>
            Styles the specified character positions with the <see cref="F:ScintillaNET.Style.BraceLight" /> style.
            </summary>
            <param name="position1">The zero-based document position of the open brace character.</param>
            <param name="position2">The zero-based document position of the close brace character.</param>
            <remarks>Brace highlighting can be removed by specifying <see cref="F:ScintillaNET.Scintilla.InvalidPosition" /> for <paramref name="position1" /> and <paramref name="position2" />.</remarks>
            <seealso cref="P:ScintillaNET.Scintilla.HighlightGuide" />
        </member>
        <member name="M:ScintillaNET.Scintilla.BraceMatch(System.Int32)">
            <summary>
            Finds a corresponding matching brace starting at the position specified.
            The brace characters handled are '(', ')', '[', ']', '{', '}', '&lt;', and '&gt;'.
            </summary>
            <param name="position">The zero-based document position of a brace character to start the search from for a matching brace character.</param>
            <returns>The zero-based document position of the corresponding matching brace or <see cref="F:ScintillaNET.Scintilla.InvalidPosition" /> it no matching brace could be found.</returns>
            <remarks>A match only occurs if the style of the matching brace is the same as the starting brace. Nested braces are handled correctly.</remarks>
        </member>
        <member name="M:ScintillaNET.Scintilla.CallTipCancel">
            <summary>
            Cancels the display of a call tip window.
            </summary>
        </member>
        <member name="M:ScintillaNET.Scintilla.CallTipSetForeHlt(System.Drawing.Color)">
            <summary>
            Sets the color of highlighted text in a call tip.
            </summary>
            <param name="color">The new highlight text Color. The default is dark blue.</param>
        </member>
        <member name="M:ScintillaNET.Scintilla.CallTipSetHlt(System.Int32,System.Int32)">
            <summary>
            Sets the specified range of the call tip text to display in a highlighted style.
            </summary>
            <param name="hlStart">The zero-based index in the call tip text to start highlighting.</param>
            <param name="hlEnd">The zero-based index in the call tip text to stop highlighting (exclusive).</param>
        </member>
        <member name="M:ScintillaNET.Scintilla.CallTipSetPosition(System.Boolean)">
            <summary>
            Determines whether to display a call tip above or below text.
            </summary>
            <param name="above">true to display above text; otherwise, false. The default is false.</param>
        </member>
        <member name="M:ScintillaNET.Scintilla.CallTipShow(System.Int32,System.String)">
            <summary>
            Displays a call tip window.
            </summary>
            <param name="posStart">The zero-based document position where the call tip window should be aligned.</param>
            <param name="definition">The call tip text.</param>
            <remarks>
            Call tips can contain multiple lines separated by '\n' characters. Do not include '\r', as this will most likely print as an empty box.
            The '\t' character is supported and the size can be set by using <see cref="M:ScintillaNET.Scintilla.CallTipTabSize(System.Int32)" />.
            </remarks>
        </member>
        <member name="M:ScintillaNET.Scintilla.CallTipTabSize(System.Int32)">
            <summary>
            Sets the call tip tab size in pixels.
            </summary>
            <param name="tabSize">The width in pixels of a tab '\t' character in a call tip. Specifying 0 disables special treatment of tabs.</param>
        </member>
        <member name="M:ScintillaNET.Scintilla.ChangeLexerState(System.Int32,System.Int32)">
            <summary>
            Indicates to the current <see cref="P:ScintillaNET.Scintilla.Lexer" /> that the internal lexer state has changed in the specified
            range and therefore may need to be redrawn.
            </summary>
            <param name="startPos">The zero-based document position at which the lexer state change starts.</param>
            <param name="endPos">The zero-based document position at which the lexer state change ends.</param>
        </member>
        <member name="M:ScintillaNET.Scintilla.CharPositionFromPoint(System.Int32,System.Int32)">
            <summary>
            Finds the closest character position to the specified display point.
            </summary>
            <param name="x">The x pixel coordinate within the client rectangle of the control.</param>
            <param name="y">The y pixel coordinate within the client rectangle of the control.</param>
            <returns>The zero-based document position of the nearest character to the point specified.</returns>
        </member>
        <member name="M:ScintillaNET.Scintilla.CharPositionFromPointClose(System.Int32,System.Int32)">
            <summary>
            Finds the closest character position to the specified display point or returns -1
            if the point is outside the window or not close to any characters.
            </summary>
            <param name="x">The x pixel coordinate within the client rectangle of the control.</param>
            <param name="y">The y pixel coordinate within the client rectangle of the control.</param>
            <returns>The zero-based document position of the nearest character to the point specified when near a character; otherwise, -1.</returns>
        </member>
        <member name="M:ScintillaNET.Scintilla.ChooseCaretX">
            <summary>
            Explicitly sets the current horizontal offset of the caret as the X position to track
            when the user moves the caret vertically using the up and down keys.
            </summary>
            <remarks>
            When not set explicitly, Scintilla automatically sets this value each time the user moves
            the caret horizontally.
            </remarks>
        </member>
        <member name="M:ScintillaNET.Scintilla.Clear">
            <summary>
            Removes the selected text from the document.
            </summary>
        </member>
        <member name="M:ScintillaNET.Scintilla.ClearAll">
            <summary>
            Deletes all document text, unless the document is read-only.
            </summary>
        </member>
        <member name="M:ScintillaNET.Scintilla.ClearCmdKey(System.Windows.Forms.Keys)">
            <summary>
            Makes the specified key definition do nothing.
            </summary>
            <param name="keyDefinition">The key combination to bind.</param>
            <remarks>This is equivalent to binding the keys to <see cref="F:ScintillaNET.Command.Null" />.</remarks>
        </member>
        <member name="M:ScintillaNET.Scintilla.ClearAllCmdKeys">
            <summary>
            Removes all the key definition command mappings.
            </summary>
        </member>
        <member name="M:ScintillaNET.Scintilla.ClearDocumentStyle">
            <summary>
            Removes all styling from the document and resets the folding state.
            </summary>
        </member>
        <member name="M:ScintillaNET.Scintilla.ClearRegisteredImages">
            <summary>
            Removes all images registered for autocompletion lists.
            </summary>
        </member>
        <member name="M:ScintillaNET.Scintilla.ClearSelections">
            <summary>
            Sets a single empty selection at the start of the document.
            </summary>
        </member>
        <member name="M:ScintillaNET.Scintilla.Colorize(System.Int32,System.Int32)">
            <summary>
            Requests that the current lexer restyle the specified range.
            </summary>
            <param name="startPos">The zero-based document position at which to start styling.</param>
            <param name="endPos">The zero-based document position at which to stop styling (exclusive).</param>
            <remarks>This will also cause fold levels in the range specified to be reset.</remarks>
        </member>
        <member name="M:ScintillaNET.Scintilla.ConvertEols(ScintillaNET.Eol)">
            <summary>
            Changes all end-of-line characters in the document to the format specified.
            </summary>
            <param name="eolMode">One of the <see cref="T:ScintillaNET.Eol" /> enumeration values.</param>
        </member>
        <member name="M:ScintillaNET.Scintilla.Copy">
            <summary>
            Copies the selected text from the document and places it on the clipboard.
            </summary>
        </member>
        <member name="M:ScintillaNET.Scintilla.Copy(ScintillaNET.CopyFormat)">
            <summary>
            Copies the selected text from the document and places it on the clipboard.
            </summary>
            <param name="format">One of the <see cref="T:ScintillaNET.CopyFormat" /> enumeration values.</param>
        </member>
        <member name="M:ScintillaNET.Scintilla.CopyAllowLine">
            <summary>
            Copies the selected text from the document and places it on the clipboard.
            If the selection is empty the current line is copied.
            </summary>
            <remarks>
            If the selection is empty and the current line copied, an extra "MSDEVLineSelect" marker is added to the
            clipboard which is then used in <see cref="M:ScintillaNET.Scintilla.Paste" /> to paste the whole line before the current line.
            </remarks>
        </member>
        <member name="M:ScintillaNET.Scintilla.CopyAllowLine(ScintillaNET.CopyFormat)">
            <summary>
            Copies the selected text from the document and places it on the clipboard.
            If the selection is empty the current line is copied.
            </summary>
            <param name="format">One of the <see cref="T:ScintillaNET.CopyFormat" /> enumeration values.</param>
            <remarks>
            If the selection is empty and the current line copied, an extra "MSDEVLineSelect" marker is added to the
            clipboard which is then used in <see cref="M:ScintillaNET.Scintilla.Paste" /> to paste the whole line before the current line.
            </remarks>
        </member>
        <member name="M:ScintillaNET.Scintilla.CopyRange(System.Int32,System.Int32)">
            <summary>
            Copies the specified range of text to the clipboard.
            </summary>
            <param name="start">The zero-based character position in the document to start copying.</param>
            <param name="end">The zero-based character position (exclusive) in the document to stop copying.</param>
        </member>
        <member name="M:ScintillaNET.Scintilla.CopyRange(System.Int32,System.Int32,ScintillaNET.CopyFormat)">
            <summary>
            Copies the specified range of text to the clipboard.
            </summary>
            <param name="start">The zero-based character position in the document to start copying.</param>
            <param name="end">The zero-based character position (exclusive) in the document to stop copying.</param>
            <param name="format">One of the <see cref="T:ScintillaNET.CopyFormat" /> enumeration values.</param>
        </member>
        <member name="M:ScintillaNET.Scintilla.CreateDocument">
            <summary>
            Create a new, empty document.
            </summary>
            <returns>A new <see cref="P:ScintillaNET.Scintilla.Document" /> with a reference count of 1.</returns>
            <remarks>You are responsible for ensuring the reference count eventually reaches 0 or memory leaks will occur.</remarks>
        </member>
        <member name="M:ScintillaNET.Scintilla.CreateLoader(System.Int32)">
            <summary>
            Creates an <see cref="T:ScintillaNET.ILoader" /> object capable of loading a <see cref="P:ScintillaNET.Scintilla.Document" /> on a background (non-UI) thread.
            </summary>
            <param name="length">The initial number of characters to allocate.</param>
            <returns>A new <see cref="T:ScintillaNET.ILoader" /> object, or null if the loader could not be created.</returns>
        </member>
        <member name="M:ScintillaNET.Scintilla.Cut">
            <summary>
            Cuts the selected text from the document and places it on the clipboard.
            </summary>
        </member>
        <member name="M:ScintillaNET.Scintilla.DeleteRange(System.Int32,System.Int32)">
            <summary>
            Deletes a range of text from the document.
            </summary>
            <param name="position">The zero-based character position to start deleting.</param>
            <param name="length">The number of characters to delete.</param>
        </member>
        <member name="M:ScintillaNET.Scintilla.DescribeKeywordSets">
            <summary>
            Retrieves a description of keyword sets supported by the current <see cref="P:ScintillaNET.Scintilla.Lexer" />.
            </summary>
            <returns>A String describing each keyword set separated by line breaks for the current lexer.</returns>
        </member>
        <member name="M:ScintillaNET.Scintilla.DescribeProperty(System.String)">
            <summary>
            Retrieves a brief description of the specified property name for the current <see cref="P:ScintillaNET.Scintilla.Lexer" />.
            </summary>
            <param name="name">A property name supported by the current <see cref="P:ScintillaNET.Scintilla.Lexer" />.</param>
            <returns>A String describing the lexer property name if found; otherwise, String.Empty.</returns>
            <remarks>A list of supported property names for the current <see cref="P:ScintillaNET.Scintilla.Lexer" /> can be obtained by calling <see cref="M:ScintillaNET.Scintilla.PropertyNames" />.</remarks>
        </member>
        <member name="M:ScintillaNET.Scintilla.DirectMessage(System.Int32,System.IntPtr,System.IntPtr)">
            <summary>
            Sends the specified message directly to the native Scintilla window,
            bypassing any managed APIs.
            </summary>
            <param name="msg">The message ID.</param>
            <param name="wParam">The message <c>wparam</c> field.</param>
            <param name="lParam">The message <c>lparam</c> field.</param>
            <returns>An <see cref="T:System.IntPtr"/> representing the result of the message request.</returns>
            <remarks>This API supports the Scintilla infrastructure and is not intended to be used directly from your code.</remarks>
        </member>
        <member name="M:ScintillaNET.Scintilla.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the Control and its child controls and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:ScintillaNET.Scintilla.DocLineFromVisible(System.Int32)">
            <summary>
            Returns the zero-based document line index from the specified display line index.
            </summary>
            <param name="displayLine">The zero-based display line index.</param>
            <returns>The zero-based document line index.</returns>
            <seealso cref="P:ScintillaNET.Line.DisplayIndex" />
        </member>
        <member name="M:ScintillaNET.Scintilla.DropSelection(System.Int32)">
            <summary>
            If there are multiple selections, removes the specified selection.
            </summary>
            <param name="selection">The zero-based selection index.</param>
            <seealso cref="P:ScintillaNET.Scintilla.Selections" />
        </member>
        <member name="M:ScintillaNET.Scintilla.EmptyUndoBuffer">
            <summary>
            Clears any undo or redo history.
            </summary>
            <remarks>This will also cause <see cref="M:ScintillaNET.Scintilla.SetSavePoint" /> to be called but will not raise the <see cref="E:ScintillaNET.Scintilla.SavePointReached" /> event.</remarks>
        </member>
        <member name="M:ScintillaNET.Scintilla.EndUndoAction">
            <summary>
            Marks the end of a set of actions that should be treated as a single undo action.
            </summary>
            <seealso cref="M:ScintillaNET.Scintilla.BeginUndoAction" />
        </member>
        <member name="M:ScintillaNET.Scintilla.ExecuteCmd(ScintillaNET.Command)">
            <summary>
            Performs the specified <see cref="T:ScintillaNET.Scintilla" />command.
            </summary>
            <param name="sciCommand">The command to perform.</param>
        </member>
        <member name="M:ScintillaNET.Scintilla.FoldAll(ScintillaNET.FoldAction)">
            <summary>
            Performs the specified fold action on the entire document.
            </summary>
            <param name="action">One of the <see cref="T:ScintillaNET.FoldAction" /> enumeration values.</param>
            <remarks>When using <see cref="F:ScintillaNET.FoldAction.Toggle" /> the first fold header in the document is examined to decide whether to expand or contract.</remarks>
        </member>
        <member name="M:ScintillaNET.Scintilla.FoldDisplayTextSetStyle(ScintillaNET.FoldDisplayText)">
            <summary>
            Changes the appearance of fold text tags.
            </summary>
            <param name="style">One of the <see cref="T:ScintillaNET.FoldDisplayText" /> enumeration values.</param>
            <remarks>The text tag to display on a folded line can be set using <see cref="M:ScintillaNET.Line.ToggleFoldShowText(System.String)" />.</remarks>
            <seealso cref="M:ScintillaNET.Line.ToggleFoldShowText(System.String)" />.
        </member>
        <member name="M:ScintillaNET.Scintilla.GetCharAt(System.Int32)">
            <summary>
            Returns the character as the specified document position.
            </summary>
            <param name="position">The zero-based document position of the character to get.</param>
            <returns>The character at the specified <paramref name="position" />.</returns>
        </member>
        <member name="M:ScintillaNET.Scintilla.GetColumn(System.Int32)">
            <summary>
            Returns the column number of the specified document position, taking the width of tabs into account.
            </summary>
            <param name="position">The zero-based document position to get the column for.</param>
            <returns>The number of columns from the start of the line to the specified document <paramref name="position" />.</returns>
        </member>
        <member name="M:ScintillaNET.Scintilla.GetEndStyled">
            <summary>
            Returns the last document position likely to be styled correctly.
            </summary>
            <returns>The zero-based document position of the last styled character.</returns>
        </member>
        <member name="M:ScintillaNET.Scintilla.GetProperty(System.String)">
            <summary>
            Lookup a property value for the current <see cref="P:ScintillaNET.Scintilla.Lexer" />.
            </summary>
            <param name="name">The property name to lookup.</param>
            <returns>
            A String representing the property value if found; otherwise, String.Empty.
            Any embedded property name macros as described in <see cref="M:ScintillaNET.Scintilla.SetProperty(System.String,System.String)" /> will not be replaced (expanded).
            </returns>
            <seealso cref="M:ScintillaNET.Scintilla.GetPropertyExpanded(System.String)" />
        </member>
        <member name="M:ScintillaNET.Scintilla.GetPropertyExpanded(System.String)">
            <summary>
            Lookup a property value for the current <see cref="P:ScintillaNET.Scintilla.Lexer" /> and expand any embedded property macros.
            </summary>
            <param name="name">The property name to lookup.</param>
            <returns>
            A String representing the property value if found; otherwise, String.Empty.
            Any embedded property name macros as described in <see cref="M:ScintillaNET.Scintilla.SetProperty(System.String,System.String)" /> will be replaced (expanded).
            </returns>
            <seealso cref="M:ScintillaNET.Scintilla.GetProperty(System.String)" />
        </member>
        <member name="M:ScintillaNET.Scintilla.GetPropertyInt(System.String,System.Int32)">
            <summary>
            Lookup a property value for the current <see cref="P:ScintillaNET.Scintilla.Lexer" /> and convert it to an integer.
            </summary>
            <param name="name">The property name to lookup.</param>
            <param name="defaultValue">A default value to return if the property name is not found or has no value.</param>
            <returns>
            An Integer representing the property value if found;
            otherwise, <paramref name="defaultValue" /> if not found or the property has no value;
            otherwise, 0 if the property is not a number.
            </returns>
        </member>
        <member name="M:ScintillaNET.Scintilla.GetStyleAt(System.Int32)">
            <summary>
            Gets the style of the specified document position.
            </summary>
            <param name="position">The zero-based document position of the character to get the style for.</param>
            <returns>The zero-based <see cref="T:ScintillaNET.Style" /> index used at the specified <paramref name="position" />.</returns>
        </member>
        <member name="M:ScintillaNET.Scintilla.GetTag(System.Int32)">
            <summary>
            Returns the capture group text of the most recent regular expression search.
            </summary>
            <param name="tagNumber">The capture group (1 through 9) to get the text for.</param>
            <returns>A String containing the capture group text if it participated in the match; otherwise, an empty string.</returns>
            <seealso cref="M:ScintillaNET.Scintilla.SearchInTarget(System.String)" />
        </member>
        <member name="M:ScintillaNET.Scintilla.GetTextRange(System.Int32,System.Int32)">
            <summary>
            Gets a range of text from the document.
            </summary>
            <param name="position">The zero-based starting character position of the range to get.</param>
            <param name="length">The number of characters to get.</param>
            <returns>A string representing the text range.</returns>
        </member>
        <member name="M:ScintillaNET.Scintilla.GetTextRangeAsHtml(System.Int32,System.Int32)">
            <summary>
            Gets a range of text from the document formatted as Hypertext Markup Language (HTML).
            </summary>
            <param name="position">The zero-based starting character position of the range to get.</param>
            <param name="length">The number of characters to get.</param>
            <returns>A string representing the text range formatted as HTML.</returns>
        </member>
        <member name="M:ScintillaNET.Scintilla.GetVersionInfo">
            <summary>
            Returns the version information of the native Scintilla library.
            </summary>
            <returns>An object representing the version information of the native Scintilla library.</returns>
        </member>
        <member name="M:ScintillaNET.Scintilla.GetWordFromPosition(System.Int32)">
            <summary>
             Gets the word from the position specified.
             </summary>
             <param name="position">The zero-based document character position to get the word from.</param>
             <returns>The word at the specified position.</returns>
        </member>
        <member name="M:ScintillaNET.Scintilla.GotoPosition(System.Int32)">
            <summary>
            Navigates the caret to the document position specified.
            </summary>
            <param name="position">The zero-based document character position to navigate to.</param>
            <remarks>Any selection is discarded.</remarks>
        </member>
        <member name="M:ScintillaNET.Scintilla.HideLines(System.Int32,System.Int32)">
            <summary>
            Hides the range of lines specified.
            </summary>
            <param name="lineStart">The zero-based index of the line range to start hiding.</param>
            <param name="lineEnd">The zero-based index of the line range to end hiding.</param>
            <seealso cref="M:ScintillaNET.Scintilla.ShowLines(System.Int32,System.Int32)" />
            <seealso cref="P:ScintillaNET.Line.Visible" />
        </member>
        <member name="M:ScintillaNET.Scintilla.IndicatorAllOnFor(System.Int32)">
            <summary>
            Returns a bitmap representing the 32 indicators in use at the specified position.
            </summary>
            <param name="position">The zero-based character position within the document to test.</param>
            <returns>A bitmap indicating which of the 32 indicators are in use at the specified <paramref name="position" />.</returns>
        </member>
        <member name="M:ScintillaNET.Scintilla.IndicatorClearRange(System.Int32,System.Int32)">
            <summary>
            Removes the <see cref="P:ScintillaNET.Scintilla.IndicatorCurrent" /> indicator (and user-defined value) from the specified range of text.
            </summary>
            <param name="position">The zero-based character position within the document to start clearing.</param>
            <param name="length">The number of characters to clear.</param>
        </member>
        <member name="M:ScintillaNET.Scintilla.IndicatorFillRange(System.Int32,System.Int32)">
            <summary>
            Adds the <see cref="P:ScintillaNET.Scintilla.IndicatorCurrent" /> indicator and <see cref="P:ScintillaNET.Scintilla.IndicatorValue" /> value to the specified range of text.
            </summary>
            <param name="position">The zero-based character position within the document to start filling.</param>
            <param name="length">The number of characters to fill.</param>
        </member>
        <member name="M:ScintillaNET.Scintilla.InsertText(System.Int32,System.String)">
            <summary>
            Inserts text at the specified position.
            </summary>
            <param name="position">The zero-based character position to insert the text. Specify -1 to use the current caret position.</param>
            <param name="text">The text to insert into the document.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="position" /> less than zero and not equal to -1. -or-
            <paramref name="position" /> is greater than the document length.
            </exception>
            <remarks>No scrolling is performed.</remarks>
        </member>
        <member name="M:ScintillaNET.Scintilla.IsRangeWord(System.Int32,System.Int32)">
            <summary>
            Determines whether the specified <paramref name="start" /> and <paramref name="end" /> positions are
            at the beginning and end of a word, respectively.
            </summary>
            <param name="start">The zero-based document position of the possible word start.</param>
            <param name="end">The zero-based document position of the possible word end.</param>
            <returns>
            true if <paramref name="start" /> and <paramref name="end" /> are at the beginning and end of a word, respectively;
            otherwise, false.
            </returns>
            <remarks>
            This method does not check whether there is whitespace in the search range,
            only that the <paramref name="start" /> and <paramref name="end" /> are at word boundaries.
            </remarks>
        </member>
        <member name="M:ScintillaNET.Scintilla.LineFromPosition(System.Int32)">
            <summary>
            Returns the line that contains the document position specified.
            </summary>
            <param name="position">The zero-based document character position.</param>
            <returns>The zero-based document line index containing the character <paramref name="position" />.</returns>
        </member>
        <member name="M:ScintillaNET.Scintilla.LineScroll(System.Int32,System.Int32)">
            <summary>
            Scrolls the display the number of lines and columns specified.
            </summary>
            <param name="lines">The number of lines to scroll.</param>
            <param name="columns">The number of columns to scroll.</param>
            <remarks>
            Negative values scroll in the opposite direction.
            A column is the width in pixels of a space character in the <see cref="F:ScintillaNET.Style.Default" /> style.
            </remarks>
        </member>
        <member name="M:ScintillaNET.Scintilla.LoadLexerLibrary(System.String)">
            <summary>
            Loads a <see cref="T:ScintillaNET.Scintilla" /> compatible lexer from an external DLL.
            </summary>
            <param name="path">The path to the external lexer DLL.</param>
        </member>
        <member name="M:ScintillaNET.Scintilla.MarkerDeleteAll(System.Int32)">
            <summary>
            Removes the specified marker from all lines.
            </summary>
            <param name="marker">The zero-based <see cref="T:ScintillaNET.Marker" /> index to remove from all lines, or -1 to remove all markers from all lines.</param>
        </member>
        <member name="M:ScintillaNET.Scintilla.MarkerDeleteHandle(ScintillaNET.MarkerHandle)">
            <summary>
            Searches the document for the marker handle and deletes the marker if found.
            </summary>
            <param name="markerHandle">The <see cref="T:ScintillaNET.MarkerHandle" /> created by a previous call to <see cref="M:ScintillaNET.Line.MarkerAdd(System.Int32)" /> of the marker to delete.</param>
        </member>
        <member name="M:ScintillaNET.Scintilla.MarkerEnableHighlight(System.Boolean)">
            <summary>
            Enable or disable highlighting of the current folding block.
            </summary>
            <param name="enabled">true to highlight the current folding block; otherwise, false.</param>
        </member>
        <member name="M:ScintillaNET.Scintilla.MarkerLineFromHandle(ScintillaNET.MarkerHandle)">
            <summary>
            Searches the document for the marker handle and returns the line number containing the marker if found.
            </summary>
            <param name="markerHandle">The <see cref="T:ScintillaNET.MarkerHandle" /> created by a previous call to <see cref="M:ScintillaNET.Line.MarkerAdd(System.Int32)" /> of the marker to search for.</param>
            <returns>If found, the zero-based line index containing the marker; otherwise, -1.</returns>
        </member>
        <member name="M:ScintillaNET.Scintilla.MultiEdgeAddLine(System.Int32,System.Drawing.Color)">
            <summary>
            Specifies the long line indicator column number and color when <see cref="P:ScintillaNET.Scintilla.EdgeMode" /> is <see cref="F:ScintillaNET.EdgeMode.MultiLine" />.
            </summary>
            <param name="column">The zero-based column number to indicate.</param>
            <param name="edgeColor">The color of the vertical long line indicator.</param>
            <remarks>A column is defined as the width of a space character in the <see cref="F:ScintillaNET.Style.Default" /> style.</remarks>
            <seealso cref="M:ScintillaNET.Scintilla.MultiEdgeClearAll" />
        </member>
        <member name="M:ScintillaNET.Scintilla.MultiEdgeClearAll">
            <summary>
            Removes all the long line column indicators specified using <seealso cref="M:ScintillaNET.Scintilla.MultiEdgeAddLine(System.Int32,System.Drawing.Color)" />.
            </summary>
            <seealso cref="M:ScintillaNET.Scintilla.MultiEdgeAddLine(System.Int32,System.Drawing.Color)" />
        </member>
        <member name="M:ScintillaNET.Scintilla.MultipleSelectAddEach">
            <summary>
            Searches for all instances of the main selection within the <see cref="P:ScintillaNET.Scintilla.TargetStart" /> and <see cref="P:ScintillaNET.Scintilla.TargetEnd" />
            range and adds any matches to the selection.
            </summary>
            <remarks>
            The <see cref="P:ScintillaNET.Scintilla.SearchFlags" /> property is respected when searching, allowing additional
            selections to match on different case sensitivity and word search options.
            </remarks>
            <seealso cref="M:ScintillaNET.Scintilla.MultipleSelectAddNext" />
        </member>
        <member name="M:ScintillaNET.Scintilla.MultipleSelectAddNext">
            <summary>
            Searches for the next instance of the main selection within the <see cref="P:ScintillaNET.Scintilla.TargetStart" /> and <see cref="P:ScintillaNET.Scintilla.TargetEnd" />
            range and adds any match to the selection.
            </summary>
            <remarks>
            The <see cref="P:ScintillaNET.Scintilla.SearchFlags" /> property is respected when searching, allowing additional
            selections to match on different case sensitivity and word search options.
            </remarks>
            <seealso cref="M:ScintillaNET.Scintilla.MultipleSelectAddNext" />
        </member>
        <member name="M:ScintillaNET.Scintilla.OnAutoCCancelled(System.EventArgs)">
            <summary>
            Raises the <see cref="E:ScintillaNET.Scintilla.AutoCCancelled" /> event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ScintillaNET.Scintilla.OnAutoCCharDeleted(System.EventArgs)">
            <summary>
            Raises the <see cref="E:ScintillaNET.Scintilla.AutoCCharDeleted" /> event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ScintillaNET.Scintilla.OnAutoCCompleted(ScintillaNET.AutoCSelectionEventArgs)">
            <summary>
            Raises the <see cref="E:ScintillaNET.Scintilla.AutoCCompleted" /> event.
            </summary>
            <param name="e">An <see cref="T:ScintillaNET.AutoCSelectionEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:ScintillaNET.Scintilla.OnAutoCSelection(ScintillaNET.AutoCSelectionEventArgs)">
            <summary>
            Raises the <see cref="E:ScintillaNET.Scintilla.AutoCSelection" /> event.
            </summary>
            <param name="e">An <see cref="T:ScintillaNET.AutoCSelectionEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:ScintillaNET.Scintilla.OnBeforeDelete(ScintillaNET.BeforeModificationEventArgs)">
            <summary>
            Raises the <see cref="E:ScintillaNET.Scintilla.BeforeDelete" /> event.
            </summary>
            <param name="e">A <see cref="T:ScintillaNET.BeforeModificationEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:ScintillaNET.Scintilla.OnBeforeInsert(ScintillaNET.BeforeModificationEventArgs)">
            <summary>
            Raises the <see cref="E:ScintillaNET.Scintilla.BeforeInsert" /> event.
            </summary>
            <param name="e">A <see cref="T:ScintillaNET.BeforeModificationEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:ScintillaNET.Scintilla.OnBorderStyleChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:ScintillaNET.Scintilla.BorderStyleChanged" /> event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ScintillaNET.Scintilla.OnChangeAnnotation(ScintillaNET.ChangeAnnotationEventArgs)">
            <summary>
            Raises the <see cref="E:ScintillaNET.Scintilla.ChangeAnnotation" /> event.
            </summary>
            <param name="e">A <see cref="T:ScintillaNET.ChangeAnnotationEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:ScintillaNET.Scintilla.OnCharAdded(ScintillaNET.CharAddedEventArgs)">
            <summary>
            Raises the <see cref="E:ScintillaNET.Scintilla.CharAdded" /> event.
            </summary>
            <param name="e">A <see cref="T:ScintillaNET.CharAddedEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:ScintillaNET.Scintilla.OnDelete(ScintillaNET.ModificationEventArgs)">
            <summary>
            Raises the <see cref="E:ScintillaNET.Scintilla.Delete" /> event.
            </summary>
            <param name="e">A <see cref="T:ScintillaNET.ModificationEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:ScintillaNET.Scintilla.OnDoubleClick(ScintillaNET.DoubleClickEventArgs)">
            <summary>
            Raises the <see cref="E:ScintillaNET.Scintilla.DoubleClick" /> event.
            </summary>
            <param name="e">A <see cref="T:ScintillaNET.DoubleClickEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:ScintillaNET.Scintilla.OnDwellEnd(ScintillaNET.DwellEventArgs)">
            <summary>
            Raises the <see cref="E:ScintillaNET.Scintilla.DwellEnd" /> event.
            </summary>
            <param name="e">A <see cref="T:ScintillaNET.DwellEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:ScintillaNET.Scintilla.OnDwellStart(ScintillaNET.DwellEventArgs)">
            <summary>
            Raises the <see cref="E:ScintillaNET.Scintilla.DwellStart" /> event.
            </summary>
            <param name="e">A <see cref="T:ScintillaNET.DwellEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:ScintillaNET.Scintilla.OnHandleCreated(System.EventArgs)">
            <summary>
            Raises the HandleCreated event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ScintillaNET.Scintilla.OnHotspotClick(ScintillaNET.HotspotClickEventArgs)">
            <summary>
            Raises the <see cref="E:ScintillaNET.Scintilla.HotspotClick" /> event.
            </summary>
            <param name="e">A <see cref="T:ScintillaNET.HotspotClickEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:ScintillaNET.Scintilla.OnHotspotDoubleClick(ScintillaNET.HotspotClickEventArgs)">
            <summary>
            Raises the <see cref="E:ScintillaNET.Scintilla.HotspotDoubleClick" /> event.
            </summary>
            <param name="e">A <see cref="T:ScintillaNET.HotspotClickEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:ScintillaNET.Scintilla.OnHotspotReleaseClick(ScintillaNET.HotspotClickEventArgs)">
            <summary>
            Raises the <see cref="E:ScintillaNET.Scintilla.HotspotReleaseClick" /> event.
            </summary>
            <param name="e">A <see cref="T:ScintillaNET.HotspotClickEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:ScintillaNET.Scintilla.OnIndicatorClick(ScintillaNET.IndicatorClickEventArgs)">
            <summary>
            Raises the <see cref="E:ScintillaNET.Scintilla.IndicatorClick" /> event.
            </summary>
            <param name="e">An <see cref="T:ScintillaNET.IndicatorClickEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:ScintillaNET.Scintilla.OnIndicatorRelease(ScintillaNET.IndicatorReleaseEventArgs)">
            <summary>
            Raises the <see cref="E:ScintillaNET.Scintilla.IndicatorRelease" /> event.
            </summary>
            <param name="e">An <see cref="T:ScintillaNET.IndicatorReleaseEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:ScintillaNET.Scintilla.OnInsert(ScintillaNET.ModificationEventArgs)">
            <summary>
            Raises the <see cref="E:ScintillaNET.Scintilla.Insert" /> event.
            </summary>
            <param name="e">A <see cref="T:ScintillaNET.ModificationEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:ScintillaNET.Scintilla.OnInsertCheck(ScintillaNET.InsertCheckEventArgs)">
            <summary>
            Raises the <see cref="E:ScintillaNET.Scintilla.InsertCheck" /> event.
            </summary>
            <param name="e">An <see cref="T:ScintillaNET.InsertCheckEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:ScintillaNET.Scintilla.OnMarginClick(ScintillaNET.MarginClickEventArgs)">
            <summary>
            Raises the <see cref="E:ScintillaNET.Scintilla.MarginClick" /> event.
            </summary>
            <param name="e">A <see cref="T:ScintillaNET.MarginClickEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:ScintillaNET.Scintilla.OnMarginRightClick(ScintillaNET.MarginClickEventArgs)">
            <summary>
            Raises the <see cref="E:ScintillaNET.Scintilla.MarginRightClick" /> event.
            </summary>
            <param name="e">A <see cref="T:ScintillaNET.MarginClickEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:ScintillaNET.Scintilla.OnModifyAttempt(System.EventArgs)">
            <summary>
            Raises the <see cref="E:ScintillaNET.Scintilla.ModifyAttempt" /> event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ScintillaNET.Scintilla.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseUp event.
            </summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:ScintillaNET.Scintilla.OnNeedShown(ScintillaNET.NeedShownEventArgs)">
            <summary>
            Raises the <see cref="E:ScintillaNET.Scintilla.NeedShown" /> event.
            </summary>
            <param name="e">A <see cref="T:ScintillaNET.NeedShownEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:ScintillaNET.Scintilla.OnPainted(System.EventArgs)">
            <summary>
            Raises the <see cref="E:ScintillaNET.Scintilla.Painted" /> event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ScintillaNET.Scintilla.OnSavePointLeft(System.EventArgs)">
            <summary>
            Raises the <see cref="E:ScintillaNET.Scintilla.SavePointLeft" /> event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ScintillaNET.Scintilla.OnSavePointReached(System.EventArgs)">
            <summary>
            Raises the <see cref="E:ScintillaNET.Scintilla.SavePointReached" /> event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ScintillaNET.Scintilla.OnStyleNeeded(ScintillaNET.StyleNeededEventArgs)">
            <summary>
            Raises the <see cref="E:ScintillaNET.Scintilla.StyleNeeded" /> event.
            </summary>
            <param name="e">A <see cref="T:ScintillaNET.StyleNeededEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:ScintillaNET.Scintilla.OnUpdateUI(ScintillaNET.UpdateUIEventArgs)">
            <summary>
            Raises the <see cref="E:ScintillaNET.Scintilla.UpdateUI" /> event.
            </summary>
            <param name="e">An <see cref="T:ScintillaNET.UpdateUIEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:ScintillaNET.Scintilla.OnZoomChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:ScintillaNET.Scintilla.ZoomChanged" /> event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ScintillaNET.Scintilla.Paste">
            <summary>
            Pastes the contents of the clipboard into the current selection.
            </summary>
        </member>
        <member name="M:ScintillaNET.Scintilla.PointXFromPosition(System.Int32)">
            <summary>
            Returns the X display pixel location of the specified document position.
            </summary>
            <param name="pos">The zero-based document character position.</param>
            <returns>The x-coordinate of the specified <paramref name="pos" /> within the client rectangle of the control.</returns>
        </member>
        <member name="M:ScintillaNET.Scintilla.PointYFromPosition(System.Int32)">
            <summary>
            Returns the Y display pixel location of the specified document position.
            </summary>
            <param name="pos">The zero-based document character position.</param>
            <returns>The y-coordinate of the specified <paramref name="pos" /> within the client rectangle of the control.</returns>
        </member>
        <member name="M:ScintillaNET.Scintilla.PropertyNames">
            <summary>
            Retrieves a list of property names that can be set for the current <see cref="P:ScintillaNET.Scintilla.Lexer" />.
            </summary>
            <returns>A String of property names separated by line breaks.</returns>
        </member>
        <member name="M:ScintillaNET.Scintilla.PropertyType(System.String)">
            <summary>
            Retrieves the data type of the specified property name for the current <see cref="P:ScintillaNET.Scintilla.Lexer" />.
            </summary>
            <param name="name">A property name supported by the current <see cref="P:ScintillaNET.Scintilla.Lexer" />.</param>
            <returns>One of the <see cref="M:ScintillaNET.Scintilla.PropertyType(System.String)" /> enumeration values. The default is <see cref="F:ScintillaNET.PropertyType.Boolean" />.</returns>
            <remarks>A list of supported property names for the current <see cref="P:ScintillaNET.Scintilla.Lexer" /> can be obtained by calling <see cref="M:ScintillaNET.Scintilla.PropertyNames" />.</remarks>
        </member>
        <member name="M:ScintillaNET.Scintilla.Redo">
            <summary>
            Redoes the effect of an <see cref="M:ScintillaNET.Scintilla.Undo" /> operation.
            </summary>
        </member>
        <member name="M:ScintillaNET.Scintilla.RegisterRgbaImage(System.Int32,System.Drawing.Bitmap)">
            <summary>
            Maps the specified image to a type identifer for use in an autocompletion list.
            </summary>
            <param name="type">The numeric identifier for this image.</param>
            <param name="image">The Bitmap to use in an autocompletion list.</param>
            <remarks>
            The <paramref name="image" /> registered can be referenced by its <paramref name="type" /> identifer in an autocompletion
            list by suffixing a word with the <see cref="P:ScintillaNET.Scintilla.AutoCTypeSeparator" /> character and the <paramref name="type" /> value. e.g.
            "int?2 long?3 short?1" etc....
            </remarks>
            <seealso cref="P:ScintillaNET.Scintilla.AutoCTypeSeparator" />
        </member>
        <member name="M:ScintillaNET.Scintilla.ReleaseDocument(ScintillaNET.Document)">
            <summary>
            Decreases the reference count of the specified document by 1.
            </summary>
            <param name="document">
            The document reference count to decrease.
            When a document's reference count reaches 0 it is destroyed and any associated memory released.
            </param>
        </member>
        <member name="M:ScintillaNET.Scintilla.ReplaceSelection(System.String)">
            <summary>
            Replaces the current selection with the specified text.
            </summary>
            <param name="text">The text that should replace the current selection.</param>
            <remarks>
            If there is not a current selection, the text will be inserted at the current caret position.
            Following the operation the caret is placed at the end of the inserted text and scrolled into view.
            </remarks>
        </member>
        <member name="M:ScintillaNET.Scintilla.ReplaceTarget(System.String)">
            <summary>
            Replaces the target defined by <see cref="P:ScintillaNET.Scintilla.TargetStart" /> and <see cref="P:ScintillaNET.Scintilla.TargetEnd" /> with the specified <paramref name="text" />.
            </summary>
            <param name="text">The text that will replace the current target.</param>
            <returns>The length of the replaced text.</returns>
            <remarks>
            The <see cref="P:ScintillaNET.Scintilla.TargetStart" /> and <see cref="P:ScintillaNET.Scintilla.TargetEnd" /> properties will be updated to the start and end positions of the replaced text.
            The recommended way to delete text in the document is to set the target range to be removed and replace the target with an empty string.
            </remarks>
        </member>
        <member name="M:ScintillaNET.Scintilla.ReplaceTargetRe(System.String)">
            <summary>
            Replaces the target text defined by <see cref="P:ScintillaNET.Scintilla.TargetStart" /> and <see cref="P:ScintillaNET.Scintilla.TargetEnd" /> with the specified value after first substituting
            "\1" through "\9" macros in the <paramref name="text" /> with the most recent regular expression capture groups.
            </summary>
            <param name="text">The text containing "\n" macros that will be substituted with the most recent regular expression capture groups and then replace the current target.</param>
            <returns>The length of the replaced text.</returns>
            <remarks>
            The "\0" macro will be substituted by the entire matched text from the most recent search.
            The <see cref="P:ScintillaNET.Scintilla.TargetStart" /> and <see cref="P:ScintillaNET.Scintilla.TargetEnd" /> properties will be updated to the start and end positions of the replaced text.
            </remarks>
            <seealso cref="M:ScintillaNET.Scintilla.GetTag(System.Int32)" />
        </member>
        <member name="M:ScintillaNET.Scintilla.RotateSelection">
            <summary>
            Makes the next selection the main selection.
            </summary>
        </member>
        <member name="M:ScintillaNET.Scintilla.ScrollCaret">
            <summary>
            Scrolls the current position into view, if it is not already visible.
            </summary>
        </member>
        <member name="M:ScintillaNET.Scintilla.ScrollRange(System.Int32,System.Int32)">
            <summary>
            Scrolls the specified range into view.
            </summary>
            <param name="start">The zero-based document start position to scroll to.</param>
            <param name="end">
            The zero-based document end position to scroll to if doing so does not cause the <paramref name="start" />
            position to scroll out of view.
            </param>
            <remarks>This may be used to make a search match visible.</remarks>
        </member>
        <member name="M:ScintillaNET.Scintilla.SearchInTarget(System.String)">
            <summary>
            Searches for the first occurrence of the specified text in the target defined by <see cref="P:ScintillaNET.Scintilla.TargetStart" /> and <see cref="P:ScintillaNET.Scintilla.TargetEnd" />.
            </summary>
            <param name="text">The text to search for. The interpretation of the text (i.e. whether it is a regular expression) is defined by the <see cref="P:ScintillaNET.Scintilla.SearchFlags" /> property.</param>
            <returns>The zero-based start position of the matched text within the document if successful; otherwise, -1.</returns>
            <remarks>
            If successful, the <see cref="P:ScintillaNET.Scintilla.TargetStart" /> and <see cref="P:ScintillaNET.Scintilla.TargetEnd" /> properties will be updated to the start and end positions of the matched text.
            Searching can be performed in reverse using a <see cref="P:ScintillaNET.Scintilla.TargetStart" /> greater than the <see cref="P:ScintillaNET.Scintilla.TargetEnd" />.
            </remarks>
        </member>
        <member name="M:ScintillaNET.Scintilla.SelectAll">
            <summary>
            Selects all the text in the document.
            </summary>
            <remarks>The current position is not scrolled into view.</remarks>
        </member>
        <member name="M:ScintillaNET.Scintilla.SetAdditionalSelBack(System.Drawing.Color)">
            <summary>
            Sets the background color of additional selections.
            </summary>
            <param name="color">Additional selections background color.</param>
            <remarks>Calling <see cref="M:ScintillaNET.Scintilla.SetSelectionBackColor(System.Boolean,System.Drawing.Color)" /> will reset the <paramref name="color" /> specified.</remarks>
        </member>
        <member name="M:ScintillaNET.Scintilla.SetAdditionalSelFore(System.Drawing.Color)">
            <summary>
            Sets the foreground color of additional selections.
            </summary>
            <param name="color">Additional selections foreground color.</param>
            <remarks>Calling <see cref="M:ScintillaNET.Scintilla.SetSelectionForeColor(System.Boolean,System.Drawing.Color)" /> will reset the <paramref name="color" /> specified.</remarks>
        </member>
        <member name="M:ScintillaNET.Scintilla.SetEmptySelection(System.Int32)">
            <summary>
            Removes any selection and places the caret at the specified position.
            </summary>
            <param name="pos">The zero-based document position to place the caret at.</param>
            <remarks>The caret is not scrolled into view.</remarks>
        </member>
        <member name="M:ScintillaNET.Scintilla.SetFoldFlags(ScintillaNET.FoldFlags)">
            <summary>
            Sets additional options for displaying folds.
            </summary>
            <param name="flags">A bitwise combination of the <see cref="T:ScintillaNET.FoldFlags" /> enumeration.</param>
        </member>
        <member name="M:ScintillaNET.Scintilla.SetFoldMarginColor(System.Boolean,System.Drawing.Color)">
            <summary>
            Sets a global override to the fold margin color.
            </summary>
            <param name="use">true to override the fold margin color; otherwise, false.</param>
            <param name="color">The global fold margin color.</param>
            <seealso cref="M:ScintillaNET.Scintilla.SetFoldMarginHighlightColor(System.Boolean,System.Drawing.Color)" />
        </member>
        <member name="M:ScintillaNET.Scintilla.SetFoldMarginHighlightColor(System.Boolean,System.Drawing.Color)">
            <summary>
            Sets a global override to the fold margin highlight color.
            </summary>
            <param name="use">true to override the fold margin highlight color; otherwise, false.</param>
            <param name="color">The global fold margin highlight color.</param>
            <seealso cref="M:ScintillaNET.Scintilla.SetFoldMarginColor(System.Boolean,System.Drawing.Color)" />
        </member>
        <member name="M:ScintillaNET.Scintilla.SetKeywords(System.Int32,System.String)">
            <summary>
            Updates a keyword set used by the current <see cref="P:ScintillaNET.Scintilla.Lexer" />.
            </summary>
            <param name="set">The zero-based index of the keyword set to update.</param>
            <param name="keywords">
            A list of keywords pertaining to the current <see cref="P:ScintillaNET.Scintilla.Lexer" /> separated by whitespace (space, tab, '\n', '\r') characters.
            </param>
            <remarks>The keywords specified will be styled according to the current <see cref="P:ScintillaNET.Scintilla.Lexer" />.</remarks>
            <seealso cref="M:ScintillaNET.Scintilla.DescribeKeywordSets" />
        </member>
        <member name="M:ScintillaNET.Scintilla.SetDestroyHandleBehavior(System.Boolean)">
            <summary>
            Sets the application-wide behavior for destroying <see cref="T:ScintillaNET.Scintilla" /> controls.
            </summary>
            <param name="reparent">
            true to reparent Scintilla controls to message-only windows when destroyed rather than actually destroying the control handle; otherwise, false.
            The default is true.
            </param>
            <remarks>This method must be called prior to the first <see cref="T:ScintillaNET.Scintilla" /> control being created.</remarks>
        </member>
        <member name="M:ScintillaNET.Scintilla.SetModulePath(System.String)">
            <summary>
            Sets the application-wide default module path of the native Scintilla library.
            </summary>
            <param name="modulePath">The native Scintilla module path.</param>
            <remarks>
            This method must be called prior to the first <see cref="T:ScintillaNET.Scintilla" /> control being created.
            The <paramref name="modulePath" /> can be relative or absolute.
            </remarks>
        </member>
        <member name="M:ScintillaNET.Scintilla.SetProperty(System.String,System.String)">
            <summary>
            Passes the specified property name-value pair to the current <see cref="P:ScintillaNET.Scintilla.Lexer" />.
            </summary>
            <param name="name">The property name to set.</param>
            <param name="value">
            The property value. Values can refer to other property names using the syntax $(name), where 'name' is another property
            name for the current <see cref="P:ScintillaNET.Scintilla.Lexer" />. When the property value is retrieved by a call to <see cref="M:ScintillaNET.Scintilla.GetPropertyExpanded(System.String)" />
            the embedded property name macro will be replaced (expanded) with that current property value.
            </param>
            <remarks>Property names are case-sensitive.</remarks>
        </member>
        <member name="M:ScintillaNET.Scintilla.SetSavePoint">
            <summary>
            Marks the document as unmodified.
            </summary>
            <seealso cref="P:ScintillaNET.Scintilla.Modified" />
        </member>
        <member name="M:ScintillaNET.Scintilla.SetSel(System.Int32,System.Int32)">
            <summary>
            Sets the anchor and current position.
            </summary>
            <param name="anchorPos">The zero-based document position to start the selection.</param>
            <param name="currentPos">The zero-based document position to end the selection.</param>
            <remarks>
            A negative value for <paramref name="currentPos" /> signifies the end of the document.
            A negative value for <paramref name="anchorPos" /> signifies no selection (i.e. sets the <paramref name="anchorPos" />
            to the same position as the <paramref name="currentPos" />).
            The current position is scrolled into view following this operation.
            </remarks>
        </member>
        <member name="M:ScintillaNET.Scintilla.SetSelection(System.Int32,System.Int32)">
            <summary>
            Sets a single selection from anchor to caret.
            </summary>
            <param name="caret">The zero-based document position to end the selection.</param>
            <param name="anchor">The zero-based document position to start the selection.</param>
        </member>
        <member name="M:ScintillaNET.Scintilla.SetSelectionBackColor(System.Boolean,System.Drawing.Color)">
            <summary>
            Sets a global override to the selection background color.
            </summary>
            <param name="use">true to override the selection background color; otherwise, false.</param>
            <param name="color">The global selection background color.</param>
            <seealso cref="M:ScintillaNET.Scintilla.SetSelectionForeColor(System.Boolean,System.Drawing.Color)" />
        </member>
        <member name="M:ScintillaNET.Scintilla.SetSelectionForeColor(System.Boolean,System.Drawing.Color)">
            <summary>
            Sets a global override to the selection foreground color.
            </summary>
            <param name="use">true to override the selection foreground color; otherwise, false.</param>
            <param name="color">The global selection foreground color.</param>
            <seealso cref="M:ScintillaNET.Scintilla.SetSelectionBackColor(System.Boolean,System.Drawing.Color)" />
        </member>
        <member name="M:ScintillaNET.Scintilla.SetStyling(System.Int32,System.Int32)">
            <summary>
            Styles the specified length of characters.
            </summary>
            <param name="length">The number of characters to style.</param>
            <param name="style">The <see cref="T:ScintillaNET.Style" /> definition index to assign each character.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="length" /> or <paramref name="style" /> is less than zero. -or-
            The sum of a preceeding call to <see cref="M:ScintillaNET.Scintilla.StartStyling(System.Int32)" /> or <see name="SetStyling" /> and <paramref name="length" /> is greater than the document length. -or-
            <paramref name="style" /> is greater than or equal to the number of style definitions.
            </exception>
            <remarks>
            The styling position is advanced by <paramref name="length" /> after each call allowing multiple
            calls to <see cref="M:ScintillaNET.Scintilla.SetStyling(System.Int32,System.Int32)" /> for a single call to <see cref="M:ScintillaNET.Scintilla.StartStyling(System.Int32)" />.
            </remarks>
            <seealso cref="M:ScintillaNET.Scintilla.StartStyling(System.Int32)" />
        </member>
        <member name="M:ScintillaNET.Scintilla.SetTargetRange(System.Int32,System.Int32)">
            <summary>
            Sets the <see cref="P:ScintillaNET.Scintilla.TargetStart" /> and <see cref="P:ScintillaNET.Scintilla.TargetEnd" /> properties in a single call.
            </summary>
            <param name="start">The zero-based character position within the document to start a search or replace operation.</param>
            <param name="end">The zero-based character position within the document to end a search or replace operation.</param>
            <seealso cref="P:ScintillaNET.Scintilla.TargetStart" />
            <seealso cref="P:ScintillaNET.Scintilla.TargetEnd" />
        </member>
        <member name="M:ScintillaNET.Scintilla.SetWhitespaceBackColor(System.Boolean,System.Drawing.Color)">
            <summary>
            Sets a global override to the whitespace background color.
            </summary>
            <param name="use">true to override the whitespace background color; otherwise, false.</param>
            <param name="color">The global whitespace background color.</param>
            <remarks>When not overridden globally, the whitespace background color is determined by the current lexer.</remarks>
            <seealso cref="P:ScintillaNET.Scintilla.ViewWhitespace" />
            <seealso cref="M:ScintillaNET.Scintilla.SetWhitespaceForeColor(System.Boolean,System.Drawing.Color)" />
        </member>
        <member name="M:ScintillaNET.Scintilla.SetWhitespaceForeColor(System.Boolean,System.Drawing.Color)">
            <summary>
            Sets a global override to the whitespace foreground color.
            </summary>
            <param name="use">true to override the whitespace foreground color; otherwise, false.</param>
            <param name="color">The global whitespace foreground color.</param>
            <remarks>When not overridden globally, the whitespace foreground color is determined by the current lexer.</remarks>
            <seealso cref="P:ScintillaNET.Scintilla.ViewWhitespace" />
            <seealso cref="M:ScintillaNET.Scintilla.SetWhitespaceBackColor(System.Boolean,System.Drawing.Color)" />
        </member>
        <member name="M:ScintillaNET.Scintilla.ShowLines(System.Int32,System.Int32)">
            <summary>
            Shows the range of lines specified.
            </summary>
            <param name="lineStart">The zero-based index of the line range to start showing.</param>
            <param name="lineEnd">The zero-based index of the line range to end showing.</param>
            <seealso cref="M:ScintillaNET.Scintilla.HideLines(System.Int32,System.Int32)" />
            <seealso cref="P:ScintillaNET.Line.Visible" />
        </member>
        <member name="M:ScintillaNET.Scintilla.StartStyling(System.Int32)">
            <summary>
            Prepares for styling by setting the styling <paramref name="position" /> to start at.
            </summary>
            <param name="position">The zero-based character position in the document to start styling.</param>
            <remarks>
            After preparing the document for styling, use successive calls to <see cref="M:ScintillaNET.Scintilla.SetStyling(System.Int32,System.Int32)" />
            to style the document.
            </remarks>
            <seealso cref="M:ScintillaNET.Scintilla.SetStyling(System.Int32,System.Int32)" />
        </member>
        <member name="M:ScintillaNET.Scintilla.StyleClearAll">
            <summary>
            Resets all style properties to those currently configured for the <see cref="F:ScintillaNET.Style.Default" /> style.
            </summary>
            <seealso cref="M:ScintillaNET.Scintilla.StyleResetDefault" />
        </member>
        <member name="M:ScintillaNET.Scintilla.StyleResetDefault">
            <summary>
            Resets the <see cref="F:ScintillaNET.Style.Default" /> style to its initial state.
            </summary>
            <seealso cref="M:ScintillaNET.Scintilla.StyleClearAll" />
        </member>
        <member name="M:ScintillaNET.Scintilla.SwapMainAnchorCaret">
            <summary>
            Moves the caret to the opposite end of the main selection.
            </summary>
        </member>
        <member name="M:ScintillaNET.Scintilla.TargetFromSelection">
            <summary>
            Sets the <see cref="P:ScintillaNET.Scintilla.TargetStart" /> and <see cref="P:ScintillaNET.Scintilla.TargetEnd" /> to the start and end positions of the selection.
            </summary>
            <seealso cref="M:ScintillaNET.Scintilla.TargetWholeDocument" />
        </member>
        <member name="M:ScintillaNET.Scintilla.TargetWholeDocument">
            <summary>
            Sets the <see cref="P:ScintillaNET.Scintilla.TargetStart" /> and <see cref="P:ScintillaNET.Scintilla.TargetEnd" /> to the start and end positions of the document.
            </summary>
            <seealso cref="M:ScintillaNET.Scintilla.TargetFromSelection" />
        </member>
        <member name="M:ScintillaNET.Scintilla.TextWidth(System.Int32,System.String)">
            <summary>
            Measures the width in pixels of the specified string when rendered in the specified style.
            </summary>
            <param name="style">The index of the <see cref="T:ScintillaNET.Style" /> to use when rendering the text to measure.</param>
            <param name="text">The text to measure.</param>
            <returns>The width in pixels.</returns>
        </member>
        <member name="M:ScintillaNET.Scintilla.Undo">
            <summary>
            Undoes the previous action.
            </summary>
        </member>
        <member name="M:ScintillaNET.Scintilla.UsePopup(System.Boolean)">
            <summary>
            Determines whether to show the right-click context menu.
            </summary>
            <param name="enablePopup">true to enable the popup window; otherwise, false.</param>
            <seealso cref="M:ScintillaNET.Scintilla.UsePopup(ScintillaNET.PopupMode)" />
        </member>
        <member name="M:ScintillaNET.Scintilla.UsePopup(ScintillaNET.PopupMode)">
            <summary>
            Determines the conditions for displaying the standard right-click context menu.
            </summary>
            <param name="popupMode">One of the <seealso cref="T:ScintillaNET.PopupMode" /> enumeration values.</param>
        </member>
        <member name="M:ScintillaNET.Scintilla.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Processes Windows messages.
            </summary>
            <param name="m">The Windows Message to process.</param>
        </member>
        <member name="M:ScintillaNET.Scintilla.WordEndPosition(System.Int32,System.Boolean)">
            <summary>
            Returns the position where a word ends, searching forward from the position specified.
            </summary>
            <param name="position">The zero-based document position to start searching from.</param>
            <param name="onlyWordCharacters">
            true to stop searching at the first non-word character regardless of whether the search started at a word or non-word character.
            false to use the first character in the search as a word or non-word indicator and then search for that word or non-word boundary.
            </param>
            <returns>The zero-based document postion of the word boundary.</returns>
            <seealso cref="M:ScintillaNET.Scintilla.WordStartPosition(System.Int32,System.Boolean)" />
        </member>
        <member name="M:ScintillaNET.Scintilla.WordStartPosition(System.Int32,System.Boolean)">
            <summary>
            Returns the position where a word starts, searching backward from the position specified.
            </summary>
            <param name="position">The zero-based document position to start searching from.</param>
            <param name="onlyWordCharacters">
            true to stop searching at the first non-word character regardless of whether the search started at a word or non-word character.
            false to use the first character in the search as a word or non-word indicator and then search for that word or non-word boundary.
            </param>
            <returns>The zero-based document postion of the word boundary.</returns>
            <seealso cref="M:ScintillaNET.Scintilla.WordEndPosition(System.Int32,System.Boolean)" />
        </member>
        <member name="M:ScintillaNET.Scintilla.ZoomIn">
            <summary>
            Increases the zoom factor by 1 until it reaches 20 points.
            </summary>
            <seealso cref="P:ScintillaNET.Scintilla.Zoom" />
        </member>
        <member name="M:ScintillaNET.Scintilla.ZoomOut">
            <summary>
            Decreases the zoom factor by 1 until it reaches -10 points.
            </summary>
            <seealso cref="P:ScintillaNET.Scintilla.Zoom" />
        </member>
        <member name="P:ScintillaNET.Scintilla.AdditionalCaretForeColor">
            <summary>
            Gets or sets the caret foreground color for additional selections.
            </summary>
            <returns>The caret foreground color in additional selections. The default is (127, 127, 127).</returns>
        </member>
        <member name="P:ScintillaNET.Scintilla.AdditionalCaretsBlink">
            <summary>
            Gets or sets whether the carets in additional selections will blink.
            </summary>
            <returns>true if additional selection carets should blink; otherwise, false. The default is true.</returns>
        </member>
        <member name="P:ScintillaNET.Scintilla.AdditionalCaretsVisible">
            <summary>
            Gets or sets whether the carets in additional selections are visible.
            </summary>
            <returns>true if additional selection carets are visible; otherwise, false. The default is true.</returns>
        </member>
        <member name="P:ScintillaNET.Scintilla.AdditionalSelAlpha">
            <summary>
            Gets or sets the alpha transparency of additional multiple selections.
            </summary>
            <returns>
            The alpha transparency ranging from 0 (completely transparent) to 255 (completely opaque).
            The value 256 will disable alpha transparency. The default is 256.
            </returns>
        </member>
        <member name="P:ScintillaNET.Scintilla.AdditionalSelectionTyping">
            <summary>
            Gets or sets whether additional typing affects multiple selections.
            </summary>
            <returns>true if typing will affect multiple selections instead of just the main selection; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:ScintillaNET.Scintilla.AnchorPosition">
            <summary>
            Gets or sets the current anchor position.
            </summary>
            <returns>The zero-based character position of the anchor.</returns>
            <remarks>
            Setting the current anchor position will create a selection between it and the <see cref="P:ScintillaNET.Scintilla.CurrentPosition" />.
            The caret is not scrolled into view.
            </remarks>
            <seealso cref="M:ScintillaNET.Scintilla.ScrollCaret" />
        </member>
        <member name="P:ScintillaNET.Scintilla.AnnotationVisible">
            <summary>
            Gets or sets the display of annotations.
            </summary>
            <returns>One of the <see cref="T:ScintillaNET.Annotation" /> enumeration values. The default is <see cref="F:ScintillaNET.Annotation.Hidden" />.</returns>
        </member>
        <member name="P:ScintillaNET.Scintilla.AutoCActive">
            <summary>
            Gets a value indicating whether there is an autocompletion list displayed.
            </summary>
            <returns>true if there is an active autocompletion list; otherwise, false.</returns>
        </member>
        <member name="P:ScintillaNET.Scintilla.AutoCAutoHide">
            <summary>
            Gets or sets whether to automatically cancel autocompletion when there are no viable matches.
            </summary>
            <returns>
            true to automatically cancel autocompletion when there is no possible match; otherwise, false.
            The default is true.
            </returns>
        </member>
        <member name="P:ScintillaNET.Scintilla.AutoCCancelAtStart">
            <summary>
            Gets or sets whether to cancel an autocompletion if the caret moves from its initial location,
            or is allowed to move to the word start.
            </summary>
            <returns>
            true to cancel autocompletion when the caret moves.
            false to allow the caret to move to the beginning of the word without cancelling autocompletion.
            </returns>
        </member>
        <member name="P:ScintillaNET.Scintilla.AutoCCurrent">
            <summary>
            Gets the index of the current autocompletion list selection.
            </summary>
            <returns>The zero-based index of the current autocompletion selection.</returns>
        </member>
        <member name="P:ScintillaNET.Scintilla.AutoCChooseSingle">
            <summary>
            Gets or sets whether to automatically select an item when it is the only one in an autocompletion list.
            </summary>
            <returns>
            true to automatically choose the only autocompletion item and not display the list; otherwise, false.
            The default is false.
            </returns>
        </member>
        <member name="P:ScintillaNET.Scintilla.AutoCDropRestOfWord">
            <summary>
            Gets or sets whether to delete any word characters following the caret after an autocompletion.
            </summary>
            <returns>
            true to delete any word characters following the caret after autocompletion; otherwise, false.
            The default is false.</returns>
        </member>
        <member name="P:ScintillaNET.Scintilla.AutoCIgnoreCase">
            <summary>
            Gets or sets whether matching characters to an autocompletion list is case-insensitive.
            </summary>
            <returns>true to use case-insensitive matching; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:ScintillaNET.Scintilla.AutoCMaxHeight">
            <summary>
            Gets or sets the maximum height of the autocompletion list measured in rows.
            </summary>
            <returns>The max number of rows to display in an autocompletion window. The default is 5.</returns>
            <remarks>If there are more items in the list than max rows, a vertical scrollbar is shown.</remarks>
        </member>
        <member name="P:ScintillaNET.Scintilla.AutoCMaxWidth">
            <summary>
            Gets or sets the width in characters of the autocompletion list.
            </summary>
            <returns>
            The width of the autocompletion list expressed in characters, or 0 to automatically set the width
            to the longest item. The default is 0.
            </returns>
            <remarks>Any items that cannot be fully displayed will be indicated with ellipsis.</remarks>
        </member>
        <member name="P:ScintillaNET.Scintilla.AutoCOrder">
            <summary>
            Gets or sets the autocompletion list sort order to expect when calling <see cref="M:ScintillaNET.Scintilla.AutoCShow(System.Int32,System.String)" />.
            </summary>
            <returns>One of the <see cref="T:ScintillaNET.Order" /> enumeration values. The default is <see cref="F:ScintillaNET.Order.Presorted" />.</returns>
        </member>
        <member name="P:ScintillaNET.Scintilla.AutoCPosStart">
            <summary>
            Gets the document position at the time <see cref="M:ScintillaNET.Scintilla.AutoCShow(System.Int32,System.String)" /> was called.
            </summary>
            <returns>The zero-based document position at the time <see cref="M:ScintillaNET.Scintilla.AutoCShow(System.Int32,System.String)" /> was called.</returns>
            <seealso cref="M:ScintillaNET.Scintilla.AutoCShow(System.Int32,System.String)" />
        </member>
        <member name="P:ScintillaNET.Scintilla.AutoCSeparator">
            <summary>
            Gets or sets the delimiter character used to separate words in an autocompletion list.
            </summary>
            <returns>The separator character used when calling <see cref="M:ScintillaNET.Scintilla.AutoCShow(System.Int32,System.String)" />. The default is the space character.</returns>
            <remarks>The <paramref name="value" /> specified should be limited to printable ASCII characters.</remarks>
        </member>
        <member name="P:ScintillaNET.Scintilla.AutoCTypeSeparator">
            <summary>
            Gets or sets the delimiter character used to separate words and image type identifiers in an autocompletion list.
            </summary>
            <returns>The separator character used to reference an image registered with <see cref="M:ScintillaNET.Scintilla.RegisterRgbaImage(System.Int32,System.Drawing.Bitmap)" />. The default is '?'.</returns>
            <remarks>The <paramref name="value" /> specified should be limited to printable ASCII characters.</remarks>
        </member>
        <member name="P:ScintillaNET.Scintilla.AutomaticFold">
            <summary>
            Gets or sets the automatic folding flags.
            </summary>
            <returns>
            A bitwise combination of the <see cref="T:ScintillaNET.AutomaticFold" /> enumeration.
            The default is <see cref="F:ScintillaNET.AutomaticFold.None" />.
            </returns>
        </member>
        <member name="P:ScintillaNET.Scintilla.BackColor">
            <summary>
            Not supported.
            </summary>
        </member>
        <member name="P:ScintillaNET.Scintilla.BackgroundImage">
            <summary>
            Not supported.
            </summary>
        </member>
        <member name="P:ScintillaNET.Scintilla.BackgroundImageLayout">
            <summary>
            Not supported.
            </summary>
        </member>
        <member name="P:ScintillaNET.Scintilla.BorderStyle">
            <summary>
            Gets or sets the border type of the <see cref="T:ScintillaNET.Scintilla" /> control.
            </summary>
            <returns>A BorderStyle enumeration value that represents the border type of the control. The default is Fixed3D.</returns>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">A value that is not within the range of valid values for the enumeration was assigned to the property.</exception>
        </member>
        <member name="P:ScintillaNET.Scintilla.BufferedDraw">
            <summary>
            Gets or sets whether drawing is double-buffered.
            </summary>
            <returns>
            true to draw each line into an offscreen bitmap first before copying it to the screen; otherwise, false.
            The default is true.
            </returns>
            <remarks>Disabling buffer can improve performance but will cause flickering.</remarks>
        </member>
        <member name="P:ScintillaNET.Scintilla.CallTipActive">
            <summary>
            Gets a value indicating whether there is a call tip window displayed.
            </summary>
            <returns>true if there is an active call tip window; otherwise, false.</returns>
        </member>
        <member name="P:ScintillaNET.Scintilla.CanPaste">
            <summary>
            Gets a value indicating whether there is text on the clipboard that can be pasted into the document.
            </summary>
            <returns>true when there is text on the clipboard to paste; otherwise, false.</returns>
            <remarks>The document cannot be <see cref="P:ScintillaNET.Scintilla.ReadOnly" />  and the selection cannot contain protected text.</remarks>
        </member>
        <member name="P:ScintillaNET.Scintilla.CanRedo">
            <summary>
            Gets a value indicating whether there is an undo action to redo.
            </summary>
            <returns>true when there is something to redo; otherwise, false.</returns>
        </member>
        <member name="P:ScintillaNET.Scintilla.CanUndo">
            <summary>
            Gets a value indicating whether there is an action to undo.
            </summary>
            <returns>true when there is something to undo; otherwise, false.</returns>
        </member>
        <member name="P:ScintillaNET.Scintilla.CaretForeColor">
            <summary>
            Gets or sets the caret foreground color.
            </summary>
            <returns>The caret foreground color. The default is black.</returns>
        </member>
        <member name="P:ScintillaNET.Scintilla.CaretLineBackColor">
            <summary>
            Gets or sets the caret line background color.
            </summary>
            <returns>The caret line background color. The default is yellow.</returns>
        </member>
        <member name="P:ScintillaNET.Scintilla.CaretLineBackColorAlpha">
            <summary>
            Gets or sets the alpha transparency of the <see cref="P:ScintillaNET.Scintilla.CaretLineBackColor" />.
            </summary>
            <returns>
            The alpha transparency ranging from 0 (completely transparent) to 255 (completely opaque).
            The value 256 will disable alpha transparency. The default is 256.
            </returns>
        </member>
        <member name="P:ScintillaNET.Scintilla.CaretLineVisible">
            <summary>
            Gets or sets whether the caret line is visible (highlighted).
            </summary>
            <returns>true if the caret line is visible; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:ScintillaNET.Scintilla.CaretPeriod">
            <summary>
            Gets or sets the caret blink rate in milliseconds.
            </summary>
            <returns>The caret blink rate measured in milliseconds. The default is 530.</returns>
            <remarks>A value of 0 will stop the caret blinking.</remarks>
        </member>
        <member name="P:ScintillaNET.Scintilla.CaretStyle">
            <summary>
            Gets or sets the caret display style.
            </summary>
            <returns>
            One of the <see cref="T:ScintillaNET.CaretStyle" /> enumeration values.
            The default is <see cref="F:ScintillaNET.CaretStyle.Line" />.
            </returns>
        </member>
        <member name="P:ScintillaNET.Scintilla.CaretWidth">
            <summary>
            Gets or sets the width in pixels of the caret.
            </summary>
            <returns>The width of the caret in pixels. The default is 1 pixel.</returns>
            <remarks>
            The caret width can only be set to a value of 0, 1, 2 or 3 pixels and is only effective
            when the <see cref="P:ScintillaNET.Scintilla.CaretStyle" /> property is set to <see cref="F:ScintillaNET.CaretStyle.Line" />.
            </remarks>
        </member>
        <member name="P:ScintillaNET.Scintilla.CreateParams">
            <summary>
            Gets the required creation parameters when the control handle is created.
            </summary>
            <returns>A CreateParams that contains the required creation parameters when the handle to the control is created.</returns>
        </member>
        <member name="P:ScintillaNET.Scintilla.CurrentLine">
            <summary>
            Gets the current line index.
            </summary>
            <returns>The zero-based line index containing the <see cref="P:ScintillaNET.Scintilla.CurrentPosition" />.</returns>
        </member>
        <member name="P:ScintillaNET.Scintilla.CurrentPosition">
            <summary>
            Gets or sets the current caret position.
            </summary>
            <returns>The zero-based character position of the caret.</returns>
            <remarks>
            Setting the current caret position will create a selection between it and the current <see cref="P:ScintillaNET.Scintilla.AnchorPosition" />.
            The caret is not scrolled into view.
            </remarks>
            <seealso cref="M:ScintillaNET.Scintilla.ScrollCaret" />
        </member>
        <member name="P:ScintillaNET.Scintilla.Cursor">
            <summary>
            Not supported.
            </summary>
        </member>
        <member name="P:ScintillaNET.Scintilla.DefaultCursor">
            <summary>
            Gets or sets the default cursor for the control.
            </summary>
            <returns>An object of type Cursor representing the current default cursor.</returns>
        </member>
        <member name="P:ScintillaNET.Scintilla.DefaultSize">
            <summary>
            Gets the default size of the control.
            </summary>
            <returns>The default Size of the control.</returns>
        </member>
        <member name="P:ScintillaNET.Scintilla.Document">
            <summary>
            Gets or sets the current document used by the control.
            </summary>
            <returns>The current <see cref="P:ScintillaNET.Scintilla.Document" />.</returns>
            <remarks>
            Setting this property is equivalent to calling <see cref="M:ScintillaNET.Scintilla.ReleaseDocument(ScintillaNET.Document)" /> on the current document, and
            calling <see cref="M:ScintillaNET.Scintilla.CreateDocument" /> if the new <paramref name="value" /> is <see cref="F:ScintillaNET.Document.Empty" /> or
            <see cref="M:ScintillaNET.Scintilla.AddRefDocument(ScintillaNET.Document)" /> if the new <paramref name="value" /> is not <see cref="F:ScintillaNET.Document.Empty" />.
            </remarks>
        </member>
        <member name="P:ScintillaNET.Scintilla.EdgeColor">
            <summary>
            Gets or sets the background color to use when indicating long lines with
            <see cref="F:ScintillaNET.EdgeMode.Background" />.
            </summary>
            <returns>The background Color. The default is Silver.</returns>
        </member>
        <member name="P:ScintillaNET.Scintilla.EdgeColumn">
            <summary>
            Gets or sets the column number at which to begin indicating long lines.
            </summary>
            <returns>The number of columns in a long line. The default is 0.</returns>
            <remarks>
            When using <see cref="F:ScintillaNET.EdgeMode.Line"/>, a column is defined as the width of a space character in the <see cref="F:ScintillaNET.Style.Default" /> style.
            When using <see cref="F:ScintillaNET.EdgeMode.Background" /> a column is equal to a character (including tabs).
            </remarks>
        </member>
        <member name="P:ScintillaNET.Scintilla.EdgeMode">
            <summary>
            Gets or sets the mode for indicating long lines.
            </summary>
            <returns>
            One of the <see cref="T:ScintillaNET.EdgeMode" /> enumeration values.
            The default is <see cref="F:ScintillaNET.EdgeMode.None" />.
            </returns>
        </member>
        <member name="P:ScintillaNET.Scintilla.EndAtLastLine">
            <summary>
            Gets or sets whether vertical scrolling ends at the last line or can scroll past.
            </summary>
            <returns>true if the maximum vertical scroll position ends at the last line; otherwise, false. The default is true.</returns>
        </member>
        <member name="P:ScintillaNET.Scintilla.EolMode">
            <summary>
            Gets or sets the end-of-line mode, or rather, the characters added into
            the document when the user presses the Enter key.
            </summary>
            <returns>One of the <see cref="T:ScintillaNET.Eol" /> enumeration values. The default is <see cref="F:ScintillaNET.Eol.CrLf" />.</returns>
        </member>
        <member name="P:ScintillaNET.Scintilla.ExtraAscent">
            <summary>
            Gets or sets the amount of whitespace added to the ascent (top) of each line.
            </summary>
            <returns>The extra line ascent. The default is zero.</returns>
        </member>
        <member name="P:ScintillaNET.Scintilla.ExtraDescent">
            <summary>
            Gets or sets the amount of whitespace added to the descent (bottom) of each line.
            </summary>
            <returns>The extra line descent. The default is zero.</returns>
        </member>
        <member name="P:ScintillaNET.Scintilla.FirstVisibleLine">
            <summary>
            Gets or sets the first visible line on screen.
            </summary>
            <returns>The zero-based index of the first visible screen line.</returns>
            <remarks>The value is a visible line, not a document line.</remarks>
        </member>
        <member name="P:ScintillaNET.Scintilla.Font">
            <summary>
            Not supported.
            </summary>
        </member>
        <member name="P:ScintillaNET.Scintilla.FontQuality">
            <summary>
            Gets or sets font quality (anti-aliasing method) used to render fonts.
            </summary>
            <returns>
            One of the <see cref="T:ScintillaNET.FontQuality" /> enumeration values.
            The default is <see cref="F:ScintillaNET.FontQuality.Default" />.
            </returns>
        </member>
        <member name="P:ScintillaNET.Scintilla.ForeColor">
            <summary>
            Not supported.
            </summary>
        </member>
        <member name="P:ScintillaNET.Scintilla.HighlightGuide">
            <summary>
            Gets or sets the column number of the indentation guide to highlight.
            </summary>
            <returns>The column number of the indentation guide to highlight or 0 if disabled.</returns>
            <remarks>Guides are highlighted in the <see cref="F:ScintillaNET.Style.BraceLight" /> style. Column numbers can be determined by calling <see cref="M:ScintillaNET.Scintilla.GetColumn(System.Int32)" />.</remarks>
        </member>
        <member name="P:ScintillaNET.Scintilla.HScrollBar">
            <summary>
            Gets or sets whether to display the horizontal scroll bar.
            </summary>
            <returns>true to display the horizontal scroll bar when needed; otherwise, false. The default is true.</returns>
        </member>
        <member name="P:ScintillaNET.Scintilla.IdleStyling">
            <summary>
            Gets or sets the strategy used to perform styling using application idle time.
            </summary>
            <returns>
            One of the <see cref="T:ScintillaNET.IdleStyling" /> enumeration values.
            The default is <see cref="F:ScintillaNET.IdleStyling.None" />.
            </returns>
        </member>
        <member name="P:ScintillaNET.Scintilla.IndentWidth">
            <summary>
            Gets or sets the size of indentation in terms of space characters.
            </summary>
            <returns>The indentation size measured in characters. The default is 0.</returns>
            <remarks> A value of 0 will make the indent width the same as the tab width.</remarks>
        </member>
        <member name="P:ScintillaNET.Scintilla.IndentationGuides">
            <summary>
            Gets or sets whether to display indentation guides.
            </summary>
            <returns>One of the <see cref="T:ScintillaNET.IndentView" /> enumeration values. The default is <see cref="F:ScintillaNET.IndentView.None" />.</returns>
            <remarks>The <see cref="F:ScintillaNET.Style.IndentGuide" /> style can be used to specify the foreground and background color of indentation guides.</remarks>
        </member>
        <member name="P:ScintillaNET.Scintilla.IndicatorCurrent">
            <summary>
            Gets or sets the indicator used in a subsequent call to <see cref="M:ScintillaNET.Scintilla.IndicatorFillRange(System.Int32,System.Int32)" /> or <see cref="M:ScintillaNET.Scintilla.IndicatorClearRange(System.Int32,System.Int32)" />.
            </summary>
            <returns>The zero-based indicator index to apply when calling <see cref="M:ScintillaNET.Scintilla.IndicatorFillRange(System.Int32,System.Int32)" /> or remove when calling <see cref="M:ScintillaNET.Scintilla.IndicatorClearRange(System.Int32,System.Int32)" />.</returns>
        </member>
        <member name="P:ScintillaNET.Scintilla.Indicators">
            <summary>
            Gets a collection of objects for working with indicators.
            </summary>
            <returns>A collection of <see cref="T:ScintillaNET.Indicator" /> objects.</returns>
        </member>
        <member name="P:ScintillaNET.Scintilla.IndicatorValue">
            <summary>
            Gets or sets the user-defined value used in a subsequent call to <see cref="M:ScintillaNET.Scintilla.IndicatorFillRange(System.Int32,System.Int32)" />.
            </summary>
            <returns>The indicator value to apply when calling <see cref="M:ScintillaNET.Scintilla.IndicatorFillRange(System.Int32,System.Int32)" />.</returns>
        </member>
        <member name="P:ScintillaNET.Scintilla.Lexer">
            <summary>
            Gets or sets the current lexer.
            </summary>
            <returns>One of the <see cref="P:ScintillaNET.Scintilla.Lexer" /> enumeration values. The default is <see cref="F:ScintillaNET.Lexer.Container" />.</returns>
        </member>
        <member name="P:ScintillaNET.Scintilla.LexerLanguage">
            <summary>
            Gets or sets the current lexer by name.
            </summary>
            <returns>A String representing the current lexer.</returns>
            <remarks>Lexer names are case-sensitive.</remarks>
        </member>
        <member name="P:ScintillaNET.Scintilla.LineEndTypesActive">
            <summary>
            Gets the combined result of the <see cref="P:ScintillaNET.Scintilla.LineEndTypesSupported" /> and <see cref="P:ScintillaNET.Scintilla.LineEndTypesAllowed" />
            properties to report the line end types actively being interpreted.
            </summary>
            <returns>A bitwise combination of the <see cref="T:ScintillaNET.LineEndType" /> enumeration.</returns>
        </member>
        <member name="P:ScintillaNET.Scintilla.LineEndTypesAllowed">
            <summary>
            Gets or sets the line ending types interpreted by the <see cref="T:ScintillaNET.Scintilla" /> control.
            </summary>
            <returns>
            A bitwise combination of the <see cref="T:ScintillaNET.LineEndType" /> enumeration.
            The default is <see cref="F:ScintillaNET.LineEndType.Default" />.
            </returns>
            <remarks>The line ending types allowed must also be supported by the current lexer to be effective.</remarks>
        </member>
        <member name="P:ScintillaNET.Scintilla.LineEndTypesSupported">
            <summary>
            Gets the different types of line ends supported by the current lexer.
            </summary>
            <returns>A bitwise combination of the <see cref="T:ScintillaNET.LineEndType" /> enumeration.</returns>
        </member>
        <member name="P:ScintillaNET.Scintilla.Lines">
            <summary>
            Gets a collection representing lines of text in the <see cref="T:ScintillaNET.Scintilla" /> control.
            </summary>
            <returns>A collection of text lines.</returns>
        </member>
        <member name="P:ScintillaNET.Scintilla.LinesOnScreen">
            <summary>
            Gets the number of lines that can be shown on screen given a constant
            line height and the space available.
            </summary>
            <returns>
            The number of screen lines which could be displayed (including any partial lines).
            </returns>
        </member>
        <member name="P:ScintillaNET.Scintilla.MainSelection">
            <summary>
            Gets or sets the main selection when their are multiple selections.
            </summary>
            <returns>The zero-based main selection index.</returns>
        </member>
        <member name="P:ScintillaNET.Scintilla.Margins">
            <summary>
            Gets a collection representing margins in a <see cref="T:ScintillaNET.Scintilla" /> control.
            </summary>
            <returns>A collection of margins.</returns>
        </member>
        <member name="P:ScintillaNET.Scintilla.Markers">
            <summary>
            Gets a collection representing markers in a <see cref="T:ScintillaNET.Scintilla" /> control.
            </summary>
            <returns>A collection of markers.</returns>
        </member>
        <member name="P:ScintillaNET.Scintilla.Modified">
            <summary>
            Gets a value indicating whether the document has been modified (is dirty)
            since the last call to <see cref="M:ScintillaNET.Scintilla.SetSavePoint" />.
            </summary>
            <returns>true if the document has been modified; otherwise, false.</returns>
        </member>
        <member name="P:ScintillaNET.Scintilla.MouseDwellTime">
            <summary>
            Gets or sets the time in milliseconds the mouse must linger to generate a <see cref="E:ScintillaNET.Scintilla.DwellStart" /> event.
            </summary>
            <returns>
            The time in milliseconds the mouse must linger to generate a <see cref="E:ScintillaNET.Scintilla.DwellStart" /> event
            or <see cref="F:ScintillaNET.Scintilla.TimeForever" /> if dwell events are disabled.
            </returns>
        </member>
        <member name="P:ScintillaNET.Scintilla.MouseSelectionRectangularSwitch">
            <summary>
            Gets or sets the ability to switch to rectangular selection mode while making a selection with the mouse.
            </summary>
            <returns>
            true if the current mouse selection can be switched to a rectangular selection by pressing the ALT key; otherwise, false.
            The default is false.
            </returns>
        </member>
        <member name="P:ScintillaNET.Scintilla.MultipleSelection">
            <summary>
            Gets or sets whether multiple selection is enabled.
            </summary>
            <returns>
            true if multiple selections can be made by holding the CTRL key and dragging the mouse; otherwise, false.
            The default is false.
            </returns>
        </member>
        <member name="P:ScintillaNET.Scintilla.MultiPaste">
            <summary>
            Gets or sets the behavior when pasting text into multiple selections.
            </summary>
            <returns>One of the <see cref="T:ScintillaNET.MultiPaste" /> enumeration values. The default is <see cref="F:ScintillaNET.MultiPaste.Once" />.</returns>
        </member>
        <member name="P:ScintillaNET.Scintilla.Overtype">
            <summary>
            Gets or sets whether to write over text rather than insert it.
            </summary>
            <return>true to write over text; otherwise, false. The default is false.</return>
        </member>
        <member name="P:ScintillaNET.Scintilla.Padding">
            <summary>
            Not supported.
            </summary>
        </member>
        <member name="P:ScintillaNET.Scintilla.PasteConvertEndings">
            <summary>
            Gets or sets whether line endings in pasted text are convereted to the document <see cref="P:ScintillaNET.Scintilla.EolMode" />.
            </summary>
            <returns>true to convert line endings in pasted text; otherwise, false. The default is true.</returns>
        </member>
        <member name="P:ScintillaNET.Scintilla.PhasesDraw">
            <summary>
            Gets or sets the number of phases used when drawing.
            </summary>
            <returns>One of the <see cref="T:ScintillaNET.Phases" /> enumeration values. The default is <see cref="F:ScintillaNET.Phases.Two" />.</returns>
        </member>
        <member name="P:ScintillaNET.Scintilla.ReadOnly">
            <summary>
            Gets or sets whether the document is read-only.
            </summary>
            <returns>true if the document is read-only; otherwise, false. The default is false.</returns>
            <seealso cref="E:ScintillaNET.Scintilla.ModifyAttempt" />
        </member>
        <member name="P:ScintillaNET.Scintilla.RectangularSelectionAnchor">
            <summary>
            Gets or sets the anchor position of the rectangular selection.
            </summary>
            <returns>The zero-based document position of the rectangular selection anchor.</returns>
        </member>
        <member name="P:ScintillaNET.Scintilla.RectangularSelectionAnchorVirtualSpace">
            <summary>
            Gets or sets the amount of anchor virtual space in a rectangular selection.
            </summary>
            <returns>The amount of virtual space past the end of the line offsetting the rectangular selection anchor.</returns>
        </member>
        <member name="P:ScintillaNET.Scintilla.RectangularSelectionCaret">
            <summary>
            Gets or sets the caret position of the rectangular selection.
            </summary>
            <returns>The zero-based document position of the rectangular selection caret.</returns>
        </member>
        <member name="P:ScintillaNET.Scintilla.RectangularSelectionCaretVirtualSpace">
            <summary>
            Gets or sets the amount of caret virtual space in a rectangular selection.
            </summary>
            <returns>The amount of virtual space past the end of the line offsetting the rectangular selection caret.</returns>
        </member>
        <member name="P:ScintillaNET.Scintilla.ScrollWidth">
            <summary>
            Gets or sets the range of the horizontal scroll bar.
            </summary>
            <returns>The range in pixels of the horizontal scroll bar. The default is 2000.</returns>
            <remarks>The width will automatically increase as needed when <see cref="P:ScintillaNET.Scintilla.ScrollWidthTracking" /> is enabled.</remarks>
        </member>
        <member name="P:ScintillaNET.Scintilla.ScrollWidthTracking">
            <summary>
            Gets or sets whether the <see cref="P:ScintillaNET.Scintilla.ScrollWidth" /> is automatically increased as needed.
            </summary>
            <returns>
            true to automatically increase the horizontal scroll width as needed; otherwise, false.
            The default is true.
            </returns>
        </member>
        <member name="P:ScintillaNET.Scintilla.SearchFlags">
            <summary>
            Gets or sets the search flags used when searching text.
            </summary>
            <returns>A bitwise combination of <see cref="T:ScintillaNET.SearchFlags" /> values. The default is <see cref="F:ScintillaNET.SearchFlags.None" />.</returns>
            <seealso cref="M:ScintillaNET.Scintilla.SearchInTarget(System.String)" />
        </member>
        <member name="P:ScintillaNET.Scintilla.SelectedText">
            <summary>
            Gets the selected text.
            </summary>
            <returns>The selected text if there is any; otherwise, an empty string.</returns>
        </member>
        <member name="P:ScintillaNET.Scintilla.SelectionEnd">
            <summary>
            Gets or sets the end position of the selection.
            </summary>
            <returns>The zero-based document position where the selection ends.</returns>
            <remarks>
            When getting this property, the return value is <code>Math.Max(<see cref="P:ScintillaNET.Scintilla.AnchorPosition" />, <see cref="P:ScintillaNET.Scintilla.CurrentPosition" />)</code>.
            When setting this property, <see cref="P:ScintillaNET.Scintilla.CurrentPosition" /> is set to the value specified and <see cref="P:ScintillaNET.Scintilla.AnchorPosition" /> set to <code>Math.Min(<see cref="P:ScintillaNET.Scintilla.AnchorPosition" />, <paramref name="value" />)</code>.
            The caret is not scrolled into view.
            </remarks>
            <seealso cref="P:ScintillaNET.Scintilla.SelectionStart" />
        </member>
        <member name="P:ScintillaNET.Scintilla.SelectionEolFilled">
            <summary>
            Gets or sets whether to fill past the end of a line with the selection background color.
            </summary>
            <returns>true to fill past the end of the line; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:ScintillaNET.Scintilla.Selections">
            <summary>
            Gets a collection representing multiple selections in a <see cref="T:ScintillaNET.Scintilla" /> control.
            </summary>
            <returns>A collection of selections.</returns>
        </member>
        <member name="P:ScintillaNET.Scintilla.SelectionStart">
            <summary>
            Gets or sets the start position of the selection.
            </summary>
            <returns>The zero-based document position where the selection starts.</returns>
            <remarks>
            When getting this property, the return value is <code>Math.Min(<see cref="P:ScintillaNET.Scintilla.AnchorPosition" />, <see cref="P:ScintillaNET.Scintilla.CurrentPosition" />)</code>.
            When setting this property, <see cref="P:ScintillaNET.Scintilla.AnchorPosition" /> is set to the value specified and <see cref="P:ScintillaNET.Scintilla.CurrentPosition" /> set to <code>Math.Max(<see cref="P:ScintillaNET.Scintilla.CurrentPosition" />, <paramref name="value" />)</code>.
            The caret is not scrolled into view.
            </remarks>
            <seealso cref="P:ScintillaNET.Scintilla.SelectionEnd" />
        </member>
        <member name="P:ScintillaNET.Scintilla.Status">
            <summary>
            Gets or sets the last internal error code used by Scintilla.
            </summary>
            <returns>
            One of the <see cref="P:ScintillaNET.Scintilla.Status" /> enumeration values.
            The default is <see cref="F:ScintillaNET.Status.Ok" />.
            </returns>
            <remarks>The status can be reset by setting the property to <see cref="F:ScintillaNET.Status.Ok" />.</remarks>
        </member>
        <member name="P:ScintillaNET.Scintilla.Styles">
            <summary>
            Gets a collection representing style definitions in a <see cref="T:ScintillaNET.Scintilla" /> control.
            </summary>
            <returns>A collection of style definitions.</returns>
        </member>
        <member name="P:ScintillaNET.Scintilla.TabDrawMode">
            <summary>
            Gets or sets how tab characters are represented when whitespace is visible.
            </summary>
            <returns>
            One of the <see cref="T:ScintillaNET.TabDrawMode" /> enumeration values.
            The default is <see cref="F:ScintillaNET.TabDrawMode.LongArrow" />.
            </returns>
            <seealso cref="P:ScintillaNET.Scintilla.ViewWhitespace" />
        </member>
        <member name="P:ScintillaNET.Scintilla.TabWidth">
            <summary>
            Gets or sets the width of a tab as a multiple of a space character.
            </summary>
            <returns>The width of a tab measured in characters. The default is 4.</returns>
        </member>
        <member name="P:ScintillaNET.Scintilla.TargetEnd">
            <summary>
            Gets or sets the end position used when performing a search or replace.
            </summary>
            <returns>The zero-based character position within the document to end a search or replace operation.</returns>
            <seealso cref="P:ScintillaNET.Scintilla.TargetStart"/>
            <seealso cref="M:ScintillaNET.Scintilla.SearchInTarget(System.String)" />
            <seealso cref="M:ScintillaNET.Scintilla.ReplaceTarget(System.String)" />
        </member>
        <member name="P:ScintillaNET.Scintilla.TargetStart">
            <summary>
            Gets or sets the start position used when performing a search or replace.
            </summary>
            <returns>The zero-based character position within the document to start a search or replace operation.</returns>
            <seealso cref="P:ScintillaNET.Scintilla.TargetEnd"/>
            <seealso cref="M:ScintillaNET.Scintilla.SearchInTarget(System.String)" />
            <seealso cref="M:ScintillaNET.Scintilla.ReplaceTarget(System.String)" />
        </member>
        <member name="P:ScintillaNET.Scintilla.TargetText">
            <summary>
            Gets the current target text.
            </summary>
            <returns>A String representing the text between <see cref="P:ScintillaNET.Scintilla.TargetStart" /> and <see cref="P:ScintillaNET.Scintilla.TargetEnd" />.</returns>
            <remarks>Targets which have a start position equal or greater to the end position will return an empty String.</remarks>
            <seealso cref="P:ScintillaNET.Scintilla.TargetStart" />
            <seealso cref="P:ScintillaNET.Scintilla.TargetEnd" />
        </member>
        <member name="P:ScintillaNET.Scintilla.Technology">
            <summary>
            Gets or sets the rendering technology used.
            </summary>
            <returns>
            One of the <see cref="P:ScintillaNET.Scintilla.Technology" /> enumeration values.
            The default is <see cref="F:ScintillaNET.Technology.Default" />.
            </returns>
        </member>
        <member name="P:ScintillaNET.Scintilla.Text">
            <summary>
            Gets or sets the current document text in the <see cref="T:ScintillaNET.Scintilla" /> control.
            </summary>
            <returns>The text displayed in the control.</returns>
            <remarks>Depending on the length of text get or set, this operation can be expensive.</remarks>
        </member>
        <member name="P:ScintillaNET.Scintilla.TextLength">
            <summary>
            Gets the length of the text in the control.
            </summary>
            <returns>The number of characters in the document.</returns>
        </member>
        <member name="P:ScintillaNET.Scintilla.UseTabs">
            <summary>
            Gets or sets whether to use a mixture of tabs and spaces for indentation or purely spaces.
            </summary>
            <returns>true to use tab characters; otherwise, false. The default is true.</returns>
        </member>
        <member name="P:ScintillaNET.Scintilla.UseWaitCursor">
            <summary>
            Gets or sets a value indicating whether to use the wait cursor for the current control.
            </summary>
            <returns>true to use the wait cursor for the current control; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:ScintillaNET.Scintilla.ViewEol">
            <summary>
            Gets or sets the visibility of end-of-line characters.
            </summary>
            <returns>true to display end-of-line characters; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:ScintillaNET.Scintilla.ViewWhitespace">
            <summary>
            Gets or sets how to display whitespace characters.
            </summary>
            <returns>One of the <see cref="T:ScintillaNET.WhitespaceMode" /> enumeration values. The default is <see cref="F:ScintillaNET.WhitespaceMode.Invisible" />.</returns>
            <seealso cref="M:ScintillaNET.Scintilla.SetWhitespaceForeColor(System.Boolean,System.Drawing.Color)" />
            <seealso cref="M:ScintillaNET.Scintilla.SetWhitespaceBackColor(System.Boolean,System.Drawing.Color)" />
        </member>
        <member name="P:ScintillaNET.Scintilla.VirtualSpaceOptions">
            <summary>
            Gets or sets the ability for the caret to move into an area beyond the end of each line, otherwise known as virtual space.
            </summary>
            <returns>
            A bitwise combination of the <see cref="T:ScintillaNET.VirtualSpace" /> enumeration.
            The default is <see cref="F:ScintillaNET.VirtualSpace.None" />.
            </returns>
        </member>
        <member name="P:ScintillaNET.Scintilla.VScrollBar">
            <summary>
            Gets or sets whether to display the vertical scroll bar.
            </summary>
            <returns>true to display the vertical scroll bar when needed; otherwise, false. The default is true.</returns>
        </member>
        <member name="P:ScintillaNET.Scintilla.WhitespaceSize">
            <summary>
            Gets or sets the size of the dots used to mark whitespace.
            </summary>
            <returns>The size of the dots used to mark whitespace. The default is 1.</returns>
            <seealso cref="P:ScintillaNET.Scintilla.ViewWhitespace" />
        </member>
        <member name="P:ScintillaNET.Scintilla.WordChars">
            <summary>
            Gets or sets the characters considered 'word' characters when using any word-based logic.
            </summary>
            <returns>A string of word characters.</returns>
        </member>
        <member name="P:ScintillaNET.Scintilla.WrapIndentMode">
            <summary>
            Gets or sets the line wrapping indent mode.
            </summary>
            <returns>
            One of the <see cref="T:ScintillaNET.WrapIndentMode" /> enumeration values. 
            The default is <see cref="F:ScintillaNET.WrapIndentMode.Fixed" />.
            </returns>
        </member>
        <member name="P:ScintillaNET.Scintilla.WrapMode">
            <summary>
            Gets or sets the line wrapping mode.
            </summary>
            <returns>
            One of the <see cref="T:ScintillaNET.WrapMode" /> enumeration values. 
            The default is <see cref="F:ScintillaNET.WrapMode.None" />.
            </returns>
        </member>
        <member name="P:ScintillaNET.Scintilla.WrapStartIndent">
            <summary>
            Gets or sets the indented size in pixels of wrapped sublines.
            </summary>
            <returns>The indented size of wrapped sublines measured in pixels. The default is 0.</returns>
            <remarks>
            Setting <see cref="P:ScintillaNET.Scintilla.WrapVisualFlags" /> to <see cref="F:ScintillaNET.WrapVisualFlags.Start" /> will add an
            additional 1 pixel to the value specified.
            </remarks>
        </member>
        <member name="P:ScintillaNET.Scintilla.WrapVisualFlags">
            <summary>
            Gets or sets the wrap visual flags.
            </summary>
            <returns>
            A bitwise combination of the <see cref="T:ScintillaNET.WrapVisualFlags" /> enumeration.
            The default is <see cref="F:ScintillaNET.WrapVisualFlags.None" />.
            </returns>
        </member>
        <member name="P:ScintillaNET.Scintilla.WrapVisualFlagLocation">
            <summary>
            Gets or sets additional location options when displaying wrap visual flags.
            </summary>
            <returns>
            One of the <see cref="T:ScintillaNET.WrapVisualFlagLocation" /> enumeration values.
            The default is <see cref="F:ScintillaNET.WrapVisualFlagLocation.Default" />.
            </returns>
        </member>
        <member name="P:ScintillaNET.Scintilla.XOffset">
            <summary>
            Gets or sets the horizontal scroll offset.
            </summary>
            <returns>The horizontal scroll offset in pixels.</returns>
        </member>
        <member name="P:ScintillaNET.Scintilla.Zoom">
            <summary>
            Gets or sets the zoom factor.
            </summary>
            <returns>The zoom factor measured in points.</returns>
            <remarks>For best results, values should range from -10 to 20 points.</remarks>
            <seealso cref="M:ScintillaNET.Scintilla.ZoomIn" />
            <seealso cref="M:ScintillaNET.Scintilla.ZoomOut" />
        </member>
        <member name="E:ScintillaNET.Scintilla.AutoCCancelled">
            <summary>
            Occurs when an autocompletion list is cancelled.
            </summary>
        </member>
        <member name="E:ScintillaNET.Scintilla.AutoCCharDeleted">
            <summary>
            Occurs when the user deletes a character while an autocompletion list is active.
            </summary>
        </member>
        <member name="E:ScintillaNET.Scintilla.AutoCCompleted">
            <summary>
            Occurs after autocompleted text is inserted.
            </summary>
        </member>
        <member name="E:ScintillaNET.Scintilla.AutoCSelection">
            <summary>
            Occurs when a user has selected an item in an autocompletion list.
            </summary>
            <remarks>Automatic insertion can be cancelled by calling <see cref="M:ScintillaNET.Scintilla.AutoCCancel" /> from the event handler.</remarks>
        </member>
        <member name="E:ScintillaNET.Scintilla.BackColorChanged">
            <summary>
            Not supported.
            </summary>
        </member>
        <member name="E:ScintillaNET.Scintilla.BackgroundImageChanged">
            <summary>
            Not supported.
            </summary>
        </member>
        <member name="E:ScintillaNET.Scintilla.BackgroundImageLayoutChanged">
            <summary>
            Not supported.
            </summary>
        </member>
        <member name="E:ScintillaNET.Scintilla.BeforeDelete">
            <summary>
            Occurs when text is about to be deleted.
            </summary>
        </member>
        <member name="E:ScintillaNET.Scintilla.BeforeInsert">
            <summary>
            Occurs when text is about to be inserted.
            </summary>
        </member>
        <member name="E:ScintillaNET.Scintilla.BorderStyleChanged">
            <summary>
            Occurs when the value of the <see cref="P:ScintillaNET.Scintilla.BorderStyle" /> property has changed.
            </summary>
        </member>
        <member name="E:ScintillaNET.Scintilla.ChangeAnnotation">
            <summary>
            Occurs when an annotation has changed.
            </summary>
        </member>
        <member name="E:ScintillaNET.Scintilla.CharAdded">
            <summary>
            Occurs when the user enters a text character.
            </summary>
        </member>
        <member name="E:ScintillaNET.Scintilla.CursorChanged">
            <summary>
            Not supported.
            </summary>
        </member>
        <member name="E:ScintillaNET.Scintilla.Delete">
            <summary>
            Occurs when text has been deleted from the document.
            </summary>
        </member>
        <member name="E:ScintillaNET.Scintilla.DoubleClick">
            <summary>
            Occurs when the <see cref="T:ScintillaNET.Scintilla" /> control is double-clicked.
            </summary>
        </member>
        <member name="E:ScintillaNET.Scintilla.DwellEnd">
            <summary>
            Occurs when the mouse moves or another activity such as a key press ends a <see cref="E:ScintillaNET.Scintilla.DwellStart" /> event.
            </summary>
        </member>
        <member name="E:ScintillaNET.Scintilla.DwellStart">
            <summary>
            Occurs when the mouse is kept in one position (hovers) for the <see cref="P:ScintillaNET.Scintilla.MouseDwellTime" />.
            </summary>
        </member>
        <member name="E:ScintillaNET.Scintilla.FontChanged">
            <summary>
            Not supported.
            </summary>
        </member>
        <member name="E:ScintillaNET.Scintilla.ForeColorChanged">
            <summary>
            Not supported.
            </summary>
        </member>
        <member name="E:ScintillaNET.Scintilla.HotspotClick">
            <summary>
            Occurs when the user clicks on text that is in a style with the <see cref="P:ScintillaNET.Style.Hotspot" /> property set.
            </summary>
        </member>
        <member name="E:ScintillaNET.Scintilla.HotspotDoubleClick">
            <summary>
            Occurs when the user double clicks on text that is in a style with the <see cref="P:ScintillaNET.Style.Hotspot" /> property set.
            </summary>
        </member>
        <member name="E:ScintillaNET.Scintilla.HotspotReleaseClick">
            <summary>
            Occurs when the user releases a click on text that is in a style with the <see cref="P:ScintillaNET.Style.Hotspot" /> property set.
            </summary>
        </member>
        <member name="E:ScintillaNET.Scintilla.IndicatorClick">
            <summary>
            Occurs when the user clicks on text that has an indicator.
            </summary>
        </member>
        <member name="E:ScintillaNET.Scintilla.IndicatorRelease">
            <summary>
            Occurs when the user releases a click on text that has an indicator.
            </summary>
        </member>
        <member name="E:ScintillaNET.Scintilla.Insert">
            <summary>
            Occurs when text has been inserted into the document.
            </summary>
        </member>
        <member name="E:ScintillaNET.Scintilla.InsertCheck">
            <summary>
            Occurs when text is about to be inserted. The inserted text can be changed.
            </summary>
        </member>
        <member name="E:ScintillaNET.Scintilla.MarginClick">
            <summary>
            Occurs when the mouse was clicked inside a margin that was marked as sensitive.
            </summary>
            <remarks>The <see cref="P:ScintillaNET.Margin.Sensitive" /> property must be set for a margin to raise this event.</remarks>
        </member>
        <member name="E:ScintillaNET.Scintilla.MarginRightClick">
            <summary>
            Occurs when the mouse was right-clicked inside a margin that was marked as sensitive.
            </summary>
            <remarks>The <see cref="P:ScintillaNET.Margin.Sensitive" /> property and <see cref="F:ScintillaNET.PopupMode.Text" /> must be set for a margin to raise this event.</remarks>
            <seealso cref="M:ScintillaNET.Scintilla.UsePopup(ScintillaNET.PopupMode)" />
        </member>
        <member name="E:ScintillaNET.Scintilla.ModifyAttempt">
            <summary>
            Occurs when a user attempts to change text while the document is in read-only mode.
            </summary>
            <seealso cref="P:ScintillaNET.Scintilla.ReadOnly" />
        </member>
        <member name="E:ScintillaNET.Scintilla.NeedShown">
            <summary>
            Occurs when the control determines hidden text needs to be shown.
            </summary>
            <remarks>An example of when this event might be raised is if the end of line of a contracted fold point is deleted.</remarks>
        </member>
        <member name="E:ScintillaNET.Scintilla.Paint">
            <summary>
            Not supported.
            </summary>
        </member>
        <member name="E:ScintillaNET.Scintilla.Painted">
            <summary>
            Occurs when painting has just been done.
            </summary>
        </member>
        <member name="E:ScintillaNET.Scintilla.SavePointLeft">
            <summary>
            Occurs when the document becomes 'dirty'.
            </summary>
            <remarks>The document 'dirty' state can be checked with the <see cref="P:ScintillaNET.Scintilla.Modified" /> property and reset by calling <see cref="M:ScintillaNET.Scintilla.SetSavePoint" />.</remarks>
            <seealso cref="M:ScintillaNET.Scintilla.SetSavePoint" />
            <seealso cref="E:ScintillaNET.Scintilla.SavePointReached" />
        </member>
        <member name="E:ScintillaNET.Scintilla.SavePointReached">
            <summary>
            Occurs when the document 'dirty' flag is reset.
            </summary>
            <remarks>The document 'dirty' state can be reset by calling <see cref="M:ScintillaNET.Scintilla.SetSavePoint" /> or undoing an action that modified the document.</remarks>
            <seealso cref="M:ScintillaNET.Scintilla.SetSavePoint" />
            <seealso cref="E:ScintillaNET.Scintilla.SavePointLeft" />
        </member>
        <member name="E:ScintillaNET.Scintilla.StyleNeeded">
            <summary>
            Occurs when the control is about to display or print text and requires styling.
            </summary>
            <remarks>
            This event is only raised when <see cref="P:ScintillaNET.Scintilla.Lexer" /> is set to <see cref="F:ScintillaNET.Lexer.Container" />.
            The last position styled correctly can be determined by calling <see cref="M:ScintillaNET.Scintilla.GetEndStyled" />.
            </remarks>
            <seealso cref="M:ScintillaNET.Scintilla.GetEndStyled" />
        </member>
        <member name="E:ScintillaNET.Scintilla.UpdateUI">
            <summary>
            Occurs when the control UI is updated as a result of changes to text (including styling),
            selection, and/or scroll positions.
            </summary>
        </member>
        <member name="E:ScintillaNET.Scintilla.ZoomChanged">
            <summary>
            Occurs when the user zooms the display using the keyboard or the <see cref="P:ScintillaNET.Scintilla.Zoom" /> property is changed.
            </summary>
        </member>
        <member name="M:ScintillaNET.Scintilla.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ScintillaNET.Scintilla" /> class.
            </summary>
        </member>
        <member name="T:ScintillaNET.SearchFlags">
            <summary>
            Specifies the how patterns are matched when performing a search in a <see cref="T:ScintillaNET.Scintilla" /> control.
            </summary>
            <remarks>This enumeration has a FlagsAttribute attribute that allows a bitwise combination of its member values.</remarks>
        </member>
        <member name="F:ScintillaNET.SearchFlags.None">
            <summary>
            Matches every instance of the search string.
            </summary>
        </member>
        <member name="F:ScintillaNET.SearchFlags.MatchCase">
            <summary>
            A match only occurs with text that matches the case of the search string.
            </summary>
        </member>
        <member name="F:ScintillaNET.SearchFlags.WholeWord">
            <summary>
            A match only occurs if the characters before and after are not word characters.
            </summary>
        </member>
        <member name="F:ScintillaNET.SearchFlags.WordStart">
            <summary>
            A match only occurs if the character before is not a word character.
            </summary>
        </member>
        <member name="F:ScintillaNET.SearchFlags.Regex">
            <summary>
            The search string should be interpreted as a regular expression.
            Regular expressions will only match ranges within a single line, never matching over multiple lines.
            </summary>
        </member>
        <member name="F:ScintillaNET.SearchFlags.Posix">
            <summary>
            Treat regular expression in a more POSIX compatible manner by interpreting bare '(' and ')' for tagged sections rather than "\(" and "\)".
            </summary>
        </member>
        <member name="F:ScintillaNET.SearchFlags.Cxx11Regex">
            <summary>
            The search string should be interpreted as a regular expression and use the C++11 &lt;regex&gt; standard library engine.
            The <see cref="P:ScintillaNET.Scintilla.Status" /> property can queried to determine if the regular expression is invalid.
            The ECMAScript flag is set on the regex object and documents will exhibit Unicode-compliant behaviour.
            Regular expressions will only match ranges within a single line, never matching over multiple lines.
            </summary>
        </member>
        <member name="T:ScintillaNET.Selection">
            <summary>
            Represents a selection when there are multiple active selections in a <see cref="T:ScintillaNET.Scintilla" /> control.
            </summary>
        </member>
        <member name="P:ScintillaNET.Selection.Anchor">
            <summary>
            Gets or sets the anchor position of the selection.
            </summary>
            <returns>The zero-based document position of the selection anchor.</returns>
        </member>
        <member name="P:ScintillaNET.Selection.AnchorVirtualSpace">
            <summary>
            Gets or sets the amount of anchor virtual space.
            </summary>
            <returns>The amount of virtual space past the end of the line offsetting the selection anchor.</returns>
        </member>
        <member name="P:ScintillaNET.Selection.Caret">
            <summary>
            Gets or sets the caret position of the selection.
            </summary>
            <returns>The zero-based document position of the selection caret.</returns>
        </member>
        <member name="P:ScintillaNET.Selection.CaretVirtualSpace">
            <summary>
            Gets or sets the amount of caret virtual space.
            </summary>
            <returns>The amount of virtual space past the end of the line offsetting the selection caret.</returns>
        </member>
        <member name="P:ScintillaNET.Selection.End">
            <summary>
            Gets or sets the end position of the selection.
            </summary>
            <returns>The zero-based document position where the selection ends.</returns>
        </member>
        <member name="P:ScintillaNET.Selection.Index">
            <summary>
            Gets the selection index.
            </summary>
            <returns>The zero-based selection index within the <see cref="T:ScintillaNET.SelectionCollection" /> that created it.</returns>
        </member>
        <member name="P:ScintillaNET.Selection.Start">
            <summary>
            Gets or sets the start position of the selection.
            </summary>
            <returns>The zero-based document position where the selection starts.</returns>
        </member>
        <member name="M:ScintillaNET.Selection.#ctor(ScintillaNET.Scintilla,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ScintillaNET.Selection" /> class.
            </summary>
            <param name="scintilla">The <see cref="T:ScintillaNET.Scintilla" /> control that created this selection.</param>
            <param name="index">The index of this selection within the <see cref="T:ScintillaNET.SelectionCollection" /> that created it.</param>
        </member>
        <member name="T:ScintillaNET.SelectionCollection">
            <summary>
            A multiple selection collection.
            </summary>
        </member>
        <member name="M:ScintillaNET.SelectionCollection.GetEnumerator">
            <summary>
            Provides an enumerator that iterates through the collection.
            </summary>
            <returns>An object that contains all <see cref="T:ScintillaNET.Selection" /> objects within the <see cref="T:ScintillaNET.SelectionCollection" />.</returns>
        </member>
        <member name="P:ScintillaNET.SelectionCollection.Count">
            <summary>
            Gets the number of active selections.
            </summary>
            <returns>The number of selections in the <see cref="T:ScintillaNET.SelectionCollection" />.</returns>
        </member>
        <member name="P:ScintillaNET.SelectionCollection.IsEmpty">
            <summary>
            Gets a value indicating whether all selection ranges are empty.
            </summary>
            <returns>true if all selection ranges are empty; otherwise, false.</returns>
        </member>
        <member name="P:ScintillaNET.SelectionCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ScintillaNET.Selection" /> at the specified zero-based index.
            </summary>
            <param name="index">The zero-based index of the <see cref="T:ScintillaNET.Selection" /> to get.</param>
            <returns>The <see cref="T:ScintillaNET.Selection" /> at the specified index.</returns>
        </member>
        <member name="M:ScintillaNET.SelectionCollection.#ctor(ScintillaNET.Scintilla)">
            <summary>
            Initializes a new instance of the <see cref="T:ScintillaNET.SelectionCollection" /> class.
            </summary>
            <param name="scintilla"></param>
        </member>
        <member name="T:ScintillaNET.Status">
            <summary>
            Possible status codes returned by the <see cref="P:ScintillaNET.Scintilla.Status" /> property.
            </summary>
        </member>
        <member name="F:ScintillaNET.Status.Ok">
            <summary>
            No failures.
            </summary>
        </member>
        <member name="F:ScintillaNET.Status.Failure">
            <summary>
            Generic failure.
            </summary>
        </member>
        <member name="F:ScintillaNET.Status.BadAlloc">
            <summary>
            Memory is exhausted.
            </summary>
        </member>
        <member name="F:ScintillaNET.Status.WarnRegex">
            <summary>
            Regular expression is invalid.
            </summary>
        </member>
        <member name="T:ScintillaNET.Style">
            <summary>
            A style definition in a <see cref="T:ScintillaNET.Scintilla" /> control.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Default">
            <summary>
            Default style index. This style is used to define properties that all styles receive when calling <see cref="M:ScintillaNET.Scintilla.StyleClearAll" />.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.LineNumber">
            <summary>
            Line number style index. This style is used for text in line number margins. The background color of this style also
            sets the background color for all margins that do not have any folding mask set.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.CallTip">
            <summary>
            Call tip style index. Only font name, size, foreground color, background color, and character set attributes
            can be used when displaying a call tip.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.IndentGuide">
            <summary>
            Indent guide style index. This style is used to specify the foreground and background colors of <see cref="P:ScintillaNET.Scintilla.IndentationGuides" />.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.BraceLight">
            <summary>
            Brace highlighting style index. This style is used on a brace character when set with the <see cref="M:ScintillaNET.Scintilla.BraceHighlight(System.Int32,System.Int32)" /> method
            or the indentation guide when used with the <see cref="P:ScintillaNET.Scintilla.HighlightGuide" /> property.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.BraceBad">
            <summary>
            Bad brace style index. This style is used on an unmatched brace character when set with the <see cref="M:ScintillaNET.Scintilla.BraceBadLight(System.Int32)" /> method.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.FoldDisplayText">
            <summary>
            Fold text tag style index. This is the style used for drawing text tags attached to folded text when
            <see cref="M:ScintillaNET.Scintilla.FoldDisplayTextSetStyle(ScintillaNET.FoldDisplayText)" /> and <see cref="M:ScintillaNET.Line.ToggleFoldShowText(System.String)" /> are used.
            </summary>
        </member>
        <member name="M:ScintillaNET.Style.CopyTo(ScintillaNET.Style)">
            <summary>
            Copies the current style to another style.
            </summary>
            <param name="destination">The <see cref="T:ScintillaNET.Style" /> to which the current style should be copied.</param>
        </member>
        <member name="P:ScintillaNET.Style.BackColor">
            <summary>
            Gets or sets the background color of the style.
            </summary>
            <returns>A Color object representing the style background color. The default is White.</returns>
            <remarks>Alpha color values are ignored.</remarks>
        </member>
        <member name="P:ScintillaNET.Style.Bold">
            <summary>
            Gets or sets whether the style font is bold.
            </summary>
            <returns>true if bold; otherwise, false. The default is false.</returns>
            <remarks>Setting this property affects the <see cref="P:ScintillaNET.Style.Weight" /> property.</remarks>
        </member>
        <member name="P:ScintillaNET.Style.Case">
            <summary>
            Gets or sets the casing used to display the styled text.
            </summary>
            <returns>One of the <see cref="T:ScintillaNET.StyleCase" /> enum values. The default is <see cref="F:ScintillaNET.StyleCase.Mixed" />.</returns>
            <remarks>This does not affect how text is stored, only displayed.</remarks>
        </member>
        <member name="P:ScintillaNET.Style.FillLine">
            <summary>
            Gets or sets whether the remainder of the line is filled with the <see cref="P:ScintillaNET.Style.BackColor" />
            when this style is used on the last character of a line.
            </summary>
            <returns>true to fill the line; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:ScintillaNET.Style.Font">
            <summary>
            Gets or sets the style font name.
            </summary>
            <returns>The style font name. The default is Verdana.</returns>
            <remarks>Scintilla caches fonts by name so font names and casing should be consistent.</remarks>
        </member>
        <member name="P:ScintillaNET.Style.ForeColor">
            <summary>
            Gets or sets the foreground color of the style.
            </summary>
            <returns>A Color object representing the style foreground color. The default is Black.</returns>
            <remarks>Alpha color values are ignored.</remarks>
        </member>
        <member name="P:ScintillaNET.Style.Hotspot">
            <summary>
            Gets or sets whether hovering the mouse over the style text exhibits hyperlink behavior.
            </summary>
            <returns>true to use hyperlink behavior; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:ScintillaNET.Style.Index">
            <summary>
            Gets the zero-based style definition index.
            </summary>
            <returns>The style definition index within the <see cref="T:ScintillaNET.StyleCollection" />.</returns>
        </member>
        <member name="P:ScintillaNET.Style.Italic">
            <summary>
            Gets or sets whether the style font is italic.
            </summary>
            <returns>true if italic; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:ScintillaNET.Style.Size">
            <summary>
            Gets or sets the size of the style font in points.
            </summary>
            <returns>The size of the style font as a whole number of points. The default is 8.</returns>
        </member>
        <member name="P:ScintillaNET.Style.SizeF">
            <summary>
            Gets or sets the size of the style font in fractoinal points.
            </summary>
            <returns>The size of the style font in fractional number of points. The default is 8.</returns>
        </member>
        <member name="P:ScintillaNET.Style.Underline">
            <summary>
            Gets or sets whether the style is underlined.
            </summary>
            <returns>true if underlined; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:ScintillaNET.Style.Visible">
            <summary>
            Gets or sets whether the style text is visible.
            </summary>
            <returns>true to display the style text; otherwise, false. The default is true.</returns>
        </member>
        <member name="P:ScintillaNET.Style.Weight">
            <summary>
            Gets or sets the style font weight.
            </summary>
            <returns>The font weight. The default is 400.</returns>
            <remarks>Setting this property affects the <see cref="P:ScintillaNET.Style.Bold" /> property.</remarks>
        </member>
        <member name="M:ScintillaNET.Style.#ctor(ScintillaNET.Scintilla,System.Int32)">
            <summary>
            Initializes a new instances of the <see cref="T:ScintillaNET.Style" /> class.
            </summary>
            <param name="scintilla">The <see cref="T:ScintillaNET.Scintilla" /> control that created this style.</param>
            <param name="index">The index of this style within the <see cref="T:ScintillaNET.StyleCollection" /> that created it.</param>
        </member>
        <member name="T:ScintillaNET.Style.Ada">
            <summary>
            Style constants for use with the <see cref="F:ScintillaNET.Lexer.Ada" /> lexer.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Ada.Default">
            <summary>
            Default (whitespace) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Ada.CommentLine">
            <summary>
            Line comment style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Ada.Number">
            <summary>
            Number style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Ada.Word">
            <summary>
            Keyword style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Ada.String">
            <summary>
            Double-quoted string style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Ada.Character">
            <summary>
            Single-quoted string style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Ada.Delimiter">
            <summary>
            Delimiter style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Ada.Label">
            <summary>
            Label style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Ada.Identifier">
            <summary>
            Identifier style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Ada.StringEol">
            <summary>
            Unclosed string EOL style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Ada.CharacterEol">
            <summary>
            Unclosed character EOL style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Ada.Illegal">
            <summary>
            Illegal identifier or keyword style index.
            </summary>
        </member>
        <member name="T:ScintillaNET.Style.Asm">
            <summary>
            Style constants for use with the <see cref="F:ScintillaNET.Lexer.Asm" /> lexer.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Asm.Default">
            <summary>
            Default (whitespace) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Asm.Comment">
            <summary>
            Comment style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Asm.CommentBlock">
            <summary>
            Comment block style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Asm.Number">
            <summary>
            Number style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Asm.MathInstruction">
            <summary>
            Math instruction (keword list 1) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Asm.String">
            <summary>
            Double-quoted string style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Asm.Character">
            <summary>
            Single-quoted string style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Asm.CpuInstruction">
            <summary>
            CPU instruction (keyword list 0) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Asm.Register">
            <summary>
            Register (keyword list 2) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Asm.Operator">
            <summary>
            Operator style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Asm.Identifier">
            <summary>
            Identifier style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Asm.StringEol">
            <summary>
            Unclosed string EOL style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Asm.Directive">
            <summary>
            Directive (keyword list 3) string style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Asm.DirectiveOperand">
            <summary>
            Directive operand (keyword list 4) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Asm.ExtInstruction">
            <summary>
            Extended instruction (keyword list 5) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Asm.CommentDirective">
            <summary>
            Comment directive style index.
            </summary>
        </member>
        <member name="T:ScintillaNET.Style.BlitzBasic">
            <summary>
            Style constants for use with the <see cref="F:ScintillaNET.Lexer.BlitzBasic" /> lexer.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.BlitzBasic.Default">
            <summary>
            Default (whitespace) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.BlitzBasic.Comment">
            <summary>
            Comment style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.BlitzBasic.Number">
            <summary>
            Number style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.BlitzBasic.Keyword">
            <summary>
            Keyword style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.BlitzBasic.String">
            <summary>
            String style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.BlitzBasic.Preprocessor">
            <summary>
            Preprocessor style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.BlitzBasic.Operator">
            <summary>
            Operator style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.BlitzBasic.Identifier">
            <summary>
            Identifier style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.BlitzBasic.Date">
            <summary>
            Date style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.BlitzBasic.StringEol">
            <summary>
            Unclosed string EOL style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.BlitzBasic.Keyword2">
            <summary>
            Keyword list 2 (index 1) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.BlitzBasic.Keyword3">
            <summary>
            Keyword list 3 (index 2) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.BlitzBasic.Keyword4">
            <summary>
            Keyword list 4 (index 3) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.BlitzBasic.Constant">
            <summary>
            Constant style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.BlitzBasic.Asm">
            <summary>
            Inline assembler style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.BlitzBasic.Label">
            <summary>
            Label style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.BlitzBasic.Error">
            <summary>
            Error style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.BlitzBasic.HexNumber">
            <summary>
            Hexadecimal number style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.BlitzBasic.BinNumber">
            <summary>
            Binary number style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.BlitzBasic.CommentBlock">
            <summary>
            Block comment style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.BlitzBasic.DocLine">
            <summary>
            Documentation line style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.BlitzBasic.DocBlock">
            <summary>
            Documentation block style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.BlitzBasic.DocKeyword">
            <summary>
            Documentation keyword style index.
            </summary>
        </member>
        <member name="T:ScintillaNET.Style.Batch">
            <summary>
            Style constants for use with the <see cref="F:ScintillaNET.Lexer.Batch" /> lexer.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Batch.Default">
            <summary>
            Default (whitespace) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Batch.Comment">
            <summary>
            Comment style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Batch.Word">
            <summary>
            Keyword (list 0) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Batch.Label">
            <summary>
            Label style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Batch.Hide">
            <summary>
            Hide (@ECHO OFF/ON) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Batch.Command">
            <summary>
            External command (keyword list 1) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Batch.Identifier">
            <summary>
            Identifier string style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Batch.Operator">
            <summary>
            Operator style index.
            </summary>
        </member>
        <member name="T:ScintillaNET.Style.Cpp">
            <summary>
            Style constants for use with the <see cref="F:ScintillaNET.Lexer.Cpp" /> lexer.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Cpp.Default">
            <summary>
            Default (whitespace) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Cpp.Comment">
            <summary>
            Comment style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Cpp.CommentLine">
            <summary>
            Line comment style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Cpp.CommentDoc">
            <summary>
            Documentation comment style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Cpp.Number">
            <summary>
            Number style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Cpp.Word">
            <summary>
            Keyword style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Cpp.String">
            <summary>
            Double-quoted string style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Cpp.Character">
            <summary>
            Single-quoted string style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Cpp.Uuid">
            <summary>
            UUID style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Cpp.Preprocessor">
            <summary>
            Preprocessor style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Cpp.Operator">
            <summary>
            Operator style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Cpp.Identifier">
            <summary>
            Identifier style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Cpp.StringEol">
            <summary>
            Unclosed string EOL style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Cpp.Verbatim">
            <summary>
            Verbatim string style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Cpp.Regex">
            <summary>
            Regular expression style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Cpp.CommentLineDoc">
            <summary>
            Documentation comment line style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Cpp.Word2">
            <summary>
            Keyword style 2 index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Cpp.CommentDocKeyword">
            <summary>
            Comment keyword style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Cpp.CommentDocKeywordError">
            <summary>
            Comment keyword error style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Cpp.GlobalClass">
            <summary>
            Global class style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Cpp.StringRaw">
            <summary>
            Raw string style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Cpp.TripleVerbatim">
            <summary>
            Triple-quoted string style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Cpp.HashQuotedString">
            <summary>
            Hash-quoted string style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Cpp.PreprocessorComment">
            <summary>
            Preprocessor comment style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Cpp.PreprocessorCommentDoc">
            <summary>
            Preprocessor documentation comment style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Cpp.UserLiteral">
            <summary>
            User-defined literal style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Cpp.TaskMarker">
            <summary>
            Task marker style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Cpp.EscapeSequence">
            <summary>
            Escape sequence style index.
            </summary>
        </member>
        <member name="T:ScintillaNET.Style.Css">
            <summary>
            Style constants for use with the <see cref="F:ScintillaNET.Lexer.Css" /> lexer.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Css.Default">
            <summary>
            Default (whitespace) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Css.Tag">
            <summary>
            Tag style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Css.Class">
            <summary>
            Class style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Css.PseudoClass">
            <summary>
            Pseudo class style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Css.UnknownPseudoClass">
            <summary>
            Unknown pseudo class style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Css.Operator">
            <summary>
            Operator style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Css.Identifier">
            <summary>
            Identifier style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Css.UnknownIdentifier">
            <summary>
            Unknown identifier style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Css.Value">
            <summary>
            Value style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Css.Comment">
            <summary>
            Comment style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Css.Id">
            <summary>
            ID style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Css.Important">
            <summary>
            Important style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Css.Directive">
            <summary>
            Directive style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Css.DoubleString">
            <summary>
            Double-quoted string style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Css.SingleString">
            <summary>
            Single-quoted string style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Css.Identifier2">
            <summary>
            Identifier style 2 index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Css.Attribute">
            <summary>
            Attribute style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Css.Identifier3">
            <summary>
            Identifier style 3 index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Css.PseudoElement">
            <summary>
            Pseudo element style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Css.ExtendedIdentifier">
            <summary>
            Extended identifier style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Css.ExtendedPseudoClass">
            <summary>
            Extended pseudo class style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Css.ExtendedPseudoElement">
            <summary>
            Extended pseudo element style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Css.Media">
            <summary>
            Media style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Css.Variable">
            <summary>
            Variable style index.
            </summary>
        </member>
        <member name="T:ScintillaNET.Style.Fortran">
            <summary>
            Style constants for use with the <see cref="F:ScintillaNET.Lexer.Fortran" /> lexer.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Fortran.Default">
            <summary>
            Default (whitespace) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Fortran.Comment">
            <summary>
            Comment style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Fortran.Number">
            <summary>
            Number style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Fortran.String1">
            <summary>
            Single-quoted string style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Fortran.String2">
            <summary>
            Double-quoted string style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Fortran.StringEol">
            <summary>
            Unclosed string EOL style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Fortran.Operator">
            <summary>
            Operator style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Fortran.Identifier">
            <summary>
            Identifier style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Fortran.Word">
            <summary>
            Keyword (list 0) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Fortran.Word2">
            <summary>
            Keyword 2 (list 1) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Fortran.Word3">
            <summary>
            Keyword 3 (list 2) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Fortran.Preprocessor">
            <summary>
            Preprocessor style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Fortran.Operator2">
            <summary>
            Operator 2 style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Fortran.Label">
            <summary>
            Label string style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Fortran.Continuation">
            <summary>
            Continuation style index.
            </summary>
        </member>
        <member name="T:ScintillaNET.Style.FreeBasic">
            <summary>
            Style constants for use with the <see cref="F:ScintillaNET.Lexer.FreeBasic" /> lexer.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.FreeBasic.Default">
            <summary>
            Default (whitespace) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.FreeBasic.Comment">
            <summary>
            Comment style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.FreeBasic.Number">
            <summary>
            Number style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.FreeBasic.Keyword">
            <summary>
            Keyword style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.FreeBasic.String">
            <summary>
            String style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.FreeBasic.Preprocessor">
            <summary>
            Preprocessor style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.FreeBasic.Operator">
            <summary>
            Operator style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.FreeBasic.Identifier">
            <summary>
            Identifier style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.FreeBasic.Date">
            <summary>
            Date style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.FreeBasic.StringEol">
            <summary>
            Unclosed string EOL style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.FreeBasic.Keyword2">
            <summary>
            Keyword list 2 (index 1) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.FreeBasic.Keyword3">
            <summary>
            Keyword list 3 (index 2) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.FreeBasic.Keyword4">
            <summary>
            Keyword list 4 (index 3) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.FreeBasic.Constant">
            <summary>
            Constant style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.FreeBasic.Asm">
            <summary>
            Inline assembler style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.FreeBasic.Label">
            <summary>
            Label style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.FreeBasic.Error">
            <summary>
            Error style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.FreeBasic.HexNumber">
            <summary>
            Hexadecimal number style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.FreeBasic.BinNumber">
            <summary>
            Binary number style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.FreeBasic.CommentBlock">
            <summary>
            Block comment style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.FreeBasic.DocLine">
            <summary>
            Documentation line style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.FreeBasic.DocBlock">
            <summary>
            Documentation block style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.FreeBasic.DocKeyword">
            <summary>
            Documentation keyword style index.
            </summary>
        </member>
        <member name="T:ScintillaNET.Style.Html">
            <summary>
            Style constants for use with the <see cref="F:ScintillaNET.Lexer.Html" /> lexer.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Html.Default">
            <summary>
            Content style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Html.Tag">
            <summary>
            Tag style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Html.TagUnknown">
            <summary>
            Unknown tag style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Html.Attribute">
            <summary>
            Attribute style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Html.AttributeUnknown">
            <summary>
            Unknown attribute style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Html.Number">
            <summary>
            Number style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Html.DoubleString">
            <summary>
            Double-quoted string style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Html.SingleString">
            <summary>
            Single-quoted string style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Html.Other">
            <summary>
            Other tag content (not elements or attributes) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Html.Comment">
            <summary>
            Comment style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Html.Entity">
            <summary>
            Entity ($nnn;) name style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Html.TagEnd">
            <summary>
            End-tag style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Html.XmlStart">
            <summary>
            Start of XML declaration (&lt;?xml&gt;) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Html.XmlEnd">
            <summary>
            End of XML declaration (?&gt;) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Html.Script">
            <summary>
            Script tag (&lt;script&gt;) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Html.Asp">
            <summary>
            ASP-like script engine block (&lt;%) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Html.AspAt">
            <summary>
            ASP-like language declaration (&lt;%@) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Html.CData">
            <summary>
            CDATA section style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Html.Question">
            <summary>
            Question mark style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Html.Value">
            <summary>
            Value style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Html.XcComment">
            <summary>
            Script engine comment (&lt;%--) style index.
            </summary>
        </member>
        <member name="T:ScintillaNET.Style.Json">
            <summary>
            Style constants for use with the <see cref="F:ScintillaNET.Lexer.Json" /> lexer.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Json.Default">
            <summary>
            Default (whitespace) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Json.Number">
            <summary>
            Number style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Json.String">
            <summary>
            String style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Json.StringEol">
            <summary>
            Unclosed string EOL style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Json.PropertyName">
            <summary>
            Property name style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Json.EscapeSequence">
            <summary>
            Escape sequence style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Json.LineComment">
            <summary>
            Line comment style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Json.BlockComment">
            <summary>
            Block comment style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Json.Operator">
            <summary>
            Operator style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Json.Uri">
            <summary>
            URI style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Json.CompactIRI">
            <summary>
            Compact Internationalized Resource Identifier (IRI) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Json.Keyword">
            <summary>
            Keyword style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Json.LdKeyword">
            <summary>
            Linked data (LD) keyword style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Json.Error">
            <summary>
            Error style index.
            </summary>
        </member>
        <member name="T:ScintillaNET.Style.Lisp">
            <summary>
            Style constants for use with the <see cref="F:ScintillaNET.Lexer.Lisp" /> lexer.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Lisp.Default">
            <summary>
            Default (whitespace) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Lisp.Comment">
            <summary>
            Comment style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Lisp.Number">
            <summary>
            Number style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Lisp.Keyword">
            <summary>
            Functions and special operators (list 0) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Lisp.KeywordKw">
            <summary>
            Keywords (list 1) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Lisp.Symbol">
            <summary>
            Symbol style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Lisp.String">
            <summary>
            Double-quoted string style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Lisp.StringEol">
            <summary>
            Unclosed string EOL style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Lisp.Identifier">
            <summary>
            Identifier style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Lisp.Operator">
            <summary>
            Operator style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Lisp.Special">
            <summary>
            Special character style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Lisp.MultiComment">
            <summary>
            Multi-line comment style index.
            </summary>
        </member>
        <member name="T:ScintillaNET.Style.Lua">
            <summary>
            Style constants for use with the <see cref="F:ScintillaNET.Lexer.Lua" /> lexer.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Lua.Default">
            <summary>
            Default style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Lua.Comment">
            <summary>
            Comment style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Lua.CommentLine">
            <summary>
            Line comment style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Lua.CommentDoc">
            <summary>
            Documentation comment style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Lua.Number">
            <summary>
            Number style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Lua.Word">
            <summary>
            Keyword list 1 (index 0) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Lua.String">
            <summary>
            Double-quoted string style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Lua.Character">
            <summary>
            Single-quoted string style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Lua.LiteralString">
            <summary>
            Literal string style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Lua.Preprocessor">
            <summary>
            Preprocessor style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Lua.Operator">
            <summary>
            Operator style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Lua.Identifier">
            <summary>
            Identifier style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Lua.StringEol">
            <summary>
            Unclosed string EOL style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Lua.Word2">
            <summary>
            Keywords list 2 (index 1) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Lua.Word3">
            <summary>
            Keywords list 3 (index 2) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Lua.Word4">
            <summary>
            Keywords list 4 (index 3) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Lua.Word5">
            <summary>
            Keywords list 5 (index 4) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Lua.Word6">
            <summary>
            Keywords list 6 (index 5) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Lua.Word7">
            <summary>
            Keywords list 7 (index 6) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Lua.Word8">
            <summary>
            Keywords list 8 (index 7) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Lua.Label">
            <summary>
            Label style index.
            </summary>
        </member>
        <member name="T:ScintillaNET.Style.Pascal">
            <summary>
            Style constants for use with the <see cref="F:ScintillaNET.Lexer.Pascal" /> lexer.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Pascal.Default">
            <summary>
            Default style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Pascal.Identifier">
            <summary>
            Identifier style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Pascal.Comment">
            <summary>
            Comment style '{' index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Pascal.Comment2">
            <summary>
            Comment style 2 "(*" index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Pascal.CommentLine">
            <summary>
            Comment line style "//" index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Pascal.Preprocessor">
            <summary>
            Preprocessor style "{$" index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Pascal.Preprocessor2">
            <summary>
            Preprocessor style 2 "(*$" index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Pascal.Number">
            <summary>
            Number style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Pascal.HexNumber">
            <summary>
            Hexadecimal number style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Pascal.Word">
            <summary>
            Word (keyword set 0) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Pascal.String">
            <summary>
            Double-quoted string style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Pascal.StringEol">
            <summary>
            Unclosed string EOL style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Pascal.Character">
            <summary>
            Single-quoted string style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Pascal.Operator">
            <summary>
            Operator style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Pascal.Asm">
            <summary>
            Assembly style index.
            </summary>
        </member>
        <member name="T:ScintillaNET.Style.Perl">
            <summary>
            Style constants for use with the <see cref="F:ScintillaNET.Lexer.Perl" /> lexer.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Perl.Default">
            <summary>
            Default (whitespace) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Perl.Error">
            <summary>
            Error style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Perl.CommentLine">
            <summary>
            Line comment style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Perl.Pod">
            <summary>
            POD style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Perl.Number">
            <summary>
            Number style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Perl.Word">
            <summary>
            Keyword style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Perl.String">
            <summary>
            Double-quoted string style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Perl.Character">
            <summary>
            Single-quoted string style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Perl.Punctuation">
            <summary>
            Punctuation style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Perl.Preprocessor">
            <summary>
            Preprocessor style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Perl.Operator">
            <summary>
            Operator style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Perl.Identifier">
            <summary>
            Identifier style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Perl.Scalar">
            <summary>
            Scalar style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Perl.Array">
            <summary>
            Array style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Perl.Hash">
            <summary>
            Hash style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Perl.SymbolTable">
            <summary>
            Symbol table style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Perl.VariableIndexer">
            <summary>
            Variable indexer index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Perl.Regex">
            <summary>
            Regular expression style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Perl.RegSubst">
            <summary>
            RegSubst style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Perl.BackTicks">
            <summary>
            Backtick (grave accent, backquote) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Perl.DataSection">
            <summary>
            Data section style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Perl.HereDelim">
            <summary>
            HereDoc delimiter style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Perl.HereQ">
            <summary>
            HereDoc single-quote style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Perl.HereQq">
            <summary>
            HereDoc double-quote style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Perl.HereQx">
            <summary>
            HereDoc backtick style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Perl.StringQ">
            <summary>
            Q quote style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Perl.StringQq">
            <summary>
            QQ quote style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Perl.StringQx">
            <summary>
            QZ quote style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Perl.StringQr">
            <summary>
            QR quote style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Perl.StringQw">
            <summary>
            QW quote style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Perl.PodVerb">
            <summary>
            POD verbatim style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Perl.SubPrototype">
            <summary>
            Subroutine prototype style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Perl.FormatIdent">
            <summary>
            Format identifier style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Perl.Format">
            <summary>
            Format style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Perl.StringVar">
            <summary>
            String variable style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Perl.XLat">
            <summary>
            XLAT style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Perl.RegexVar">
            <summary>
            Regular expression variable style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Perl.RegSubstVar">
            <summary>
            RegSubst variable style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Perl.BackticksVar">
            <summary>
            Backticks variable style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Perl.HereQqVar">
            <summary>
            HereDoc QQ quote variable style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Perl.HereQxVar">
            <summary>
            HereDoc QX quote variable style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Perl.StringQqVar">
            <summary>
            QQ quote variable style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Perl.StringQxVar">
            <summary>
            QX quote variable style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Perl.StringQrVar">
            <summary>
            QR quote variable style index.
            </summary>
        </member>
        <member name="T:ScintillaNET.Style.PhpScript">
            <summary>
            Style constants for use with the <see cref="F:ScintillaNET.Lexer.PhpScript" /> lexer.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.PhpScript.ComplexVariable">
            <summary>
            Complex Variable style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.PhpScript.Default">
            <summary>
            Default (whitespace) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.PhpScript.HString">
            <summary>
            Double-quoted string style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.PhpScript.SimpleString">
            <summary>
            Single-quoted string style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.PhpScript.Word">
            <summary>
            Keyword style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.PhpScript.Number">
            <summary>
            Number style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.PhpScript.Variable">
            <summary>
            Variable style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.PhpScript.Comment">
            <summary>
            Comment style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.PhpScript.CommentLine">
            <summary>
            Line comment style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.PhpScript.HStringVariable">
            <summary>
            Double-quoted string variable style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.PhpScript.Operator">
            <summary>
            Operator style index.
            </summary>
        </member>
        <member name="T:ScintillaNET.Style.PowerShell">
            <summary>
            Style constants for use with the <see cref="F:ScintillaNET.Lexer.PowerShell" /> lexer.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.PowerShell.Default">
            <summary>
            Default (whitespace) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.PowerShell.Comment">
            <summary>
            Line comment style index
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.PowerShell.String">
            <summary>
            String style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.PowerShell.Character">
            <summary>
            Character style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.PowerShell.Number">
            <summary>
            Number style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.PowerShell.Variable">
            <summary>
            Variable style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.PowerShell.Operator">
            <summary>
            Operator style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.PowerShell.Identifier">
            <summary>
            Identifier style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.PowerShell.Keyword">
            <summary>
            Keyword (set 0) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.PowerShell.Cmdlet">
            <summary>
            Cmdlet (set 1) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.PowerShell.Alias">
            <summary>
            Alias (set 2) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.PowerShell.Function">
            <summary>
            Function (set 3) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.PowerShell.User1">
            <summary>
            User word (set 4) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.PowerShell.CommentStream">
            <summary>
            Multi-line comment style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.PowerShell.HereString">
            <summary>
            Here string style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.PowerShell.HereCharacter">
            <summary>
            Here character style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.PowerShell.CommentDocKeyword">
            <summary>
            Comment based help keyword style index.
            </summary>
        </member>
        <member name="T:ScintillaNET.Style.Properties">
            <summary>
            Style constants for use with the <see cref="F:ScintillaNET.Lexer.Properties" /> lexer.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Properties.Default">
            <summary>
            Default (whitespace) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Properties.Comment">
            <summary>
            Comment style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Properties.Section">
            <summary>
            Section style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Properties.Assignment">
            <summary>
            Assignment operator index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Properties.DefVal">
            <summary>
            Default (registry-only) value index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Properties.Key">
            <summary>
            Key style index.
            </summary>
        </member>
        <member name="T:ScintillaNET.Style.PureBasic">
            <summary>
            Style constants for use with the <see cref="F:ScintillaNET.Lexer.PureBasic" /> lexer.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.PureBasic.Default">
            <summary>
            Default (whitespace) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.PureBasic.Comment">
            <summary>
            Comment style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.PureBasic.Number">
            <summary>
            Number style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.PureBasic.Keyword">
            <summary>
            Keyword style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.PureBasic.String">
            <summary>
            String style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.PureBasic.Preprocessor">
            <summary>
            Preprocessor style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.PureBasic.Operator">
            <summary>
            Operator style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.PureBasic.Identifier">
            <summary>
            Identifier style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.PureBasic.Date">
            <summary>
            Date style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.PureBasic.StringEol">
            <summary>
            Unclosed string EOL style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.PureBasic.Keyword2">
            <summary>
            Keyword list 2 (index 1) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.PureBasic.Keyword3">
            <summary>
            Keyword list 3 (index 2) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.PureBasic.Keyword4">
            <summary>
            Keyword list 4 (index 3) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.PureBasic.Constant">
            <summary>
            Constant style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.PureBasic.Asm">
            <summary>
            Inline assembler style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.PureBasic.Label">
            <summary>
            Label style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.PureBasic.Error">
            <summary>
            Error style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.PureBasic.HexNumber">
            <summary>
            Hexadecimal number style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.PureBasic.BinNumber">
            <summary>
            Binary number style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.PureBasic.CommentBlock">
            <summary>
            Block comment style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.PureBasic.DocLine">
            <summary>
            Documentation line style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.PureBasic.DocBlock">
            <summary>
            Documentation block style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.PureBasic.DocKeyword">
            <summary>
            Documentation keyword style index.
            </summary>
        </member>
        <member name="T:ScintillaNET.Style.Python">
            <summary>
            Style constants for use with the <see cref="F:ScintillaNET.Lexer.Python" /> lexer.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Python.Default">
            <summary>
            Default (whitespace) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Python.CommentLine">
            <summary>
            Line comment style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Python.Number">
            <summary>
            Number style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Python.String">
            <summary>
            String style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Python.Character">
            <summary>
            Single-quote style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Python.Word">
            <summary>
            Keyword style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Python.Triple">
            <summary>
            Triple single-quote style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Python.TripleDouble">
            <summary>
            Triple double-quote style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Python.ClassName">
            <summary>
            Class name style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Python.DefName">
            <summary>
            Function or method name style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Python.Operator">
            <summary>
            Operator style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Python.Identifier">
            <summary>
            Identifier style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Python.CommentBlock">
            <summary>
            Block comment style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Python.StringEol">
            <summary>
            Unclosed string EOL style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Python.Word2">
            <summary>
            Keyword style 2 index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Python.Decorator">
            <summary>
            Decorator style index.
            </summary>
        </member>
        <member name="T:ScintillaNET.Style.Ruby">
            <summary>
            Style constants for use with the <see cref="F:ScintillaNET.Lexer.Ruby" /> lexer.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Ruby.Default">
            <summary>
            Default (whitespace) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Ruby.Error">
            <summary>
            Error style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Ruby.CommentLine">
            <summary>
            Line comment style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Ruby.Pod">
            <summary>
            POD style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Ruby.Number">
            <summary>
            Number style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Ruby.Word">
            <summary>
            Keyword style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Ruby.String">
            <summary>
            Double-quoted string style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Ruby.Character">
            <summary>
            Single-quoted string style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Ruby.ClassName">
            <summary>
            Class name style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Ruby.DefName">
            <summary>
            Definition style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Ruby.Operator">
            <summary>
            Operator style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Ruby.Identifier">
            <summary>
            Identifier style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Ruby.Regex">
            <summary>
            Regular expression style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Ruby.Global">
            <summary>
            Global style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Ruby.Symbol">
            <summary>
            Symbol style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Ruby.ModuleName">
            <summary>
            Module name style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Ruby.InstanceVar">
            <summary>
            Instance variable style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Ruby.ClassVar">
            <summary>
            Class variable style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Ruby.BackTicks">
            <summary>
            Backticks style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Ruby.DataSection">
            <summary>
            Data section style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Ruby.HereDelim">
            <summary>
            HereDoc delimiter style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Ruby.HereQ">
            <summary>
            HereDoc Q quote style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Ruby.HereQq">
            <summary>
            HereDoc QQ quote style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Ruby.HereQx">
            <summary>
            HereDoc QX quote style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Ruby.StringQ">
            <summary>
            Q quote string style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Ruby.StringQq">
            <summary>
            QQ quote string style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Ruby.StringQx">
            <summary>
            QX quote string style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Ruby.StringQr">
            <summary>
            QR quote string style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Ruby.StringQw">
            <summary>
            QW quote style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Ruby.WordDemoted">
            <summary>
            Demoted keyword style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Ruby.StdIn">
            <summary>
            Standard-in style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Ruby.StdOut">
            <summary>
            Standard-out style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Ruby.StdErr">
            <summary>
            Standard-error style index.
            </summary>
        </member>
        <member name="T:ScintillaNET.Style.Smalltalk">
            <summary>
            Style constants for use with the <see cref="F:ScintillaNET.Lexer.Smalltalk" /> lexer.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Smalltalk.Default">
            <summary>
            Default (whitespace) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Smalltalk.String">
            <summary>
            Double-quoted string style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Smalltalk.Number">
            <summary>
            Number style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Smalltalk.Comment">
            <summary>
            Comment style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Smalltalk.Symbol">
            <summary>
            Symbol style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Smalltalk.Binary">
            <summary>
            Binary style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Smalltalk.Bool">
            <summary>
            Bool style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Smalltalk.Self">
            <summary>
            Self style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Smalltalk.Super">
            <summary>
            Super style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Smalltalk.Nil">
            <summary>
            NIL style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Smalltalk.Global">
            <summary>
            Global style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Smalltalk.Return">
            <summary>
            Return style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Smalltalk.Special">
            <summary>
            Special style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Smalltalk.KwsEnd">
            <summary>
            KWS End style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Smalltalk.Assign">
            <summary>
            Assign style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Smalltalk.Character">
            <summary>
            Single-quoted string style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Smalltalk.SpecSel">
            <summary>
            Special selector style index.
            </summary>
        </member>
        <member name="T:ScintillaNET.Style.Sql">
            <summary>
            Style constants for use with the <see cref="F:ScintillaNET.Lexer.Sql" /> lexer.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Sql.Default">
            <summary>
            Default (whitespace) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Sql.Comment">
            <summary>
            Comment style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Sql.CommentLine">
            <summary>
            Line comment style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Sql.CommentDoc">
            <summary>
            Documentation comment style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Sql.Number">
            <summary>
            Number style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Sql.Word">
            <summary>
            Keyword list 1 (index 0) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Sql.String">
            <summary>
            Double-quoted string style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Sql.Character">
            <summary>
            Single-quoted string style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Sql.SqlPlus">
            <summary>
            Keyword from the SQL*Plus list (index 3) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Sql.SqlPlusPrompt">
            <summary>
            SQL*Plus prompt style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Sql.Operator">
            <summary>
            Operator style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Sql.Identifier">
            <summary>
            Identifier style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Sql.SqlPlusComment">
            <summary>
            SQL*Plus comment style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Sql.CommentLineDoc">
            <summary>
            Documentation line comment style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Sql.Word2">
            <summary>
            Keyword list 2 (index 1) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Sql.CommentDocKeyword">
            <summary>
            Documentation (Doxygen) keyword style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Sql.CommentDocKeywordError">
            <summary>
            Documentation (Doxygen) keyword error style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Sql.User1">
            <summary>
            Keyword user-list 1 (index 4) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Sql.User2">
            <summary>
            Keyword user-list 2 (index 5) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Sql.User3">
            <summary>
            Keyword user-list 3 (index 6) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Sql.User4">
            <summary>
            Keyword user-list 4 (index 7) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Sql.QuotedIdentifier">
            <summary>
            Quoted identifier style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Sql.QOperator">
            <summary>
            Q operator style index.
            </summary>
        </member>
        <member name="T:ScintillaNET.Style.Markdown">
            <summary>
            Style constants for use with the <see cref="F:ScintillaNET.Lexer.Markdown" /> lexer.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Markdown.Default">
            <summary>
            Default text style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Markdown.LineBegin">
            <summary>
            Line begin style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Markdown.Strong1">
            <summary>
            Strong type 1 style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Markdown.Strong2">
            <summary>
            Strong type 2 style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Markdown.Em1">
            <summary>
            Empasis type 1 style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Markdown.Em2">
            <summary>
            Empasis type 2 style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Markdown.Header1">
            <summary>
            Header type 1 style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Markdown.Header2">
            <summary>
            Header type 2 style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Markdown.Header3">
            <summary>
            Header type 3 style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Markdown.Header4">
            <summary>
            Header type 4 style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Markdown.Header5">
            <summary>
            Header type 5 style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Markdown.Header6">
            <summary>
            Header type 6 style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Markdown.PreChar">
            <summary>
            Pre char style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Markdown.UListItem">
            <summary>
            Unordered list style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Markdown.OListItem">
            <summary>
            Ordered list style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Markdown.BlockQuote">
            <summary>
            Blockquote style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Markdown.Strikeout">
            <summary>
            Strikeout style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Markdown.HRule">
            <summary>
            Horizontal rule style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Markdown.Link">
            <summary>
            Link style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Markdown.Code">
            <summary>
            Code type 1 style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Markdown.Code2">
            <summary>
            Code type 2 style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Markdown.CodeBk">
            <summary>
            Code block style index.
            </summary>
        </member>
        <member name="T:ScintillaNET.Style.R">
            <summary>
            Style constants for use with the <see cref="F:ScintillaNET.Lexer.R" /> lexer.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.R.Default">
            <summary>
            Default style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.R.Comment">
            <summary>
            Comment style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.R.KWord">
            <summary>
            Keyword (set 0) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.R.BaseKWord">
            <summary>
            Base keyword (set 1) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.R.OtherKWord">
            <summary>
            Other keyword (set 2) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.R.Number">
            <summary>
            Number style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.R.String">
            <summary>
            Double-quoted string style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.R.String2">
            <summary>
            Single-quoted string style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.R.Operator">
            <summary>
            Operator style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.R.Identifier">
            <summary>
            Identifier style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.R.Infix">
            <summary>
            Infix style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.R.InfixEol">
            <summary>
            Unclosed infix EOL style index.
            </summary>
        </member>
        <member name="T:ScintillaNET.Style.Vb">
            <summary>
            Style constants for use with the <see cref="F:ScintillaNET.Lexer.Vb" /> lexer.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Vb.Default">
            <summary>
            Default (whitespace) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Vb.Comment">
            <summary>
            Comment style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Vb.Number">
            <summary>
            Number style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Vb.Keyword">
            <summary>
            Keyword style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Vb.String">
            <summary>
            String style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Vb.Preprocessor">
            <summary>
            Preprocessor style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Vb.Operator">
            <summary>
            Operator style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Vb.Identifier">
            <summary>
            Identifier style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Vb.Date">
            <summary>
            Date style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Vb.StringEol">
            <summary>
            Unclosed string EOL style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Vb.Keyword2">
            <summary>
            Keyword list 2 (index 1) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Vb.Keyword3">
            <summary>
            Keyword list 3 (index 2) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Vb.Keyword4">
            <summary>
            Keyword list 4 (index 3) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Vb.Constant">
            <summary>
            Constant style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Vb.Asm">
            <summary>
            Inline assembler style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Vb.Label">
            <summary>
            Label style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Vb.Error">
            <summary>
            Error style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Vb.HexNumber">
            <summary>
            Hexadecimal number style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Vb.BinNumber">
            <summary>
            Binary number style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Vb.CommentBlock">
            <summary>
            Block comment style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Vb.DocLine">
            <summary>
            Documentation line style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Vb.DocBlock">
            <summary>
            Documentation block style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Vb.DocKeyword">
            <summary>
            Documentation keyword style index.
            </summary>
        </member>
        <member name="T:ScintillaNET.Style.VbScript">
            <summary>
            Style constants for use with the <see cref="F:ScintillaNET.Lexer.VbScript" /> lexer.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.VbScript.Default">
            <summary>
            Default (whitespace) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.VbScript.Comment">
            <summary>
            Comment style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.VbScript.Number">
            <summary>
            Number style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.VbScript.Keyword">
            <summary>
            Keyword style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.VbScript.String">
            <summary>
            String style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.VbScript.Preprocessor">
            <summary>
            Preprocessor style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.VbScript.Operator">
            <summary>
            Operator style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.VbScript.Identifier">
            <summary>
            Identifier style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.VbScript.Date">
            <summary>
            Date style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.VbScript.StringEol">
            <summary>
            Unclosed string EOL style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.VbScript.Keyword2">
            <summary>
            Keyword list 2 (index 1) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.VbScript.Keyword3">
            <summary>
            Keyword list 3 (index 2) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.VbScript.Keyword4">
            <summary>
            Keyword list 4 (index 3) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.VbScript.Constant">
            <summary>
            Constant style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.VbScript.Asm">
            <summary>
            Inline assembler style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.VbScript.Label">
            <summary>
            Label style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.VbScript.Error">
            <summary>
            Error style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.VbScript.HexNumber">
            <summary>
            Hexadecimal number style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.VbScript.BinNumber">
            <summary>
            Binary number style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.VbScript.CommentBlock">
            <summary>
            Block comment style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.VbScript.DocLine">
            <summary>
            Documentation line style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.VbScript.DocBlock">
            <summary>
            Documentation block style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.VbScript.DocKeyword">
            <summary>
            Documentation keyword style index.
            </summary>
        </member>
        <member name="T:ScintillaNET.Style.Verilog">
            <summary>
            Style constants for use with the <see cref="F:ScintillaNET.Lexer.Verilog" /> lexer.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Verilog.Default">
            <summary>
            Default (whitespace) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Verilog.Comment">
            <summary>
            Comment style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Verilog.CommentLine">
            <summary>
            Comment line style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Verilog.CommentLineBang">
            <summary>
            Comment line bang (exclamation) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Verilog.Number">
            <summary>
            Number style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Verilog.Word">
            <summary>
            Keyword (set 0) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Verilog.String">
            <summary>
            String style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Verilog.Word2">
            <summary>
            Keyword (set 1) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Verilog.Word3">
            <summary>
            Keyword (set 2) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Verilog.Preprocessor">
            <summary>
            Preprocessor style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Verilog.Operator">
            <summary>
            Operator style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Verilog.Identifier">
            <summary>
            Identifier style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Verilog.StringEol">
            <summary>
            Unclosed string EOL style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Verilog.User">
            <summary>
            User word (set 3) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Verilog.CommentWord">
            <summary>
            Comment word (set 4) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Verilog.Input">
            <summary>
            Input style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Verilog.Output">
            <summary>
            Output style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Verilog.InOut">
            <summary>
            In-out style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Verilog.PortConnect">
            <summary>
            Port connect style index.
            </summary>
        </member>
        <member name="T:ScintillaNET.Style.Xml">
            <summary>
            Style constants for use with the <see cref="F:ScintillaNET.Lexer.Xml" /> lexer.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Xml.Default">
            <summary>
            Content style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Xml.Tag">
            <summary>
            Tag style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Xml.TagUnknown">
            <summary>
            Unknown tag style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Xml.Attribute">
            <summary>
            Attribute style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Xml.AttributeUnknown">
            <summary>
            Unknown attribute style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Xml.Number">
            <summary>
            Number style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Xml.DoubleString">
            <summary>
            Double-quoted string style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Xml.SingleString">
            <summary>
            Single-quoted string style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Xml.Other">
            <summary>
            Other tag content (not elements or attributes) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Xml.Comment">
            <summary>
            Comment style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Xml.Entity">
            <summary>
            Entity ($nnn;) name style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Xml.TagEnd">
            <summary>
            End-tag style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Xml.XmlStart">
            <summary>
            Start of XML declaration (&lt;?xml&gt;) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Xml.XmlEnd">
            <summary>
            End of XML declaration (?&gt;) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Xml.Script">
            <summary>
            Script tag (&lt;script&gt;) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Xml.Asp">
            <summary>
            ASP-like script engine block (&lt;%) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Xml.AspAt">
            <summary>
            ASP-like language declaration (&lt;%@) style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Xml.CData">
            <summary>
            CDATA section style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Xml.Question">
            <summary>
            Question mark style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Xml.Value">
            <summary>
            Value style index.
            </summary>
        </member>
        <member name="F:ScintillaNET.Style.Xml.XcComment">
            <summary>
            Script engine comment (&lt;%--) style index.
            </summary>
        </member>
        <member name="T:ScintillaNET.StyleCase">
            <summary>
            The possible casing styles of a style.
            </summary>
        </member>
        <member name="F:ScintillaNET.StyleCase.Mixed">
            <summary>
            Display the text normally.
            </summary>
        </member>
        <member name="F:ScintillaNET.StyleCase.Upper">
            <summary>
            Display the text in upper case.
            </summary>
        </member>
        <member name="F:ScintillaNET.StyleCase.Lower">
            <summary>
            Display the text in lower case.
            </summary>
        </member>
        <member name="F:ScintillaNET.StyleCase.Camel">
            <summary>
            Display the text in camel case.
            </summary>
        </member>
        <member name="T:ScintillaNET.StyleCollection">
            <summary>
            An immutable collection of style definitions in a <see cref="T:ScintillaNET.Scintilla" /> control.
            </summary>
        </member>
        <member name="M:ScintillaNET.StyleCollection.GetEnumerator">
            <summary>
            Provides an enumerator that iterates through the collection.
            </summary>
            <returns>An object that contains all <see cref="T:ScintillaNET.Style" /> objects within the <see cref="T:ScintillaNET.StyleCollection" />.</returns>
        </member>
        <member name="P:ScintillaNET.StyleCollection.Count">
            <summary>
            Gets the number of styles.
            </summary>
            <returns>The number of styles in the <see cref="T:ScintillaNET.StyleCollection" />.</returns>
        </member>
        <member name="P:ScintillaNET.StyleCollection.Item(System.Int32)">
            <summary>
            Gets a <see cref="T:ScintillaNET.Style" /> object at the specified index.
            </summary>
            <param name="index">The style definition index.</param>
            <returns>An object representing the style definition at the specified <paramref name="index" />.</returns>
            <remarks>Styles 32 through 39 have special significance.</remarks>
        </member>
        <member name="M:ScintillaNET.StyleCollection.#ctor(ScintillaNET.Scintilla)">
            <summary>
            Initializes a new instance of the <see cref="T:ScintillaNET.StyleCollection" /> class.
            </summary>
            <param name="scintilla">The <see cref="T:ScintillaNET.Scintilla" /> control that created this collection.</param>
        </member>
        <member name="T:ScintillaNET.StyleNeededEventArgs">
            <summary>
            Provides data for the <see cref="E:ScintillaNET.Scintilla.StyleNeeded" /> event.
            </summary>
        </member>
        <member name="P:ScintillaNET.StyleNeededEventArgs.Position">
            <summary>
            Gets the document position where styling should end. The <see cref="M:ScintillaNET.Scintilla.GetEndStyled" /> method
            indicates the last position styled correctly and the starting place for where styling should begin.
            </summary>
            <returns>The zero-based position within the document to perform styling up to.</returns>
        </member>
        <member name="M:ScintillaNET.StyleNeededEventArgs.#ctor(ScintillaNET.Scintilla,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ScintillaNET.StyleNeededEventArgs" /> class.
            </summary>
            <param name="scintilla">The <see cref="T:ScintillaNET.Scintilla" /> control that generated this event.</param>
            <param name="bytePosition">The zero-based byte position within the document to stop styling.</param>
        </member>
        <member name="T:ScintillaNET.TabDrawMode">
            <summary>
            Specifies how tab characters are drawn when whitespace is visible.
            </summary>
        </member>
        <member name="F:ScintillaNET.TabDrawMode.LongArrow">
            <summary>
            The default mode of an arrow stretching until the tabstop.
            </summary>
        </member>
        <member name="F:ScintillaNET.TabDrawMode.Strikeout">
            <summary>
            A horizontal line stretching until the tabstop.
            </summary>
        </member>
        <member name="T:ScintillaNET.Technology">
            <summary>
            The rendering technology used in a <see cref="T:ScintillaNET.Scintilla" /> control.
            </summary>
        </member>
        <member name="F:ScintillaNET.Technology.Default">
            <summary>
            Renders text using GDI. This is the default.
            </summary>
        </member>
        <member name="F:ScintillaNET.Technology.DirectWrite">
            <summary>
            Renders text using Direct2D/DirectWrite. Since Direct2D buffers drawing,
            Scintilla's buffering can be turned off with <see cref="P:ScintillaNET.Scintilla.BufferedDraw" />.
            </summary>
        </member>
        <member name="T:ScintillaNET.UpdateChange">
            <summary>
            Specifies the change that triggered a <see cref="E:ScintillaNET.Scintilla.UpdateUI" /> event.
            </summary>
            <remarks>This enumeration has a FlagsAttribute attribute that allows a bitwise combination of its member values.</remarks>
        </member>
        <member name="F:ScintillaNET.UpdateChange.Content">
            <summary>
            Contents, styling or markers have been changed.
            </summary>
        </member>
        <member name="F:ScintillaNET.UpdateChange.Selection">
            <summary>
            Selection has been changed.
            </summary>
        </member>
        <member name="F:ScintillaNET.UpdateChange.VScroll">
            <summary>
            Scrolled vertically.
            </summary>
        </member>
        <member name="F:ScintillaNET.UpdateChange.HScroll">
            <summary>
            Scrolled horizontally.
            </summary>
        </member>
        <member name="T:ScintillaNET.UpdateUIEventArgs">
            <summary>
            Provides data for the <see cref="E:ScintillaNET.Scintilla.UpdateUI" /> event.
            </summary>
        </member>
        <member name="P:ScintillaNET.UpdateUIEventArgs.Change">
            <summary>
            The UI update that occurred.
            </summary>
            <returns>A bitwise combination of <see cref="T:ScintillaNET.UpdateChange" /> values specifying the UI update that occurred.</returns>
        </member>
        <member name="M:ScintillaNET.UpdateUIEventArgs.#ctor(ScintillaNET.UpdateChange)">
            <summary>
            Initializes a new instance of the <see cref="T:ScintillaNET.UpdateUIEventArgs" /> class.
            </summary>
            <param name="change">A bitwise combination of <see cref="T:ScintillaNET.UpdateChange" /> values specifying the reason to update the UI.</param>
        </member>
        <member name="T:ScintillaNET.VirtualSpace">
            <summary>
            Enables virtual space for rectangular selections or in other circumstances or in both.
            </summary>
            <remarks>This enumeration has a FlagsAttribute attribute that allows a bitwise combination of its member values.</remarks>
        </member>
        <member name="F:ScintillaNET.VirtualSpace.None">
            <summary>
            Virtual space is not enabled. This is the default.
            </summary>
        </member>
        <member name="F:ScintillaNET.VirtualSpace.RectangularSelection">
            <summary>
            Virtual space is enabled for rectangular selections.
            </summary>
        </member>
        <member name="F:ScintillaNET.VirtualSpace.UserAccessible">
            <summary>
            Virtual space is user accessible.
            </summary>
        </member>
        <member name="F:ScintillaNET.VirtualSpace.NoWrapLineStart">
            <summary>
            Prevents left arrow movement and selection from wrapping to the previous line.
            </summary>
        </member>
        <member name="T:ScintillaNET.WhitespaceMode">
            <summary>
            Specifies the display mode of whitespace characters.
            </summary>
        </member>
        <member name="F:ScintillaNET.WhitespaceMode.Invisible">
            <summary>
            The normal display mode with whitespace displayed as an empty background color.
            </summary>
        </member>
        <member name="F:ScintillaNET.WhitespaceMode.VisibleAlways">
            <summary>
            Whitespace characters are drawn as dots and arrows.
            </summary>
        </member>
        <member name="F:ScintillaNET.WhitespaceMode.VisibleAfterIndent">
            <summary>
            Whitespace used for indentation is displayed normally but after the first visible character,
            it is shown as dots and arrows.
            </summary>
        </member>
        <member name="F:ScintillaNET.WhitespaceMode.VisibleOnlyIndent">
            <summary>
            Whitespace used for indentation is displayed as dots and arrows.
            </summary>
        </member>
        <member name="T:ScintillaNET.WrapIndentMode">
            <summary>
            Indenting behavior of wrapped sublines.
            </summary>
        </member>
        <member name="F:ScintillaNET.WrapIndentMode.Fixed">
            <summary>
            Wrapped sublines aligned to left of window plus the amount set by <see cref="P:ScintillaNET.Scintilla.WrapStartIndent" />.
            This is the default.
            </summary>
        </member>
        <member name="F:ScintillaNET.WrapIndentMode.Same">
            <summary>
            Wrapped sublines are aligned to first subline indent.
            </summary>
        </member>
        <member name="F:ScintillaNET.WrapIndentMode.Indent">
            <summary>
            Wrapped sublines are aligned to first subline indent plus one more level of indentation.
            </summary>
        </member>
        <member name="T:ScintillaNET.WrapMode">
            <summary>
            The line wrapping strategy.
            </summary>
        </member>
        <member name="F:ScintillaNET.WrapMode.None">
            <summary>
            Line wrapping is disabled. This is the default.
            </summary>
        </member>
        <member name="F:ScintillaNET.WrapMode.Word">
            <summary>
            Lines are wrapped on word or style boundaries.
            </summary>
        </member>
        <member name="F:ScintillaNET.WrapMode.Char">
            <summary>
            Lines are wrapped between any character.
            </summary>
        </member>
        <member name="F:ScintillaNET.WrapMode.Whitespace">
            <summary>
            Lines are wrapped on whitespace.
            </summary>
        </member>
        <member name="T:ScintillaNET.WrapVisualFlagLocation">
            <summary>
            Additional location options for line wrapping visual indicators.
            </summary>
        </member>
        <member name="F:ScintillaNET.WrapVisualFlagLocation.Default">
            <summary>
            Wrap indicators are drawn near the border. This is the default.
            </summary>
        </member>
        <member name="F:ScintillaNET.WrapVisualFlagLocation.EndByText">
            <summary>
            Wrap indicators are drawn at the end of sublines near the text.
            </summary>
        </member>
        <member name="F:ScintillaNET.WrapVisualFlagLocation.StartByText">
            <summary>
            Wrap indicators are drawn at the beginning of sublines near the text.
            </summary>
        </member>
        <member name="T:ScintillaNET.WrapVisualFlags">
            <summary>
            The visual indicator used on a wrapped line.
            </summary>
        </member>
        <member name="F:ScintillaNET.WrapVisualFlags.None">
            <summary>
            No visual indicator is displayed. This the default.
            </summary>
        </member>
        <member name="F:ScintillaNET.WrapVisualFlags.End">
            <summary>
            A visual indicator is displayed at th end of a wrapped subline.
            </summary>
        </member>
        <member name="F:ScintillaNET.WrapVisualFlags.Start">
            <summary>
            A visual indicator is displayed at the beginning of a subline.
            The subline is indented by 1 pixel to make room for the display.
            </summary>
        </member>
        <member name="F:ScintillaNET.WrapVisualFlags.Margin">
            <summary>
            A visual indicator is displayed in the number margin.
            </summary>
        </member>
        <member name="T:FlagsEnumTypeConverter.FlagsEnumConverter">
            <summary>
            Flags enumeration type converter.
            </summary>
        </member>
        <member name="T:FlagsEnumTypeConverter.FlagsEnumConverter.EnumFieldDescriptor">
            <summary>
            This class represents an enumeration field in the property grid.
            </summary>
        </member>
        <member name="F:FlagsEnumTypeConverter.FlagsEnumConverter.EnumFieldDescriptor.fContext">
            <summary>
            Stores the context which the enumeration field descriptor was created in.
            </summary>
        </member>
        <member name="M:FlagsEnumTypeConverter.FlagsEnumConverter.EnumFieldDescriptor.#ctor(System.Type,System.String,System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Creates an instance of the enumeration field descriptor class.
            </summary>
            <param name="componentType">The type of the enumeration.</param>
            <param name="name">The name of the enumeration field.</param>
            <param name="context">The current context.</param>
        </member>
        <member name="M:FlagsEnumTypeConverter.FlagsEnumConverter.EnumFieldDescriptor.GetValue(System.Object)">
            <summary>
            Retrieves the value of the enumeration field.
            </summary>
            <param name="component">
            The instance of the enumeration type which to retrieve the field value for.
            </param>
            <returns>
            True if the enumeration field is included to the enumeration; 
            otherwise, False.
            </returns>
        </member>
        <member name="M:FlagsEnumTypeConverter.FlagsEnumConverter.EnumFieldDescriptor.SetValue(System.Object,System.Object)">
            <summary>
            Sets the value of the enumeration field.
            </summary>
            <param name="component">
            The instance of the enumeration type which to set the field value to.
            </param>
            <param name="value">
            True if the enumeration field should included to the enumeration; 
            otherwise, False.
            </param>
        </member>
        <member name="M:FlagsEnumTypeConverter.FlagsEnumConverter.EnumFieldDescriptor.ShouldSerializeValue(System.Object)">
            <summary>
            Retrieves a value indicating whether the enumeration 
            field is set to a non-default value.
            </summary>
        </member>
        <member name="M:FlagsEnumTypeConverter.FlagsEnumConverter.EnumFieldDescriptor.ResetValue(System.Object)">
            <summary>
            Resets the enumeration field to its default value.
            </summary>
        </member>
        <member name="M:FlagsEnumTypeConverter.FlagsEnumConverter.EnumFieldDescriptor.CanResetValue(System.Object)">
            <summary>
            Retrieves a value indicating whether the enumeration 
            field can be reset to the default value.
            </summary>
        </member>
        <member name="M:FlagsEnumTypeConverter.FlagsEnumConverter.EnumFieldDescriptor.GetDefaultValue">
            <summary>
            Retrieves the enumerations field�s default value.
            </summary>
        </member>
        <member name="M:FlagsEnumTypeConverter.FlagsEnumConverter.#ctor(System.Type)">
            <summary>
            Creates an instance of the FlagsEnumConverter class.
            </summary>
            <param name="type">The type of the enumeration.</param>
        </member>
        <member name="M:FlagsEnumTypeConverter.FlagsEnumConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            Retrieves the property descriptors for the enumeration fields. 
            These property descriptors will be used by the property grid 
            to show separate enumeration fields.
            </summary>
            <param name="context">The current context.</param>
            <param name="value">A value of an enumeration type.</param>
        </member>
    </members>
</doc>
