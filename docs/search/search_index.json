{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to DISMTools The free and open-source GUI for DISM operations. NOTE: this documentation is not complete and is subject to change. Check out the entries on the side panel for more information.","title":"Home"},{"location":"#welcome-to-dismtools","text":"The free and open-source GUI for DISM operations. NOTE: this documentation is not complete and is subject to change. Check out the entries on the side panel for more information.","title":"Welcome to DISMTools"},{"location":"getting_started/msmg_migration/","text":"Coming from MSMG Toolkit MSMG Toolkit is a free and open-source UI for DISM operations, which lets you integrate packages, manage features, and more. If you are coming from this utility to DISMTools, here are some changes: User interfaces MSMG Toolkit is a terminal user interface (TUI) front-end with menus that you can operate by pressing a keyboard button. This is still intuitive, but not as much as a graphical user interface (GUI) front-end; which DISMTools and other UIs are. Operations With MSMG Toolkit, you have to copy the files from a Windows Setup disc to the ISO folder of the Toolkit launch directory and specify a Windows image to customize. With DISMTools, however, you don't have to. You only have to copy the Windows image you want from the sources directory of the Windows Setup disc to any location, create a project, and mount the image to it. If you've loaded a Windows image into MSMG Toolkit and closed it, the program will unmount it. If you force the closure of the program and launch it again, it will remove EVERY file from the Windows image, making it invalid and unrepairable . This can be done because the Toolkit is launched as TrustedInstaller by default. You don't need to worry about that with DISMTools. After mounting an image to a project, it will stay there, even if you close the program; until you want to unmount it. Also, the program will leave the mounted images alone when starting up, apart from reloading their servicing sessions if the images need a remount. With MSMG Toolkit, you can only manage Windows images. However, with DISMTools, you can manage Windows images and (active) installations.","title":"Coming from MSMG Toolkit"},{"location":"getting_started/msmg_migration/#coming-from-msmg-toolkit","text":"MSMG Toolkit is a free and open-source UI for DISM operations, which lets you integrate packages, manage features, and more. If you are coming from this utility to DISMTools, here are some changes:","title":"Coming from MSMG Toolkit"},{"location":"getting_started/msmg_migration/#user-interfaces","text":"MSMG Toolkit is a terminal user interface (TUI) front-end with menus that you can operate by pressing a keyboard button. This is still intuitive, but not as much as a graphical user interface (GUI) front-end; which DISMTools and other UIs are.","title":"User interfaces"},{"location":"getting_started/msmg_migration/#operations","text":"With MSMG Toolkit, you have to copy the files from a Windows Setup disc to the ISO folder of the Toolkit launch directory and specify a Windows image to customize. With DISMTools, however, you don't have to. You only have to copy the Windows image you want from the sources directory of the Windows Setup disc to any location, create a project, and mount the image to it. If you've loaded a Windows image into MSMG Toolkit and closed it, the program will unmount it. If you force the closure of the program and launch it again, it will remove EVERY file from the Windows image, making it invalid and unrepairable . This can be done because the Toolkit is launched as TrustedInstaller by default. You don't need to worry about that with DISMTools. After mounting an image to a project, it will stay there, even if you close the program; until you want to unmount it. Also, the program will leave the mounted images alone when starting up, apart from reloading their servicing sessions if the images need a remount. With MSMG Toolkit, you can only manage Windows images. However, with DISMTools, you can manage Windows images and (active) installations.","title":"Operations"},{"location":"getting_started/new_to_servicing/","text":"Getting started with Windows servicing Context In 2007, Microsoft introduced Windows Vista, which would make lots of changes to the way it would be deployed to systems. The Windows Imaging format (WIM for short) made installation and management faster and easier, since WIM files would contain an entire Windows installation; as opposed to the old method of copying files from installation media. With Windows Vista, Microsoft also introduced the Automated Installation Kit (AIK), which contains the deployment tools necessary for that operating system. Tools, such as ImageX (deploys images), Package Manager (deploys packages), IntlCfg (configures regional settings) or more; were included with this kit. However, Microsoft wanted to create a solution that would streamline the deployment process. Their answer was the Deployment Image Servicing and Management (DISM) tool, which does every action performed by the aforementioned utilities in a single command-line program. DISM was released alongside Windows 7, and has been improved since; with the addition of the API and PowerShell cmdlets and more. Nowadays, if you want to manage Windows images, DISM is one tool to master. Interfaces A couple of DISM graphical user interfaces have been developed to simplify tasks with DISM. The most well-known tool is NTLite , which allows you to integrate packages, features and updates; and allows for unattended installations. Open-source alternatives are also available, such as: MSMG Toolkit DISM GUI DISM++ And, since you're browsing this site, DISMTools is another new alternative. If you want to try it out, or you're moving your workflow to this program, follow the \"Coming from...\" links in the Getting started section. Useful resources DISM command-line help","title":"Getting started with Windows servicing"},{"location":"getting_started/new_to_servicing/#getting-started-with-windows-servicing","text":"","title":"Getting started with Windows servicing"},{"location":"getting_started/new_to_servicing/#context","text":"In 2007, Microsoft introduced Windows Vista, which would make lots of changes to the way it would be deployed to systems. The Windows Imaging format (WIM for short) made installation and management faster and easier, since WIM files would contain an entire Windows installation; as opposed to the old method of copying files from installation media. With Windows Vista, Microsoft also introduced the Automated Installation Kit (AIK), which contains the deployment tools necessary for that operating system. Tools, such as ImageX (deploys images), Package Manager (deploys packages), IntlCfg (configures regional settings) or more; were included with this kit. However, Microsoft wanted to create a solution that would streamline the deployment process. Their answer was the Deployment Image Servicing and Management (DISM) tool, which does every action performed by the aforementioned utilities in a single command-line program. DISM was released alongside Windows 7, and has been improved since; with the addition of the API and PowerShell cmdlets and more. Nowadays, if you want to manage Windows images, DISM is one tool to master.","title":"Context"},{"location":"getting_started/new_to_servicing/#interfaces","text":"A couple of DISM graphical user interfaces have been developed to simplify tasks with DISM. The most well-known tool is NTLite , which allows you to integrate packages, features and updates; and allows for unattended installations. Open-source alternatives are also available, such as: MSMG Toolkit DISM GUI DISM++ And, since you're browsing this site, DISMTools is another new alternative. If you want to try it out, or you're moving your workflow to this program, follow the \"Coming from...\" links in the Getting started section.","title":"Interfaces"},{"location":"getting_started/new_to_servicing/#useful-resources","text":"DISM command-line help","title":"Useful resources"},{"location":"getting_started/ntlite_migration/","text":"Coming from NTLite","title":"Coming from NTLite"},{"location":"getting_started/ntlite_migration/#coming-from-ntlite","text":"","title":"Coming from NTLite"},{"location":"getting_started/start/","text":"Getting started If you don't know anything about Windows servicing, or come from other servicing tools, click on a section below to know what's different in this utility: Getting started with Windows servicing I come from other tools Coming from NTLite Coming from MSMG Toolkit If you want to know about something else, keep on reading. First steps After installation has completed, you may run the program. The following steps are recommended to be done in order to get started Creating your first project With the program up and running, you'll begin by creating a project . Use the first link in the main screen, or go to File -> New project... You'll see the following screen, in which you need to provide a name and a location. After providing data on both fields, click OK. The project will be created and you'll be at the project screen. To load this project later, go to \"Open an existing project...\" and specify the project location. NOTE: in the future, a Recents list will be implemented Loading a Windows image The first thing you need to do after creating a project is to load an image to it. There are 2 ways to do this: Mounting a Windows image To mount a Windows image, either click the \"Mount image...\" button, or click the link in the left panel. You'll see this screen: Specify the source image file you want to mount and the path you want to mount the image to. You can also configure more settings from this dialog, if you wish. Follow the image mount guide for more information. INFO: the easiest way of getting a Windows image is by extracting the sources\\install.wim file from Windows installation media. This can be easily done by mounting the ISO in the File Explorer or by using 3rd party tools, like 7-Zip. Once you're done, click OK and wait for the image to be mounted. Finally, you have finished! Loading an already existing mount directory Since DISMTools 0.2, the program lets you load a mount directory and use it in your project if you've already mounted a Windows image to it. To do this, switch to the \"Image\" tab on the left and click the link on the bottom. Next, specify the mount directory and click OK. That's it! To look for available mounted images, use the mounted image manager . NOTE: since version 0.3.2, the aforementioned link will open a popup mounted image picker, instead of a folder browser, that makes this process easier. Simply select a mounted image from the list and click OK: Best practices When creating a project and/or managing Windows images, consider these best practices: Project paths Store your project on a location whose length is not greater than the MAX_PATH path length limitation (260 characters) A great place to store your project on would be at the root of your preferred drive, or in a folder 1 level deep. Such examples would be: D:\\ or E:\\Projects\\ You can disable this limitation if you're using Windows 10, version 1607 or later, by following these guides DISM operations An antivirus program may prevent you from doing an image task, so it's recommended to set an exclusion to the mount path of the image It's not recommended to mount more than 20 images at the same time, as it can cause significant performance degradation You must run this program and, at any time, DISM as an administrator, no matter what privileges you may have If you have mounted the image with write privileges enabled, it's best to commit your changes often. That way, if the image becomes corrupt, it's easier to recover it It's not recommended to store files on network shares, as it can be faster to perform most operations if the files are copied to a local disk Servicing from Windows PE If you plan on servicing images from a Windows Preinstallation Environment (WinPE), consider these requirements while planning your strategy: Booting Windows PE from a local disk: you can allocate additional memory to your Windows PE installation when booting it from a local disk, to increase performance; and you can create temporary folders to store large updates Booting Windows PE from read-only media: if you plan on booting the Windows PE installation from optical media, ensure that your computer has enough memory Add a page file to your PE installation: to improve memory management, consider creating a page file. See the wpeutil command reference for more information Specify a scratch directory: for some operations, like adding packages, it is best to create and specify a scratch directory to store temporary files on. If not specified, Windows PE creates a scratch directory of the size you specified when setting the scratch space . However, you may run out of space on your PE environment","title":"Getting started"},{"location":"getting_started/start/#getting-started","text":"If you don't know anything about Windows servicing, or come from other servicing tools, click on a section below to know what's different in this utility: Getting started with Windows servicing I come from other tools Coming from NTLite Coming from MSMG Toolkit If you want to know about something else, keep on reading.","title":"Getting started"},{"location":"getting_started/start/#first-steps","text":"After installation has completed, you may run the program. The following steps are recommended to be done in order to get started","title":"First steps"},{"location":"getting_started/start/#creating-your-first-project","text":"With the program up and running, you'll begin by creating a project . Use the first link in the main screen, or go to File -> New project... You'll see the following screen, in which you need to provide a name and a location. After providing data on both fields, click OK. The project will be created and you'll be at the project screen. To load this project later, go to \"Open an existing project...\" and specify the project location. NOTE: in the future, a Recents list will be implemented","title":"Creating your first project"},{"location":"getting_started/start/#loading-a-windows-image","text":"The first thing you need to do after creating a project is to load an image to it. There are 2 ways to do this:","title":"Loading a Windows image"},{"location":"getting_started/start/#mounting-a-windows-image","text":"To mount a Windows image, either click the \"Mount image...\" button, or click the link in the left panel. You'll see this screen: Specify the source image file you want to mount and the path you want to mount the image to. You can also configure more settings from this dialog, if you wish. Follow the image mount guide for more information. INFO: the easiest way of getting a Windows image is by extracting the sources\\install.wim file from Windows installation media. This can be easily done by mounting the ISO in the File Explorer or by using 3rd party tools, like 7-Zip. Once you're done, click OK and wait for the image to be mounted. Finally, you have finished!","title":"Mounting a Windows image"},{"location":"getting_started/start/#loading-an-already-existing-mount-directory","text":"Since DISMTools 0.2, the program lets you load a mount directory and use it in your project if you've already mounted a Windows image to it. To do this, switch to the \"Image\" tab on the left and click the link on the bottom. Next, specify the mount directory and click OK. That's it! To look for available mounted images, use the mounted image manager . NOTE: since version 0.3.2, the aforementioned link will open a popup mounted image picker, instead of a folder browser, that makes this process easier. Simply select a mounted image from the list and click OK:","title":"Loading an already existing mount directory"},{"location":"getting_started/start/#best-practices","text":"When creating a project and/or managing Windows images, consider these best practices:","title":"Best practices"},{"location":"getting_started/start/#project-paths","text":"Store your project on a location whose length is not greater than the MAX_PATH path length limitation (260 characters) A great place to store your project on would be at the root of your preferred drive, or in a folder 1 level deep. Such examples would be: D:\\ or E:\\Projects\\ You can disable this limitation if you're using Windows 10, version 1607 or later, by following these guides","title":"Project paths"},{"location":"getting_started/start/#dism-operations","text":"An antivirus program may prevent you from doing an image task, so it's recommended to set an exclusion to the mount path of the image It's not recommended to mount more than 20 images at the same time, as it can cause significant performance degradation You must run this program and, at any time, DISM as an administrator, no matter what privileges you may have If you have mounted the image with write privileges enabled, it's best to commit your changes often. That way, if the image becomes corrupt, it's easier to recover it It's not recommended to store files on network shares, as it can be faster to perform most operations if the files are copied to a local disk","title":"DISM operations"},{"location":"getting_started/start/#servicing-from-windows-pe","text":"If you plan on servicing images from a Windows Preinstallation Environment (WinPE), consider these requirements while planning your strategy: Booting Windows PE from a local disk: you can allocate additional memory to your Windows PE installation when booting it from a local disk, to increase performance; and you can create temporary folders to store large updates Booting Windows PE from read-only media: if you plan on booting the Windows PE installation from optical media, ensure that your computer has enough memory Add a page file to your PE installation: to improve memory management, consider creating a page file. See the wpeutil command reference for more information Specify a scratch directory: for some operations, like adding packages, it is best to create and specify a scratch directory to store temporary files on. If not specified, Windows PE creates a scratch directory of the size you specified when setting the scratch space . However, you may run out of space on your PE environment","title":"Servicing from Windows PE"},{"location":"img_tasks/img_tasks/","text":"Image tasks With DISMTools you can perform a variety of tasks, which are organized depending on what action they perform to an image. Where do I find the tasks? Every task can be accessed from the \"Commands\" menu. You also have access to the most essential tasks in the center of the screen. Do note that these options become accessible when you create a project and mount an image to it. To do those actions, follow the Getting started guide for more information. Available tasks Image management Applying Windows images Capturing Windows images Performing image cleanup Package management Adding packages Removing packages Feature management Enabling features Disabling features AppX package management AppX package documentation Adding AppX packages Removing AppX packages Capability management Adding capabilities Removing capabilities Driver management Adding drivers Removing drivers","title":"Overview"},{"location":"img_tasks/img_tasks/#image-tasks","text":"With DISMTools you can perform a variety of tasks, which are organized depending on what action they perform to an image.","title":"Image tasks"},{"location":"img_tasks/img_tasks/#where-do-i-find-the-tasks","text":"Every task can be accessed from the \"Commands\" menu. You also have access to the most essential tasks in the center of the screen. Do note that these options become accessible when you create a project and mount an image to it. To do those actions, follow the Getting started guide for more information.","title":"Where do I find the tasks?"},{"location":"img_tasks/img_tasks/#available-tasks","text":"Image management Applying Windows images Capturing Windows images Performing image cleanup Package management Adding packages Removing packages Feature management Enabling features Disabling features AppX package management AppX package documentation Adding AppX packages Removing AppX packages Capability management Adding capabilities Removing capabilities Driver management Adding drivers Removing drivers","title":"Available tasks"},{"location":"img_tasks/offline_inst_mgmt/","text":"Offline installation management mode DISMTools 0.4 lets you manage installations in any partition (referred to as an \"offline installation\") using the same interface you are used to when managing standard projects and Windows images. Accessing this mode You can access this mode in 2 ways: by clicking \"Manage offline installation\" in the home screen or in the File menu. Then, you have to choose the disk containing the Windows installation you want to manage: Unsupported drives You can't perform management of an installation on a drive if it meets at least one criterion out of the following: The drive contains an installation of Windows Vista or an earlier version of Windows The drive containing the installation is not formatted as NTFS The drive containing the installation is mounted as a removable medium The drive containing the installation is mounted with read-only privileges Differences with standard project management There are some differences between managing an offline installation and a standard project, which will be mentioned below: You can't save in the offline installation management mode, because all commit operations are disabled","title":"Offline installation management mode"},{"location":"img_tasks/offline_inst_mgmt/#offline-installation-management-mode","text":"DISMTools 0.4 lets you manage installations in any partition (referred to as an \"offline installation\") using the same interface you are used to when managing standard projects and Windows images.","title":"Offline installation management mode"},{"location":"img_tasks/offline_inst_mgmt/#accessing-this-mode","text":"You can access this mode in 2 ways: by clicking \"Manage offline installation\" in the home screen or in the File menu. Then, you have to choose the disk containing the Windows installation you want to manage:","title":"Accessing this mode"},{"location":"img_tasks/offline_inst_mgmt/#unsupported-drives","text":"You can't perform management of an installation on a drive if it meets at least one criterion out of the following: The drive contains an installation of Windows Vista or an earlier version of Windows The drive containing the installation is not formatted as NTFS The drive containing the installation is mounted as a removable medium The drive containing the installation is mounted with read-only privileges","title":"Unsupported drives"},{"location":"img_tasks/offline_inst_mgmt/#differences-with-standard-project-management","text":"There are some differences between managing an offline installation and a standard project, which will be mentioned below: You can't save in the offline installation management mode, because all commit operations are disabled","title":"Differences with standard project management"},{"location":"img_tasks/online_inst_mgmt/","text":"Online installation management mode DISMTools 0.3 and later let you manage your active installation (referred to as an \"online installation\") using the same interface you are used to when managing standard projects and Windows images. Accessing this mode You can access this mode in 2 ways: by clicking \"Manage online installation\" in the home screen or in the File menu. You'll then be presented by this warning explaining you the risks of managing an active installation: Differences with standard project management There are some differences between managing an online installation and a standard project, which will be mentioned below: You can't save in the online installation management mode, because all commit operations are disabled You will only be able to perform the actions your OS supports Risks of online installation management NOTE: read this section only if the aforementioned warning didn't make it clear. Before managing your active installation, you must take some risks into account: We recommend backing up your system in case something goes wrong with the management process Don't act carelessly . This is your system, after all, with your files and settings; so performing a bad management action can break it, up to the point of making it unbootable And, most importantly: WE ARE NOT RESPONSIBLE FOR ANY DAMAGE DONE TO YOUR SYSTEM","title":"Online installation management mode"},{"location":"img_tasks/online_inst_mgmt/#online-installation-management-mode","text":"DISMTools 0.3 and later let you manage your active installation (referred to as an \"online installation\") using the same interface you are used to when managing standard projects and Windows images.","title":"Online installation management mode"},{"location":"img_tasks/online_inst_mgmt/#accessing-this-mode","text":"You can access this mode in 2 ways: by clicking \"Manage online installation\" in the home screen or in the File menu. You'll then be presented by this warning explaining you the risks of managing an active installation:","title":"Accessing this mode"},{"location":"img_tasks/online_inst_mgmt/#differences-with-standard-project-management","text":"There are some differences between managing an online installation and a standard project, which will be mentioned below: You can't save in the online installation management mode, because all commit operations are disabled You will only be able to perform the actions your OS supports","title":"Differences with standard project management"},{"location":"img_tasks/online_inst_mgmt/#risks-of-online-installation-management","text":"NOTE: read this section only if the aforementioned warning didn't make it clear. Before managing your active installation, you must take some risks into account: We recommend backing up your system in case something goes wrong with the management process Don't act carelessly . This is your system, after all, with your files and settings; so performing a bad management action can break it, up to the point of making it unbootable And, most importantly: WE ARE NOT RESPONSIBLE FOR ANY DAMAGE DONE TO YOUR SYSTEM","title":"Risks of online installation management"},{"location":"img_tasks/appx/add_provisionedappxpackage/","text":"Adding provisioned AppX packages With DISMTools you can add provisioned AppX packages using an intuitive UI. This action can be accessed by clicking Commands > App packages > Add provisioned app package... Target OS support This action is supported on the following platforms: Platform Supported? Windows 7/Server 2008 R2 \u274c Windows 8/Server 2012 \u2714 Windows 8.1/Server 2012 R2 \u2714 Windows 10/Server 2016/2019/2022 \u2714 Windows 11/Server vNext \u2714 NOTE: if you are adding provisioned AppX packages to an online installation, you may need to enable sideloading of applications. Otherwise, you may get error code 0xc1570113 . More information can be found here . You may also need to properly register the application to the operating system for it to fully work, a guide for which is explained later in this page. This action is supported on DISMTools 0.2 and newer Usage Add any application file you want to add to a Windows image, which can be in the .appx , .msix , .appxbundle or .msixbundle format, to the AppX package list . This can be done by using the buttons on the bottom of the dialog, or by dropping them from an elevated application. If an application contains dependencies, be sure to add these to the AppX dependency list , by using the buttons below or by dropping them from an elevated application App Installer support DISMTools 0.3.2 expands the AppX addition capabilities by supporting App Installer files. Simply specify an .appinstaller file or drop it in the package addition list view, and let the program deal with it. You can learn more about App Installer files here . Options A license file may be required for an application to be installed, which you can specify in the license file text box. Otherwise, select \"Skip license\" If you want, you can provide a custom data file If you want to provision applications in some regions, specify them, separated by a semi-colon (;); following the ISO 3166-1 Alpha 2 or Alpha 3 codes NOTE: specifying a region requires DISM for Windows 10 and/or a Windows 10 or later image. If you want, you can commit the image after adding the selected AppX packages . Questions Q: Where can I download app packages? A: You can make use of the Microsoft Store Generation Project and the web version of the Microsoft Store . Follow these steps: Load the Microsoft Apps website and search for the application you are looking for Once you've found your desired application, copy its link . It will be useful for the generation project Load the generation project website and paste the link you've copied If the server returns results, download the desired version of the AppX package and its dependencies If your browser complains about the safety of the files, confirm you want to download them. Q: I've installed an application on an online installation using this method, but the application doesn't work. Why? A: This may occur because the application is not fully registered. To do this, you need to make use of the registry and PowerShell: Open the Registry Editor, go to HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Appx\\AppxAllUserStore\\Applications and grab the name of the application you want to register Next, open PowerShell as an administrator and type the following: Get-ItemPropertyValue -Path 'HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Appx\\AppxAllUserStore\\Applications\\*<PackageName>*\\' -Name \"Path\" | Add-AppxPackage -DisableDevelopmentMode -Register (where *<PackageName>* is the name of the package you want to register) If the command complains about %SYSTEMDRIVE% being in the Path value, replace it with the drive you've booted to, like this: (Get-ItemPropertyValue -Path 'HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Appx\\AppxAllUserStore\\Applications\\*<PackageName>*\\' -Name \"Path\").Replace('%SYSTEMDRIVE%', 'C:').Trim() | Add-AppxPackage -DisableDevelopmentMode -Register (obviously, replace \"C:\" with your boot drive) If the command complains about a missing dependency, download it, then add it using DISM, then use the same procedure The application should be fully registered now. Do note that the application will still not work if you are logged into the built-in Administrator account. In that case, you need to create a new user. Related topics Command-line help","title":"Adding AppX packages"},{"location":"img_tasks/appx/add_provisionedappxpackage/#adding-provisioned-appx-packages","text":"With DISMTools you can add provisioned AppX packages using an intuitive UI. This action can be accessed by clicking Commands > App packages > Add provisioned app package...","title":"Adding provisioned AppX packages"},{"location":"img_tasks/appx/add_provisionedappxpackage/#target-os-support","text":"This action is supported on the following platforms: Platform Supported? Windows 7/Server 2008 R2 \u274c Windows 8/Server 2012 \u2714 Windows 8.1/Server 2012 R2 \u2714 Windows 10/Server 2016/2019/2022 \u2714 Windows 11/Server vNext \u2714 NOTE: if you are adding provisioned AppX packages to an online installation, you may need to enable sideloading of applications. Otherwise, you may get error code 0xc1570113 . More information can be found here . You may also need to properly register the application to the operating system for it to fully work, a guide for which is explained later in this page. This action is supported on DISMTools 0.2 and newer","title":"Target OS support"},{"location":"img_tasks/appx/add_provisionedappxpackage/#usage","text":"Add any application file you want to add to a Windows image, which can be in the .appx , .msix , .appxbundle or .msixbundle format, to the AppX package list . This can be done by using the buttons on the bottom of the dialog, or by dropping them from an elevated application. If an application contains dependencies, be sure to add these to the AppX dependency list , by using the buttons below or by dropping them from an elevated application","title":"Usage"},{"location":"img_tasks/appx/add_provisionedappxpackage/#app-installer-support","text":"DISMTools 0.3.2 expands the AppX addition capabilities by supporting App Installer files. Simply specify an .appinstaller file or drop it in the package addition list view, and let the program deal with it. You can learn more about App Installer files here .","title":"App Installer support"},{"location":"img_tasks/appx/add_provisionedappxpackage/#options","text":"A license file may be required for an application to be installed, which you can specify in the license file text box. Otherwise, select \"Skip license\" If you want, you can provide a custom data file If you want to provision applications in some regions, specify them, separated by a semi-colon (;); following the ISO 3166-1 Alpha 2 or Alpha 3 codes NOTE: specifying a region requires DISM for Windows 10 and/or a Windows 10 or later image. If you want, you can commit the image after adding the selected AppX packages .","title":"Options"},{"location":"img_tasks/appx/add_provisionedappxpackage/#questions","text":"Q: Where can I download app packages? A: You can make use of the Microsoft Store Generation Project and the web version of the Microsoft Store . Follow these steps: Load the Microsoft Apps website and search for the application you are looking for Once you've found your desired application, copy its link . It will be useful for the generation project Load the generation project website and paste the link you've copied If the server returns results, download the desired version of the AppX package and its dependencies If your browser complains about the safety of the files, confirm you want to download them. Q: I've installed an application on an online installation using this method, but the application doesn't work. Why? A: This may occur because the application is not fully registered. To do this, you need to make use of the registry and PowerShell: Open the Registry Editor, go to HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Appx\\AppxAllUserStore\\Applications and grab the name of the application you want to register Next, open PowerShell as an administrator and type the following: Get-ItemPropertyValue -Path 'HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Appx\\AppxAllUserStore\\Applications\\*<PackageName>*\\' -Name \"Path\" | Add-AppxPackage -DisableDevelopmentMode -Register (where *<PackageName>* is the name of the package you want to register) If the command complains about %SYSTEMDRIVE% being in the Path value, replace it with the drive you've booted to, like this: (Get-ItemPropertyValue -Path 'HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Appx\\AppxAllUserStore\\Applications\\*<PackageName>*\\' -Name \"Path\").Replace('%SYSTEMDRIVE%', 'C:').Trim() | Add-AppxPackage -DisableDevelopmentMode -Register (obviously, replace \"C:\" with your boot drive) If the command complains about a missing dependency, download it, then add it using DISM, then use the same procedure The application should be fully registered now. Do note that the application will still not work if you are logged into the built-in Administrator account. In that case, you need to create a new user.","title":"Questions"},{"location":"img_tasks/appx/add_provisionedappxpackage/#related-topics","text":"Command-line help","title":"Related topics"},{"location":"img_tasks/appx/appx/","text":"Overview of AppX packages With Windows 8 , Microsoft introduced a new kind of applications, Metro-style apps, that work with the operating system's new interface and design guidelines. These apps are packed in the AppX format, and can be deployed with DISM or with the PowerShell cmdlets provided by the Appx module. DISMTools 0.2 introduced AppX package servicing, which allows you to add and remove these applications to and/or from Windows images and/or online installations. Inside an AppX package NOTE: this information is based on how applications are packed in the MSIX format, but this also applies to AppX packages. An overview of the MSIX packaging format can be accessed here . However, this information focuses on more technical things about these packages This is the overall structure of an AppX package: Source: Microsoft However, the placement of some files varies depending on the format of the application: .appx and .msix packages contain the manifest on the root of the package, as AppxManifest.xml .appxbundle and .msixbundle packages store the manifest as AppxBundleManifest.xml , under the AppxMetadata directory We are interested in the manifest file because it provides information about the application : its name, its publisher info, its version and, most importantly, its dependencies. NOTE: if you've ever stumbled upon an .eappx or .emsix package, these cannot be opened or deployed through DISM , and need to be deployed using the Add-AppxPackage cmdlet Let's look at a manifest file. This is the manifest file of Rayman Jungle Run : If you can't read the selected text, here it is in code view: <Identity Name=\"UbisoftEntertainment.RaymanJungleRun\" Publisher=\"CN=C6D89DF1-FB66-4AAD-9100-AD9BE1186BE1\" Version=\"1.2.0.88\" ProcessorArchitecture=\"x86\" /> This is the information you'll see when adding AppX packages with DISMTools: The aforementioned line of XML code can be located on line 3 of the manifest, or on line 10 if a comment begins on line 3. Now, how can DISMTools detect the store logo asset ? By using the manifest file. Shortly after the XML code mentioned, a <Properties> tag begins, which contains information about the package display name (or how it will be shown on the start menu), the display name of the publisher , and the location of the store logo asset . Based on the last property, DISMTools goes through the AppX package and extracts the store logo asset, if it can. Otherwise, it will show a generic icon. The location of the store logo asset also varies depending on the format of the application. In .appxbundle and .msixbundle packages, it is stored in another AppX package inside its parent package, in which the store logo asset can be extracted from the same location. With the store logo asset on hand, DISMTools copies it to a store logo asset cache, so that it doesn't extract the asset again if it exists in the cache. App Installer files At some point you may run into this type of package and wonder what it is. App Installer files are XML files that declare the download URL for the main package (which is usually a bundle file). Let's look at them: INFO: you can view the structure of these files in any text editor, like Notepad What we're interested in is the <MainBundle> section, which defines the package name, publisher, version, and the main package download URL. Here is an example: <MainBundle Name=\"Microsoft.WinDbg\" Version=\"1.2306.12001.0\" Publisher=\"CN=Microsoft Corporation, O=Microsoft Corporation, L=Redmond, S=Washington, C=US\" Uri=\"https://windbg.download.prss.microsoft.com/dbazure/prod/1-2306-12001-0/windbg.msixbundle\" /> The Uri property is what matters. DISMTools versions from 0.3.2 onwards read these files, detect a URL, and perform a file download. You can view the reference of App Installer files here . Available tasks This is what you can do with AppX packages in DISMTools: Add provisioned AppX packages Remove provisioned AppX packages","title":"Overview"},{"location":"img_tasks/appx/appx/#overview-of-appx-packages","text":"With Windows 8 , Microsoft introduced a new kind of applications, Metro-style apps, that work with the operating system's new interface and design guidelines. These apps are packed in the AppX format, and can be deployed with DISM or with the PowerShell cmdlets provided by the Appx module. DISMTools 0.2 introduced AppX package servicing, which allows you to add and remove these applications to and/or from Windows images and/or online installations.","title":"Overview of AppX packages"},{"location":"img_tasks/appx/appx/#inside-an-appx-package","text":"NOTE: this information is based on how applications are packed in the MSIX format, but this also applies to AppX packages. An overview of the MSIX packaging format can be accessed here . However, this information focuses on more technical things about these packages This is the overall structure of an AppX package: Source: Microsoft However, the placement of some files varies depending on the format of the application: .appx and .msix packages contain the manifest on the root of the package, as AppxManifest.xml .appxbundle and .msixbundle packages store the manifest as AppxBundleManifest.xml , under the AppxMetadata directory We are interested in the manifest file because it provides information about the application : its name, its publisher info, its version and, most importantly, its dependencies. NOTE: if you've ever stumbled upon an .eappx or .emsix package, these cannot be opened or deployed through DISM , and need to be deployed using the Add-AppxPackage cmdlet Let's look at a manifest file. This is the manifest file of Rayman Jungle Run : If you can't read the selected text, here it is in code view: <Identity Name=\"UbisoftEntertainment.RaymanJungleRun\" Publisher=\"CN=C6D89DF1-FB66-4AAD-9100-AD9BE1186BE1\" Version=\"1.2.0.88\" ProcessorArchitecture=\"x86\" /> This is the information you'll see when adding AppX packages with DISMTools: The aforementioned line of XML code can be located on line 3 of the manifest, or on line 10 if a comment begins on line 3. Now, how can DISMTools detect the store logo asset ? By using the manifest file. Shortly after the XML code mentioned, a <Properties> tag begins, which contains information about the package display name (or how it will be shown on the start menu), the display name of the publisher , and the location of the store logo asset . Based on the last property, DISMTools goes through the AppX package and extracts the store logo asset, if it can. Otherwise, it will show a generic icon. The location of the store logo asset also varies depending on the format of the application. In .appxbundle and .msixbundle packages, it is stored in another AppX package inside its parent package, in which the store logo asset can be extracted from the same location. With the store logo asset on hand, DISMTools copies it to a store logo asset cache, so that it doesn't extract the asset again if it exists in the cache.","title":"Inside an AppX package"},{"location":"img_tasks/appx/appx/#app-installer-files","text":"At some point you may run into this type of package and wonder what it is. App Installer files are XML files that declare the download URL for the main package (which is usually a bundle file). Let's look at them: INFO: you can view the structure of these files in any text editor, like Notepad What we're interested in is the <MainBundle> section, which defines the package name, publisher, version, and the main package download URL. Here is an example: <MainBundle Name=\"Microsoft.WinDbg\" Version=\"1.2306.12001.0\" Publisher=\"CN=Microsoft Corporation, O=Microsoft Corporation, L=Redmond, S=Washington, C=US\" Uri=\"https://windbg.download.prss.microsoft.com/dbazure/prod/1-2306-12001-0/windbg.msixbundle\" /> The Uri property is what matters. DISMTools versions from 0.3.2 onwards read these files, detect a URL, and perform a file download. You can view the reference of App Installer files here .","title":"App Installer files"},{"location":"img_tasks/appx/appx/#available-tasks","text":"This is what you can do with AppX packages in DISMTools: Add provisioned AppX packages Remove provisioned AppX packages","title":"Available tasks"},{"location":"img_tasks/appx/remove_provisionedappxpackage/","text":"Removing provisioned AppX packages With DISMTools you can remove provisioned AppX packages by using a checked list. This action can be accessed by clicking Commands > App packages > Remove provisioning for app package... This action will keep affected applications from being registered to new users, but they will still be registered to existing users. Target OS support This action is supported on the following platforms: Platform Supported? Windows 7/Server 2008 R2 \u274c Windows 8/Server 2012 \u2714 Windows 8.1/Server 2012 R2 \u2714 Windows 10/Server 2016/2019/2022 \u2714 Windows 11/Server vNext \u2714 NOTE: if you are removing AppX packages from a Windows Server Core installation, the Desktop Experience feature needs to be installed. Do not remove the Desktop Experience feature before removing the desired AppX packages. This action is supported on DISMTools 0.2 and newer Usage Simply specify the applications you want to remove provisioning for, and then click OK. Did you know? You can right-click a package in the list to open its directory, or to view its logo assets Full removal of an application To fully remove an application, you need to use PowerShell: Open PowerShell as an administrator Type the following command: Get-AppxPackage -Name <pkgName> | Remove-AppxPackage (where <pkgName> is the name of the desired AppX package to remove) Questions Q: How does the program determine whether an application is registered to a user? A: The program determines the registration status of an application by detecting the amount of .pckgdep files in the <mountPath>\\ProgramData\\Microsoft\\Windows\\AppRepository\\Packages\\<pkgName> folder (where <mountPath> is the mount directory of a Windows image or the local disk of an active installation, and <pkgName> being the name of the application package). You can't access the AppRepository folder in Windows Explorer, but you can access its subdirectories by using 3rd party tools. When accessing this directory, you'll see .pckgdep files whose names begin with S-1-... . This is an SID, or a user account identifier. You can view more information about SIDs here , or detect if you have been assigned a given SID by opening a command prompt window and typing wmic useraccount get name,sid . Related topics Command-line help","title":"Removing AppX packages"},{"location":"img_tasks/appx/remove_provisionedappxpackage/#removing-provisioned-appx-packages","text":"With DISMTools you can remove provisioned AppX packages by using a checked list. This action can be accessed by clicking Commands > App packages > Remove provisioning for app package... This action will keep affected applications from being registered to new users, but they will still be registered to existing users.","title":"Removing provisioned AppX packages"},{"location":"img_tasks/appx/remove_provisionedappxpackage/#target-os-support","text":"This action is supported on the following platforms: Platform Supported? Windows 7/Server 2008 R2 \u274c Windows 8/Server 2012 \u2714 Windows 8.1/Server 2012 R2 \u2714 Windows 10/Server 2016/2019/2022 \u2714 Windows 11/Server vNext \u2714 NOTE: if you are removing AppX packages from a Windows Server Core installation, the Desktop Experience feature needs to be installed. Do not remove the Desktop Experience feature before removing the desired AppX packages. This action is supported on DISMTools 0.2 and newer","title":"Target OS support"},{"location":"img_tasks/appx/remove_provisionedappxpackage/#usage","text":"Simply specify the applications you want to remove provisioning for, and then click OK.","title":"Usage"},{"location":"img_tasks/appx/remove_provisionedappxpackage/#did-you-know","text":"You can right-click a package in the list to open its directory, or to view its logo assets","title":"Did you know?"},{"location":"img_tasks/appx/remove_provisionedappxpackage/#full-removal-of-an-application","text":"To fully remove an application, you need to use PowerShell: Open PowerShell as an administrator Type the following command: Get-AppxPackage -Name <pkgName> | Remove-AppxPackage (where <pkgName> is the name of the desired AppX package to remove)","title":"Full removal of an application"},{"location":"img_tasks/appx/remove_provisionedappxpackage/#questions","text":"Q: How does the program determine whether an application is registered to a user? A: The program determines the registration status of an application by detecting the amount of .pckgdep files in the <mountPath>\\ProgramData\\Microsoft\\Windows\\AppRepository\\Packages\\<pkgName> folder (where <mountPath> is the mount directory of a Windows image or the local disk of an active installation, and <pkgName> being the name of the application package). You can't access the AppRepository folder in Windows Explorer, but you can access its subdirectories by using 3rd party tools. When accessing this directory, you'll see .pckgdep files whose names begin with S-1-... . This is an SID, or a user account identifier. You can view more information about SIDs here , or detect if you have been assigned a given SID by opening a command prompt window and typing wmic useraccount get name,sid .","title":"Questions"},{"location":"img_tasks/appx/remove_provisionedappxpackage/#related-topics","text":"Command-line help","title":"Related topics"},{"location":"img_tasks/capabilities/add_capability/","text":"Adding capabilities With DISMTools you can add capabilities, or Features on Demand (FoDs), to a Windows image or installation. Capabilities are features ready to be added at any time. More on capabilities here . This action can be accessed by clicking Commands > Capabilities > Add capability... Target OS support This action is supported on the following platforms: Platform Supported? Windows 7/Server 2008 R2 \u274c Windows 8/Server 2012 \u274c Windows 8.1/Server 2012 R2 \u274c Windows 10/Server 2016/2019/2022 \u2714 Windows 11/Server vNext \u2714 This action is supported on DISMTools 0.3 and newer Usage You need to specify the capabilities you want to add to your Windows image or installation, and specify some settings in order to get the result you want. Options You can specify a source where you have the necessary files for capability addition. You can browse your file system for an appropriate source, or get the source from group policy If you strictly want this operation to use your specified source and not Windows Update, tick the Windows Update access limit option (online installations only) If you want, you can commit the image after adding the capabilities (Windows images only) Related topics Command-line help","title":"Adding capabilities"},{"location":"img_tasks/capabilities/add_capability/#adding-capabilities","text":"With DISMTools you can add capabilities, or Features on Demand (FoDs), to a Windows image or installation. Capabilities are features ready to be added at any time. More on capabilities here . This action can be accessed by clicking Commands > Capabilities > Add capability...","title":"Adding capabilities"},{"location":"img_tasks/capabilities/add_capability/#target-os-support","text":"This action is supported on the following platforms: Platform Supported? Windows 7/Server 2008 R2 \u274c Windows 8/Server 2012 \u274c Windows 8.1/Server 2012 R2 \u274c Windows 10/Server 2016/2019/2022 \u2714 Windows 11/Server vNext \u2714 This action is supported on DISMTools 0.3 and newer","title":"Target OS support"},{"location":"img_tasks/capabilities/add_capability/#usage","text":"You need to specify the capabilities you want to add to your Windows image or installation, and specify some settings in order to get the result you want.","title":"Usage"},{"location":"img_tasks/capabilities/add_capability/#options","text":"You can specify a source where you have the necessary files for capability addition. You can browse your file system for an appropriate source, or get the source from group policy If you strictly want this operation to use your specified source and not Windows Update, tick the Windows Update access limit option (online installations only) If you want, you can commit the image after adding the capabilities (Windows images only)","title":"Options"},{"location":"img_tasks/capabilities/add_capability/#related-topics","text":"Command-line help","title":"Related topics"},{"location":"img_tasks/capabilities/capabilities/","text":"Image tasks With DISMTools you can perform a variety of tasks, which are organized depending on what action they perform to an image. Where do I find the tasks? Every task can be accessed from the \"Commands\" menu. You also have access to the most essential tasks in the center of the screen. Do note that these options become accessible when you create a project and mount an image to it. To do those actions, follow the Getting started guide for more information. Available tasks Image management Applying Windows images Capturing Windows images Performing image cleanup Package management Adding packages Removing packages Feature management Enabling features Disabling features AppX package management AppX package documentation Adding AppX packages Removing AppX packages Capability management Adding capabilities Removing capabilities Driver management Adding drivers Removing drivers","title":"Image tasks"},{"location":"img_tasks/capabilities/capabilities/#image-tasks","text":"With DISMTools you can perform a variety of tasks, which are organized depending on what action they perform to an image.","title":"Image tasks"},{"location":"img_tasks/capabilities/capabilities/#where-do-i-find-the-tasks","text":"Every task can be accessed from the \"Commands\" menu. You also have access to the most essential tasks in the center of the screen. Do note that these options become accessible when you create a project and mount an image to it. To do those actions, follow the Getting started guide for more information.","title":"Where do I find the tasks?"},{"location":"img_tasks/capabilities/capabilities/#available-tasks","text":"Image management Applying Windows images Capturing Windows images Performing image cleanup Package management Adding packages Removing packages Feature management Enabling features Disabling features AppX package management AppX package documentation Adding AppX packages Removing AppX packages Capability management Adding capabilities Removing capabilities Driver management Adding drivers Removing drivers","title":"Available tasks"},{"location":"img_tasks/capabilities/remove_capability/","text":"Removing capabilities With DISMTools you can remove capabilities, or Features on Demand (FoDs), from a Windows image or installation. This action can be accessed by clicking Commands > Capabilities > Remove capability... Target OS support This action is supported on the following platforms: Platform Supported? Windows 7/Server 2008 R2 \u274c Windows 8/Server 2012 \u274c Windows 8.1/Server 2012 R2 \u274c Windows 10/Server 2016/2019/2022 \u2714 Windows 11/Server vNext \u2714 This action is supported on DISMTools 0.3 and newer Usage You need to specify the capabilities you want to remove from your Windows image or installation. Related topics Command-line help","title":"Removing capabilities"},{"location":"img_tasks/capabilities/remove_capability/#removing-capabilities","text":"With DISMTools you can remove capabilities, or Features on Demand (FoDs), from a Windows image or installation. This action can be accessed by clicking Commands > Capabilities > Remove capability...","title":"Removing capabilities"},{"location":"img_tasks/capabilities/remove_capability/#target-os-support","text":"This action is supported on the following platforms: Platform Supported? Windows 7/Server 2008 R2 \u274c Windows 8/Server 2012 \u274c Windows 8.1/Server 2012 R2 \u274c Windows 10/Server 2016/2019/2022 \u2714 Windows 11/Server vNext \u2714 This action is supported on DISMTools 0.3 and newer","title":"Target OS support"},{"location":"img_tasks/capabilities/remove_capability/#usage","text":"You need to specify the capabilities you want to remove from your Windows image or installation.","title":"Usage"},{"location":"img_tasks/capabilities/remove_capability/#related-topics","text":"Command-line help","title":"Related topics"},{"location":"img_tasks/drivers/add_driver/","text":"Adding drivers With DISMTools you can add third-party drivers to a Windows image. This action can be accessed by clicking Commands > Drivers > Add driver... Target OS support This action is supported on the following platforms: Platform Supported? Windows 7/Server 2008 R2 \u2714 Windows 8/Server 2012 \u2714 Windows 8.1/Server 2012 R2 \u2714 Windows 10/Server 2016/2019/2022 \u2714 Windows 11/Server vNext \u2714 This action is supported on DISMTools 0.3 and newer NOTE: this action is not supported on online installations Usage You need to specify driver packages and/or folders to add to your Windows image by adding or dropping them to the driver files list. Folders get automatically added to the driver folders list, which allows the program to scan the folders you want recursively for driver packages. You may also need to specify some settings in order to get the result you want. Options If you're testing a driver, you can skip the signed driver requirement on x64 systems by forcing the installation of unsigned drivers , though it may cause instability in the resulting image If you want, you can commit the image after adding the drivers Related topics Command-line help","title":"Adding drivers"},{"location":"img_tasks/drivers/add_driver/#adding-drivers","text":"With DISMTools you can add third-party drivers to a Windows image. This action can be accessed by clicking Commands > Drivers > Add driver...","title":"Adding drivers"},{"location":"img_tasks/drivers/add_driver/#target-os-support","text":"This action is supported on the following platforms: Platform Supported? Windows 7/Server 2008 R2 \u2714 Windows 8/Server 2012 \u2714 Windows 8.1/Server 2012 R2 \u2714 Windows 10/Server 2016/2019/2022 \u2714 Windows 11/Server vNext \u2714 This action is supported on DISMTools 0.3 and newer NOTE: this action is not supported on online installations","title":"Target OS support"},{"location":"img_tasks/drivers/add_driver/#usage","text":"You need to specify driver packages and/or folders to add to your Windows image by adding or dropping them to the driver files list. Folders get automatically added to the driver folders list, which allows the program to scan the folders you want recursively for driver packages. You may also need to specify some settings in order to get the result you want.","title":"Usage"},{"location":"img_tasks/drivers/add_driver/#options","text":"If you're testing a driver, you can skip the signed driver requirement on x64 systems by forcing the installation of unsigned drivers , though it may cause instability in the resulting image If you want, you can commit the image after adding the drivers","title":"Options"},{"location":"img_tasks/drivers/add_driver/#related-topics","text":"Command-line help","title":"Related topics"},{"location":"img_tasks/drivers/drivers/","text":"Image tasks With DISMTools you can perform a variety of tasks, which are organized depending on what action they perform to an image. Where do I find the tasks? Every task can be accessed from the \"Commands\" menu. You also have access to the most essential tasks in the center of the screen. Do note that these options become accessible when you create a project and mount an image to it. To do those actions, follow the Getting started guide for more information. Available tasks Image management Applying Windows images Capturing Windows images Performing image cleanup Package management Adding packages Removing packages Feature management Enabling features Disabling features AppX package management AppX package documentation Adding AppX packages Removing AppX packages Capability management Adding capabilities Removing capabilities Driver management Adding drivers Removing drivers","title":"Image tasks"},{"location":"img_tasks/drivers/drivers/#image-tasks","text":"With DISMTools you can perform a variety of tasks, which are organized depending on what action they perform to an image.","title":"Image tasks"},{"location":"img_tasks/drivers/drivers/#where-do-i-find-the-tasks","text":"Every task can be accessed from the \"Commands\" menu. You also have access to the most essential tasks in the center of the screen. Do note that these options become accessible when you create a project and mount an image to it. To do those actions, follow the Getting started guide for more information.","title":"Where do I find the tasks?"},{"location":"img_tasks/drivers/drivers/#available-tasks","text":"Image management Applying Windows images Capturing Windows images Performing image cleanup Package management Adding packages Removing packages Feature management Enabling features Disabling features AppX package management AppX package documentation Adding AppX packages Removing AppX packages Capability management Adding capabilities Removing capabilities Driver management Adding drivers Removing drivers","title":"Available tasks"},{"location":"img_tasks/drivers/remove_driver/","text":"Removing drivers With DISMTools you can remove third-party drivers from a Windows image. This action can be accessed by clicking Commands > Drivers > Remove driver... Target OS support This action is supported on the following platforms: Platform Supported? Windows 7/Server 2008 R2 \u2714 Windows 8/Server 2012 \u2714 Windows 8.1/Server 2012 R2 \u2714 Windows 10/Server 2016/2019/2022 \u2714 Windows 11/Server vNext \u2714 This action is supported on DISMTools 0.3 and newer NOTE: this action is not supported on online installations Usage You need to specify driver packages and/or folders to remove from your Windows image. There are 4 view modes available: No boot-critical drivers, no inbox drivers (drivers part of the Windows distribution) Third-party drivers, boot-critical drivers, no inbox drivers Third-party drivers, no boot-critical drivers, inbox drivers Third-party drivers, boot-critical drivers and inbox drivers We recommend against removing boot-critical drivers and inbox drivers, as they may make the image unbootable. That's why the program won't show these drivers by default, unless you mark the Detect all drivers background process setting. Related topics Command-line help","title":"Removing drivers"},{"location":"img_tasks/drivers/remove_driver/#removing-drivers","text":"With DISMTools you can remove third-party drivers from a Windows image. This action can be accessed by clicking Commands > Drivers > Remove driver...","title":"Removing drivers"},{"location":"img_tasks/drivers/remove_driver/#target-os-support","text":"This action is supported on the following platforms: Platform Supported? Windows 7/Server 2008 R2 \u2714 Windows 8/Server 2012 \u2714 Windows 8.1/Server 2012 R2 \u2714 Windows 10/Server 2016/2019/2022 \u2714 Windows 11/Server vNext \u2714 This action is supported on DISMTools 0.3 and newer NOTE: this action is not supported on online installations","title":"Target OS support"},{"location":"img_tasks/drivers/remove_driver/#usage","text":"You need to specify driver packages and/or folders to remove from your Windows image. There are 4 view modes available: No boot-critical drivers, no inbox drivers (drivers part of the Windows distribution) Third-party drivers, boot-critical drivers, no inbox drivers Third-party drivers, no boot-critical drivers, inbox drivers Third-party drivers, boot-critical drivers and inbox drivers We recommend against removing boot-critical drivers and inbox drivers, as they may make the image unbootable. That's why the program won't show these drivers by default, unless you mark the Detect all drivers background process setting.","title":"Usage"},{"location":"img_tasks/drivers/remove_driver/#related-topics","text":"Command-line help","title":"Related topics"},{"location":"img_tasks/features/disable_feature/","text":"Disabling features With DISMTools you can disable features of an image to remove optional components to a Windows installation, or to cancel the addition of optional components previously not installed. This action can be accessed by clicking Commands > OS packages > Disable feature..., or by clicking the \"Disable feature...\" button. Target OS support This action is supported on the following platforms: Platform Supported? Windows 7/Server 2008 R2 \u2714 Windows 8/Server 2012 \u2714 Windows 8.1/Server 2012 R2 \u2714 Windows 10/Server 2016/2019/2022 \u2714 Windows 11/Server vNext \u2714 This action is supported on DISMTools 0.1.1 and newer Usage You need to specify the features you want to enable on your Windows image or installation, and specify settings in order to get the result you want. Options If the parent package is not a Windows Foundation package, the name of the parent package needs to be provided. You can perform a quick package lookup to specify the name of the parent package To remove features without removing their manifests from the image, check the \"Remove feature without removing manifest\" option. This will mark the selected features as \"Removed\" NOTE: if you're disabling features from an online installation, you may need to restart your system for the changes to take effect Related topics Command-line help","title":"Disabling features"},{"location":"img_tasks/features/disable_feature/#disabling-features","text":"With DISMTools you can disable features of an image to remove optional components to a Windows installation, or to cancel the addition of optional components previously not installed. This action can be accessed by clicking Commands > OS packages > Disable feature..., or by clicking the \"Disable feature...\" button.","title":"Disabling features"},{"location":"img_tasks/features/disable_feature/#target-os-support","text":"This action is supported on the following platforms: Platform Supported? Windows 7/Server 2008 R2 \u2714 Windows 8/Server 2012 \u2714 Windows 8.1/Server 2012 R2 \u2714 Windows 10/Server 2016/2019/2022 \u2714 Windows 11/Server vNext \u2714 This action is supported on DISMTools 0.1.1 and newer","title":"Target OS support"},{"location":"img_tasks/features/disable_feature/#usage","text":"You need to specify the features you want to enable on your Windows image or installation, and specify settings in order to get the result you want.","title":"Usage"},{"location":"img_tasks/features/disable_feature/#options","text":"If the parent package is not a Windows Foundation package, the name of the parent package needs to be provided. You can perform a quick package lookup to specify the name of the parent package To remove features without removing their manifests from the image, check the \"Remove feature without removing manifest\" option. This will mark the selected features as \"Removed\" NOTE: if you're disabling features from an online installation, you may need to restart your system for the changes to take effect","title":"Options"},{"location":"img_tasks/features/disable_feature/#related-topics","text":"Command-line help","title":"Related topics"},{"location":"img_tasks/features/enable_feature/","text":"Enabling features With DISMTools you can enable features of an image to add optional components to a Windows installation. This action can be accessed by clicking Commands > OS packages > Enable feature..., or by clicking the \"Enable feature...\" button. Target OS support This action is supported on the following platforms: Platform Supported? Windows 7/Server 2008 R2 \u2714 Windows 8/Server 2012 \u2714 Windows 8.1/Server 2012 R2 \u2714 Windows 10/Server 2016/2019/2022 \u2714 Windows 11/Server vNext \u2714 This action is supported on DISMTools 0.1.1 and newer Usage You need to specify the features you want to enable on your Windows image or installation, and specify settings in order to get the result you want. Options If the parent package is not a Windows Foundation package, the name of the parent package needs to be provided. You can perform a quick package lookup to specify the name of the parent package If a feature, whose state can be found in the list, has previously been removed from the image or installation; a feature source needs to be provided. You can browse your file system for an appropriate source, or get the source from group policy If you strictly want this operation to use the source and not Windows Update, untick the Windows Update contact option. Do note that this only applies to online installations If you want to enable all parent features of the specified features, tick the \"Enable all parent features\" option If you want, you can commit the image after enabling the features (Windows images only) Related topics Command-line help","title":"Enabling features"},{"location":"img_tasks/features/enable_feature/#enabling-features","text":"With DISMTools you can enable features of an image to add optional components to a Windows installation. This action can be accessed by clicking Commands > OS packages > Enable feature..., or by clicking the \"Enable feature...\" button.","title":"Enabling features"},{"location":"img_tasks/features/enable_feature/#target-os-support","text":"This action is supported on the following platforms: Platform Supported? Windows 7/Server 2008 R2 \u2714 Windows 8/Server 2012 \u2714 Windows 8.1/Server 2012 R2 \u2714 Windows 10/Server 2016/2019/2022 \u2714 Windows 11/Server vNext \u2714 This action is supported on DISMTools 0.1.1 and newer","title":"Target OS support"},{"location":"img_tasks/features/enable_feature/#usage","text":"You need to specify the features you want to enable on your Windows image or installation, and specify settings in order to get the result you want.","title":"Usage"},{"location":"img_tasks/features/enable_feature/#options","text":"If the parent package is not a Windows Foundation package, the name of the parent package needs to be provided. You can perform a quick package lookup to specify the name of the parent package If a feature, whose state can be found in the list, has previously been removed from the image or installation; a feature source needs to be provided. You can browse your file system for an appropriate source, or get the source from group policy If you strictly want this operation to use the source and not Windows Update, untick the Windows Update contact option. Do note that this only applies to online installations If you want to enable all parent features of the specified features, tick the \"Enable all parent features\" option If you want, you can commit the image after enabling the features (Windows images only)","title":"Options"},{"location":"img_tasks/features/enable_feature/#related-topics","text":"Command-line help","title":"Related topics"},{"location":"img_tasks/features/features/","text":"Image tasks With DISMTools you can perform a variety of tasks, which are organized depending on what action they perform to an image. Where do I find the tasks? Every task can be accessed from the \"Commands\" menu. You also have access to the most essential tasks in the center of the screen. Do note that these options become accessible when you create a project and mount an image to it. To do those actions, follow the Getting started guide for more information. Available tasks Image management Applying Windows images Capturing Windows images Performing image cleanup Package management Adding packages Removing packages Feature management Enabling features Disabling features AppX package management AppX package documentation Adding AppX packages Removing AppX packages Capability management Adding capabilities Removing capabilities Driver management Adding drivers Removing drivers","title":"Overview"},{"location":"img_tasks/features/features/#image-tasks","text":"With DISMTools you can perform a variety of tasks, which are organized depending on what action they perform to an image.","title":"Image tasks"},{"location":"img_tasks/features/features/#where-do-i-find-the-tasks","text":"Every task can be accessed from the \"Commands\" menu. You also have access to the most essential tasks in the center of the screen. Do note that these options become accessible when you create a project and mount an image to it. To do those actions, follow the Getting started guide for more information.","title":"Where do I find the tasks?"},{"location":"img_tasks/features/features/#available-tasks","text":"Image management Applying Windows images Capturing Windows images Performing image cleanup Package management Adding packages Removing packages Feature management Enabling features Disabling features AppX package management AppX package documentation Adding AppX packages Removing AppX packages Capability management Adding capabilities Removing capabilities Driver management Adding drivers Removing drivers","title":"Available tasks"},{"location":"img_tasks/info/appxpkg_info/","text":"AppX package information With DISMTools you can get the information about the installed AppX packages in Windows images and installations of every type. This action is supported on DISMTools 0.3.1 and newer. NOTE: this action is not supported on Windows images and installations earlier than Windows 8 or Server 2012 Usage When the dialog is launched for the first time in the execution of the program, you'll only see a listing of all AppX packages To get information about a specific AppX package, select it from the list . You'll then see that information on the right Do note that the amount of AppX packages that you see in the list depends on the configuration of background processes. Store logo asset information DISMTools tries to detect the main store logo asset when you select an AppX package. Do note that the program makes guesses as to what is the main asset, and those guesses may be incorrect. If you are given an incorrect store logo asset, please report an issue here . Do note that you need a GitHub account to report feedback. Related content Image information dialogs","title":"AppX package information"},{"location":"img_tasks/info/appxpkg_info/#appx-package-information","text":"With DISMTools you can get the information about the installed AppX packages in Windows images and installations of every type. This action is supported on DISMTools 0.3.1 and newer. NOTE: this action is not supported on Windows images and installations earlier than Windows 8 or Server 2012","title":"AppX package information"},{"location":"img_tasks/info/appxpkg_info/#usage","text":"When the dialog is launched for the first time in the execution of the program, you'll only see a listing of all AppX packages To get information about a specific AppX package, select it from the list . You'll then see that information on the right Do note that the amount of AppX packages that you see in the list depends on the configuration of background processes.","title":"Usage"},{"location":"img_tasks/info/appxpkg_info/#store-logo-asset-information","text":"DISMTools tries to detect the main store logo asset when you select an AppX package. Do note that the program makes guesses as to what is the main asset, and those guesses may be incorrect. If you are given an incorrect store logo asset, please report an issue here . Do note that you need a GitHub account to report feedback.","title":"Store logo asset information"},{"location":"img_tasks/info/appxpkg_info/#related-content","text":"Image information dialogs","title":"Related content"},{"location":"img_tasks/info/cap_info/","text":"Capability information With DISMTools you can get the information about the capabilities present in Windows images and installations of every type. This action is supported on DISMTools 0.3.1 and newer. NOTE: this action is not supported on Windows images and installations earlier than Windows 10 or Server 2016 Usage When no capabilities are selected or when the dialog is launched for the first time in the execution of the program, you'll only see brief information about all capabilities, which includes the capability identity and its state To get information about a specific capability, select it from the list . You'll then see that information on the right Information regarding download and install sizes In DISMTools versions from the 0.3 series that support this action (0.3.1-0.3.3) have an issue where the download and install sizes could overflow, returning negative values. This issue is caused by the managed DISM API library. DISMTools 0.4 is not affected by this issue due to it having an updated version of that library that fixes this issue. Related content Image information dialogs","title":"Capability information"},{"location":"img_tasks/info/cap_info/#capability-information","text":"With DISMTools you can get the information about the capabilities present in Windows images and installations of every type. This action is supported on DISMTools 0.3.1 and newer. NOTE: this action is not supported on Windows images and installations earlier than Windows 10 or Server 2016","title":"Capability information"},{"location":"img_tasks/info/cap_info/#usage","text":"When no capabilities are selected or when the dialog is launched for the first time in the execution of the program, you'll only see brief information about all capabilities, which includes the capability identity and its state To get information about a specific capability, select it from the list . You'll then see that information on the right","title":"Usage"},{"location":"img_tasks/info/cap_info/#information-regarding-download-and-install-sizes","text":"In DISMTools versions from the 0.3 series that support this action (0.3.1-0.3.3) have an issue where the download and install sizes could overflow, returning negative values. This issue is caused by the managed DISM API library. DISMTools 0.4 is not affected by this issue due to it having an updated version of that library that fixes this issue.","title":"Information regarding download and install sizes"},{"location":"img_tasks/info/cap_info/#related-content","text":"Image information dialogs","title":"Related content"},{"location":"img_tasks/info/drv_info/","text":"Driver information With DISMTools you can get the information about installed drivers, or about driver files that you want to add or are interested in learning more about. This supports Windows images and installations of every type. This action is supported on DISMTools 0.3.1 and newer. Usage When launching the dialog for the first time in the execution of the program, you'll see the main menu (shown in the screenshot above). From here you can access one of the 2 information modes by clicking its respective link: I want to get information about the installed drivers in the image opens the installed driver view. All installed drivers of the image or installation are shown in the list on the left side. To get information about an installed driver, select it from the list . You'll then see its information on the right I want to get information about driver files opens the driver file view. In this mode, you have to specify the drivers and add them to the list , which you can do by specifying them from the file picker, or by dropping them from an elevated program. If the program successfully detected information about a driver file, you'll be able to see its information by selecting it. Otherwise, the entry is automatically removed You can go back to the main screen by clicking the link on the top left NOTE: the amount of installed drivers that are listed is determined by the background process settings. By default, drivers that come with the Windows distribution aren't listed, to decrease the time background processes take when getting driver information. The program will give you the option to configure these processes to detect all drivers. Going through hardware targets A driver package (file) may target multiple devices. Thus, knowing more about a specific target may take a long time and be more complicated. When that is the case, DISMTools lets you easily go through all targets thanks to the controls on the top. The controls do the following: The Next button goes to the next hardware target. This button is disabled when you get to the last hardware target The Previous button goes to the previous hardware target. This button is disabled when you get to the first hardware target The Jump button lets you jump to a specific hardware target Saving this information You can save this information to a report file by clicking the Save button on the bottom right and specifying a target file. Do note that this option is disabled in the driver file view if no drivers were specified. Also note that, if you have background processes configured to not detect all drivers, you will be asked if you want to save the information of all of them. Related content Image information dialogs","title":"Driver information"},{"location":"img_tasks/info/drv_info/#driver-information","text":"With DISMTools you can get the information about installed drivers, or about driver files that you want to add or are interested in learning more about. This supports Windows images and installations of every type. This action is supported on DISMTools 0.3.1 and newer.","title":"Driver information"},{"location":"img_tasks/info/drv_info/#usage","text":"When launching the dialog for the first time in the execution of the program, you'll see the main menu (shown in the screenshot above). From here you can access one of the 2 information modes by clicking its respective link: I want to get information about the installed drivers in the image opens the installed driver view. All installed drivers of the image or installation are shown in the list on the left side. To get information about an installed driver, select it from the list . You'll then see its information on the right I want to get information about driver files opens the driver file view. In this mode, you have to specify the drivers and add them to the list , which you can do by specifying them from the file picker, or by dropping them from an elevated program. If the program successfully detected information about a driver file, you'll be able to see its information by selecting it. Otherwise, the entry is automatically removed You can go back to the main screen by clicking the link on the top left NOTE: the amount of installed drivers that are listed is determined by the background process settings. By default, drivers that come with the Windows distribution aren't listed, to decrease the time background processes take when getting driver information. The program will give you the option to configure these processes to detect all drivers.","title":"Usage"},{"location":"img_tasks/info/drv_info/#going-through-hardware-targets","text":"A driver package (file) may target multiple devices. Thus, knowing more about a specific target may take a long time and be more complicated. When that is the case, DISMTools lets you easily go through all targets thanks to the controls on the top. The controls do the following: The Next button goes to the next hardware target. This button is disabled when you get to the last hardware target The Previous button goes to the previous hardware target. This button is disabled when you get to the first hardware target The Jump button lets you jump to a specific hardware target","title":"Going through hardware targets"},{"location":"img_tasks/info/drv_info/#saving-this-information","text":"You can save this information to a report file by clicking the Save button on the bottom right and specifying a target file. Do note that this option is disabled in the driver file view if no drivers were specified. Also note that, if you have background processes configured to not detect all drivers, you will be asked if you want to save the information of all of them.","title":"Saving this information"},{"location":"img_tasks/info/drv_info/#related-content","text":"Image information dialogs","title":"Related content"},{"location":"img_tasks/info/feat_info/","text":"Feature information With DISMTools you can get the information about the features present in Windows images and installations of every type. This action is supported on DISMTools 0.3.1 and newer. Usage When no features are selected or when the dialog is launched for the first time in the execution of the program, you'll only see brief information about all features, which includes the feature name and its state To get information about a specific feature, select it from the list . You'll then see that information on the right Related content Image information dialogs","title":"Feature information"},{"location":"img_tasks/info/feat_info/#feature-information","text":"With DISMTools you can get the information about the features present in Windows images and installations of every type. This action is supported on DISMTools 0.3.1 and newer.","title":"Feature information"},{"location":"img_tasks/info/feat_info/#usage","text":"When no features are selected or when the dialog is launched for the first time in the execution of the program, you'll only see brief information about all features, which includes the feature name and its state To get information about a specific feature, select it from the list . You'll then see that information on the right","title":"Usage"},{"location":"img_tasks/info/feat_info/#related-content","text":"Image information dialogs","title":"Related content"},{"location":"img_tasks/info/img_info/","text":"Image information With DISMTools you can get the information of the currently mounted image, or any Windows image file you want, to view the details of an index. This action is supported on DISMTools 0.3.1 and later. Usage If you have loaded a project with an image mounted, the \"Currently mounted image\" option is checked by default. This option is disabled when you load a project with no images mounted, or when you are in the online installation management mode. You can always pick any image file by choosing the \"Another image\" option and specifying an image file The list view below will be populated with basic image index information. This information consists on the index and the image name that accompanies it. To view detailed information of an index, simply select it Saving this information You can also save this information by clicking the Save button on the bottom right and specifying the target path. Related content Image information dialogs","title":"Image file information"},{"location":"img_tasks/info/img_info/#image-information","text":"With DISMTools you can get the information of the currently mounted image, or any Windows image file you want, to view the details of an index. This action is supported on DISMTools 0.3.1 and later.","title":"Image information"},{"location":"img_tasks/info/img_info/#usage","text":"If you have loaded a project with an image mounted, the \"Currently mounted image\" option is checked by default. This option is disabled when you load a project with no images mounted, or when you are in the online installation management mode. You can always pick any image file by choosing the \"Another image\" option and specifying an image file The list view below will be populated with basic image index information. This information consists on the index and the image name that accompanies it. To view detailed information of an index, simply select it","title":"Usage"},{"location":"img_tasks/info/img_info/#saving-this-information","text":"You can also save this information by clicking the Save button on the bottom right and specifying the target path.","title":"Saving this information"},{"location":"img_tasks/info/img_info/#related-content","text":"Image information dialogs","title":"Related content"},{"location":"img_tasks/info/infodlgs/","text":"Information dialogs Like their names suggest, information dialogs let you easily get specific information from a Windows image or installation with powerful and easy to use interfaces. The overall action is supported on DISMTools 0.3.1 and newer. Available dialogs The following dialogs let you get specific information from a Windows image or installation: Dialog Purpose Remarks Image information Lets you get the information of any image file - Package information Lets you get the information of either installed packages or packages you want to add Capability information can't be obtained on Windows 8.1/Server 2012 R2 hosts Feature information Lets you get the information of all features present in a Windows image - AppX package information Lets you get the information of installed AppX packages This action is only supported on Windows 8 and newer systems You can't get information of the AppX packages you want to add Capability information Lets you get the information of all capabilities present in a Windows image This action is only supported on Windows 10 and newer Driver information Lets you get the information of either installed drivers or the driver packages you want to add The amount of installed drivers depends on the settings of the background processes Windows PE information Lets you get the information of the target path and the scratch space amount on a Windows PE image This action is only supported on Windows PE images Saving image information DISMTools 0.3.3 and later let you save this information to a file. This action will generate an image information report , which you can view at any time. DISMTools 0.4 expands this functionality by showing a preview of the information report after completing the process. It also lets you print it from said preview window.","title":"Overview"},{"location":"img_tasks/info/infodlgs/#information-dialogs","text":"Like their names suggest, information dialogs let you easily get specific information from a Windows image or installation with powerful and easy to use interfaces. The overall action is supported on DISMTools 0.3.1 and newer.","title":"Information dialogs"},{"location":"img_tasks/info/infodlgs/#available-dialogs","text":"The following dialogs let you get specific information from a Windows image or installation: Dialog Purpose Remarks Image information Lets you get the information of any image file - Package information Lets you get the information of either installed packages or packages you want to add Capability information can't be obtained on Windows 8.1/Server 2012 R2 hosts Feature information Lets you get the information of all features present in a Windows image - AppX package information Lets you get the information of installed AppX packages This action is only supported on Windows 8 and newer systems You can't get information of the AppX packages you want to add Capability information Lets you get the information of all capabilities present in a Windows image This action is only supported on Windows 10 and newer Driver information Lets you get the information of either installed drivers or the driver packages you want to add The amount of installed drivers depends on the settings of the background processes Windows PE information Lets you get the information of the target path and the scratch space amount on a Windows PE image This action is only supported on Windows PE images","title":"Available dialogs"},{"location":"img_tasks/info/infodlgs/#saving-image-information","text":"DISMTools 0.3.3 and later let you save this information to a file. This action will generate an image information report , which you can view at any time. DISMTools 0.4 expands this functionality by showing a preview of the information report after completing the process. It also lets you print it from said preview window.","title":"Saving image information"},{"location":"img_tasks/info/pkg_info/","text":"Package information With DISMTools you can get the information about installed packages, or about package files that you want to add or are interested in learning more about. This supports Windows images and installations of every type. This action is supported on DISMTools 0.3.1 and newer. NOTE: capability information can't be gathered on Windows versions earlier than Windows 10 or Server 2016 Usage When launching the dialog for the first time in the execution of the program, you'll see the main menu (shown in the screenshot above). From here you can access one of the 2 information modes by clicking its respective link: I want to get information about the installed packages in the image opens the installed package view. All installed packages of the image or installation are shown in the list on the left side. To get information about an installed package, select it from the list . You'll then see its information on the right I want to get information about package files opens the package file view. In this mode, you have to specify the packages and add them to the list , which you can do by specifying them from the file picker, or by dropping them from an elevated program. If the program successfully detected information about a package file, you'll be able to see its information by selecting it. Otherwise, the entry is automatically removed You can go back to the main screen by clicking the link on the top left Saving this information You can save this information to a report file by clicking the Save button on the bottom right and specifying a target file. Do note that this option is disabled in the package file view if no packages were specified. Questions Q: Why can't I drop files from a normal program? A: this is a common issue where you can't drop content from a non-elevated program to an elevated program. The workaround is to run the program you're dropping the content from as an administrator. If you opened the program from the Run dialog, you can easily launch it as Admin by holding the CTRL + Shift keys and pressing Enter Related content Image information dialogs","title":"Package information"},{"location":"img_tasks/info/pkg_info/#package-information","text":"With DISMTools you can get the information about installed packages, or about package files that you want to add or are interested in learning more about. This supports Windows images and installations of every type. This action is supported on DISMTools 0.3.1 and newer. NOTE: capability information can't be gathered on Windows versions earlier than Windows 10 or Server 2016","title":"Package information"},{"location":"img_tasks/info/pkg_info/#usage","text":"When launching the dialog for the first time in the execution of the program, you'll see the main menu (shown in the screenshot above). From here you can access one of the 2 information modes by clicking its respective link: I want to get information about the installed packages in the image opens the installed package view. All installed packages of the image or installation are shown in the list on the left side. To get information about an installed package, select it from the list . You'll then see its information on the right I want to get information about package files opens the package file view. In this mode, you have to specify the packages and add them to the list , which you can do by specifying them from the file picker, or by dropping them from an elevated program. If the program successfully detected information about a package file, you'll be able to see its information by selecting it. Otherwise, the entry is automatically removed You can go back to the main screen by clicking the link on the top left","title":"Usage"},{"location":"img_tasks/info/pkg_info/#saving-this-information","text":"You can save this information to a report file by clicking the Save button on the bottom right and specifying a target file. Do note that this option is disabled in the package file view if no packages were specified.","title":"Saving this information"},{"location":"img_tasks/info/pkg_info/#questions","text":"Q: Why can't I drop files from a normal program? A: this is a common issue where you can't drop content from a non-elevated program to an elevated program. The workaround is to run the program you're dropping the content from as an administrator. If you opened the program from the Run dialog, you can easily launch it as Admin by holding the CTRL + Shift keys and pressing Enter","title":"Questions"},{"location":"img_tasks/info/pkg_info/#related-content","text":"Image information dialogs","title":"Related content"},{"location":"img_tasks/info/winpe_info/","text":"Windows PE configuration information With DISMTools you can get the configuration of your Windows PE images, such as the target path and the scratch space. You can also set them up to your needs. This action is supported on DISMTools 0.3.2 and newer. Related content Image information dialogs Setting up the target path Setting up the scratch space","title":"Windows PE configuration information"},{"location":"img_tasks/info/winpe_info/#windows-pe-configuration-information","text":"With DISMTools you can get the configuration of your Windows PE images, such as the target path and the scratch space. You can also set them up to your needs. This action is supported on DISMTools 0.3.2 and newer.","title":"Windows PE configuration information"},{"location":"img_tasks/info/winpe_info/#related-content","text":"Image information dialogs Setting up the target path Setting up the scratch space","title":"Related content"},{"location":"img_tasks/packages/add_package/","text":"Adding packages With DISMTools you can add packages to add additional functionality and/or updates to a Windows image or installation. This action can be accessed by clicking Commands > OS packages > Add package..., or by clicking the \"Add package...\" button. Target OS support This action is supported on the following platforms: Platform Supported? Windows 7/Server 2008 R2 \u2714 Windows 8/Server 2012 \u2714 Windows 8.1/Server 2012 R2 \u2714 Windows 10/Server 2016/2019/2022 \u2714 Windows 11/Server vNext \u2714 This action is supported on all versions of DISMTools Usage You need to specify the source of the packages you want to add. Then, you can choose between scanning the source recursively for packages and adding them or choosing the ones you want to add from the list. Options Ignoring applicability checks is not recommended, because it will ignore all dependencies a package needs and will, in most cases, fail its addition If an operation requires that you boot to the image in order to finish (requires online operations), you can skip package installation If you want, you can commit the changes to the image after adding the packages Related topics Command-line help","title":"Adding packages"},{"location":"img_tasks/packages/add_package/#adding-packages","text":"With DISMTools you can add packages to add additional functionality and/or updates to a Windows image or installation. This action can be accessed by clicking Commands > OS packages > Add package..., or by clicking the \"Add package...\" button.","title":"Adding packages"},{"location":"img_tasks/packages/add_package/#target-os-support","text":"This action is supported on the following platforms: Platform Supported? Windows 7/Server 2008 R2 \u2714 Windows 8/Server 2012 \u2714 Windows 8.1/Server 2012 R2 \u2714 Windows 10/Server 2016/2019/2022 \u2714 Windows 11/Server vNext \u2714 This action is supported on all versions of DISMTools","title":"Target OS support"},{"location":"img_tasks/packages/add_package/#usage","text":"You need to specify the source of the packages you want to add. Then, you can choose between scanning the source recursively for packages and adding them or choosing the ones you want to add from the list.","title":"Usage"},{"location":"img_tasks/packages/add_package/#options","text":"Ignoring applicability checks is not recommended, because it will ignore all dependencies a package needs and will, in most cases, fail its addition If an operation requires that you boot to the image in order to finish (requires online operations), you can skip package installation If you want, you can commit the changes to the image after adding the packages","title":"Options"},{"location":"img_tasks/packages/add_package/#related-topics","text":"Command-line help","title":"Related topics"},{"location":"img_tasks/packages/packages/","text":"Image tasks With DISMTools you can perform a variety of tasks, which are organized depending on what action they perform to an image. Where do I find the tasks? Every task can be accessed from the \"Commands\" menu. You also have access to the most essential tasks in the center of the screen. Do note that these options become accessible when you create a project and mount an image to it. To do those actions, follow the Getting started guide for more information. Available tasks Image management Applying Windows images Capturing Windows images Performing image cleanup Package management Adding packages Removing packages Feature management Enabling features Disabling features AppX package management AppX package documentation Adding AppX packages Removing AppX packages Capability management Adding capabilities Removing capabilities Driver management Adding drivers Removing drivers","title":"Image tasks"},{"location":"img_tasks/packages/packages/#image-tasks","text":"With DISMTools you can perform a variety of tasks, which are organized depending on what action they perform to an image.","title":"Image tasks"},{"location":"img_tasks/packages/packages/#where-do-i-find-the-tasks","text":"Every task can be accessed from the \"Commands\" menu. You also have access to the most essential tasks in the center of the screen. Do note that these options become accessible when you create a project and mount an image to it. To do those actions, follow the Getting started guide for more information.","title":"Where do I find the tasks?"},{"location":"img_tasks/packages/packages/#available-tasks","text":"Image management Applying Windows images Capturing Windows images Performing image cleanup Package management Adding packages Removing packages Feature management Enabling features Disabling features AppX package management AppX package documentation Adding AppX packages Removing AppX packages Capability management Adding capabilities Removing capabilities Driver management Adding drivers Removing drivers","title":"Available tasks"},{"location":"img_tasks/packages/remove_package/","text":"Removing packages With DISMTools you can remove packages from a Windows image or installation. This action can be accessed by clicking Commands > OS packages > Remove package..., or by clicking the \"Remove package...\" button. Target OS support This action is supported on the following platforms: Platform Supported? Windows 7/Server 2008 R2 \u2714 Windows 8/Server 2012 \u2714 Windows 8.1/Server 2012 R2 \u2714 Windows 10/Server 2016/2019/2022 \u2714 Windows 11/Server vNext \u2714 This action is supported on DISMTools 0.1.1 and newer Usage You can either specify the names of installed packages to remove, or specify a package source and select the files you want to remove from the image or installation. NOTE: if you proceed with the latter option, you may select packages that aren't even installed in the image or installation. However, DISMTools will skip these Related topics Command-line help","title":"Removing packages"},{"location":"img_tasks/packages/remove_package/#removing-packages","text":"With DISMTools you can remove packages from a Windows image or installation. This action can be accessed by clicking Commands > OS packages > Remove package..., or by clicking the \"Remove package...\" button.","title":"Removing packages"},{"location":"img_tasks/packages/remove_package/#target-os-support","text":"This action is supported on the following platforms: Platform Supported? Windows 7/Server 2008 R2 \u2714 Windows 8/Server 2012 \u2714 Windows 8.1/Server 2012 R2 \u2714 Windows 10/Server 2016/2019/2022 \u2714 Windows 11/Server vNext \u2714 This action is supported on DISMTools 0.1.1 and newer","title":"Target OS support"},{"location":"img_tasks/packages/remove_package/#usage","text":"You can either specify the names of installed packages to remove, or specify a package source and select the files you want to remove from the image or installation. NOTE: if you proceed with the latter option, you may select packages that aren't even installed in the image or installation. However, DISMTools will skip these","title":"Usage"},{"location":"img_tasks/packages/remove_package/#related-topics","text":"Command-line help","title":"Related topics"},{"location":"img_tasks/tools/mimgmgr/","text":"Mounted image manager The mounted image manager allows you to manage your mounted images easily. You can perform the following tasks with this tool: Unmount a Windows image Reload the servicing session/repair the component store Enable write permissions of read-only mounted images Access the mount directory of an image Remove volume images (for images with multiple indexes) Load a mount directory to projects with no images loaded DISMTools 0.3 introduces a command-line version of this tool. For more information, check its dedicated page . Operations Unmounting a Windows image You can unmount a Windows image saving changes, discarding them, or with more settings; the last of which will open the image unmount dialog: For read-only mounted images, clicking this button will directly unmount the image discarding changes. For more information, go to the image unmount page. Reloading the servicing session/repairing the component store Depending on the state of the mounted image, the program will let you do one task or the other. If its status is Needs remount , you will be able to reload the servicing session of the mounted image If its status is Invalid , you may be able to repair the component store of the mounted image. The ability you have depends on whether the image can be repaired or not. If it can't be repaired, your only choice is to discard it Enabling write permissions If you want to make changes to a read-only mounted image, you need to enable write permissions . This process will unmount the image and then mount it with write permissions. Do note that the image must be present in its location and must not be in read-only media in order for this process to complete successfully. Accessing the mount directory This will open the mount directory in File Explorer, allowing you to browse the files of the Windows image. This is similar to an active installation, so don't delete any files you don't know what they do. Removing volume images If the mounted image contains more than 1 index, you are able to remove volume images from it easily. Specify the indexes to remove, and click OK. For more information, refer to the volume image removal page. Loading mounted images If you've opened a project with no images loaded, you can easily load the mounted image you want to the project.","title":"Mounted image manager"},{"location":"img_tasks/tools/mimgmgr/#mounted-image-manager","text":"The mounted image manager allows you to manage your mounted images easily. You can perform the following tasks with this tool: Unmount a Windows image Reload the servicing session/repair the component store Enable write permissions of read-only mounted images Access the mount directory of an image Remove volume images (for images with multiple indexes) Load a mount directory to projects with no images loaded DISMTools 0.3 introduces a command-line version of this tool. For more information, check its dedicated page .","title":"Mounted image manager"},{"location":"img_tasks/tools/mimgmgr/#operations","text":"","title":"Operations"},{"location":"img_tasks/tools/mimgmgr/#unmounting-a-windows-image","text":"You can unmount a Windows image saving changes, discarding them, or with more settings; the last of which will open the image unmount dialog: For read-only mounted images, clicking this button will directly unmount the image discarding changes. For more information, go to the image unmount page.","title":"Unmounting a Windows image"},{"location":"img_tasks/tools/mimgmgr/#reloading-the-servicing-sessionrepairing-the-component-store","text":"Depending on the state of the mounted image, the program will let you do one task or the other. If its status is Needs remount , you will be able to reload the servicing session of the mounted image If its status is Invalid , you may be able to repair the component store of the mounted image. The ability you have depends on whether the image can be repaired or not. If it can't be repaired, your only choice is to discard it","title":"Reloading the servicing session/repairing the component store"},{"location":"img_tasks/tools/mimgmgr/#enabling-write-permissions","text":"If you want to make changes to a read-only mounted image, you need to enable write permissions . This process will unmount the image and then mount it with write permissions. Do note that the image must be present in its location and must not be in read-only media in order for this process to complete successfully.","title":"Enabling write permissions"},{"location":"img_tasks/tools/mimgmgr/#accessing-the-mount-directory","text":"This will open the mount directory in File Explorer, allowing you to browse the files of the Windows image. This is similar to an active installation, so don't delete any files you don't know what they do.","title":"Accessing the mount directory"},{"location":"img_tasks/tools/mimgmgr/#removing-volume-images","text":"If the mounted image contains more than 1 index, you are able to remove volume images from it easily. Specify the indexes to remove, and click OK. For more information, refer to the volume image removal page.","title":"Removing volume images"},{"location":"img_tasks/tools/mimgmgr/#loading-mounted-images","text":"If you've opened a project with no images loaded, you can easily load the mounted image you want to the project.","title":"Loading mounted images"}]}